<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403792a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40347a00"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40347a00"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404c02b8"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4037ea30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x403ebdd8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x403ebdd8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4050d7c8"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x403ba098"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40cee6a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40cee6a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41043430"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x403c0230"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d27a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40d27a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404e0100"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x403c6ee8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b6b940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b6b940"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40761618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x403cb570"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b769d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40b769d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fa9de0"/></to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403ce298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b6d950"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b6d950"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40b67060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ffea40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fc6c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f6c548"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40947498"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b7f00"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40869300"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4075fe60"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40713298"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406fb438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f059f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404c0650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402d6408"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402d6408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403528a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c0c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409d7868"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c0c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40948e10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404c0c18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403e9868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403e9868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403e8c58"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404d8030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ed9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c1cd70"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ed9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ada480"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ed268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404ce880"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403f5490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404ce4d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403f5088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b7b6e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403f5088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403e76f0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403e76f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403fa688"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403e7ac0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403ed9c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403fecc0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x40402010"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40402010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4044d6b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403f7748"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403e7ac0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4041c2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4049b3b0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40413830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404664f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404664f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e1b3b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40419ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40469030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40469030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e47538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4041f0a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40479ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40479ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e76228"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404014b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4044c988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4044c988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d63538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40415c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4047a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4047a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7ade0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404008e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40454888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40454888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d95418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4040d0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404624f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404624f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dbc228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40411750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40464170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40464170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e16228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40417ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40473c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40473c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e42538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40404138"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40450968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40450968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d6b010"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40408750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404525d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404525d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d8f228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4040cea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40460170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40460170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de90b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4040f670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40463e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40463e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e110b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4041eea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404777d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404777d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e710b0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404263d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404afb68"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4041aa98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046bd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4046bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4044d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d66010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40406750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4045c250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4045c250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d8a0b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4041cee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a7b68"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40405c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40457228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40457228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dc3de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404122f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40466e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40466e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e1ad70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404188e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40469988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40469988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e45010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x4041fa98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404784f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404784f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e75c08"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40401ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4044b330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4044b330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d61010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404092f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40453250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40453250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d94de0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4040da98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40462e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40462e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dbbc08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40410210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40464ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40464ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e15c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40416750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404726b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404726b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e40010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40404b30"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4044f330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4044f330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d6a9e8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40407210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40452f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40452f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d8ec08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4040a8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40460ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40460ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de8a88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4041d8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40476170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40476170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e70a88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40414ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40467b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40467b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dec938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404194b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e499e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40420670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40479170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40479170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e787f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40426dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ac3b0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x40402a08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4044c030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4044c030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d659e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40405210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4045cba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4045cba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d89a88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40415210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046fdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4046fdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e7b418"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4040e670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40457b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40457b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dbe7f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40412ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404657d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404657d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e187f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404172f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40473330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40473330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e449e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4041e4b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40478e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40478e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e736c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403f9730"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40450010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40450010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d6d538"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40409ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40453ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40453ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d917f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4040c4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404617d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404617d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db96c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40410c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404634f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404634f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e136c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4041b900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404a43b0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4041a0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4046b3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e4c538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404142f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4045f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4045f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40de6538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40403590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4044fc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4044fc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d68538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40407c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40451890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40451890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d8c6c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40358100"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40358d60"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402d7720"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40365e88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407d4f20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4050d7c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40525798"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405039d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40519af8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40519af8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40546f20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x404ebea8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405097f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405097f0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405217f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x404e1710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4050a100"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4050a100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40522100"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x404e0798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40509178"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40509178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40521178"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404e6e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40509b48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40509b48"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4052f8b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x404fdb30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40516598"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40516598"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40533978"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404e0100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4050aac0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4050aac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40522ac0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40516010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40516010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405333f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x405084d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40516bb8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40516bb8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4053e010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40517288"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40517288"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40521b60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x404fe010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4051a130"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4051a130"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40547560"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40525798"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406ebc68"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4051d510"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4053a580"/></to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4053a580"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40935d18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405217f0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405d1e10"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4052f8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405d3cd0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40522100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405d2710"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40521178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405d1798"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4051e120"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4053b218"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4053b218"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409369b0"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40533978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x407244a0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40522ac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405d1100"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40547560"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409205e0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40518558"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40538908"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40538908"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40950890"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4051fd38"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4053ee18"/></to>
    </wire>
    <wire loc="274:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4053ee18"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40931520"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405333f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c8868"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4053e010"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40721c28"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40521b60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405d30b8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x405126d8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4053e728"/></to>
    </wire>
    <wire loc="198:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4053e728"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x408566a0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40546f20"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40905c08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406ebc68"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40724bb0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40935d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40944b40"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x4052d778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4066d7a0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40534eb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4065e420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4065e420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f02d38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x405d1e10"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x405d8d20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405d2710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405d9630"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x405d1798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x405d86a8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40537010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x406afcd8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x406afcd8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x406a8558"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40537b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40670528"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x407244a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40737238"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409369b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x409457d8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405d1100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405d8010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405d3cd0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405dac28"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409205e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40918af8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40950890"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409db400"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40931520"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4095f3d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c8868"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e1350"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40528ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40670c30"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40721c28"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4072fb60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405d30b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405da010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x4052d328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4066d408"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x408566a0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40868040"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40905c08"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40919100"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40575978"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4068d5a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4068d5a0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406ade78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40571b18"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40572800"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409205e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x4057dde0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40936010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40936010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40946e20"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x405dc908"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40564da0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405dd540"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x406285e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405dc4d0"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x4068b4f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x405d0290"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x4068b920"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40627010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4065e420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40628b08"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x4068cef8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4066dbc0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4068d5a0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x4066b398"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x406afcd8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4066a670"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4068fba0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4066ac40"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4068c270"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4066be20"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4068c6a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4068a260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406ed7c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x406ed7c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x406e9a58"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4068a830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40725890"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40725890"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x407238c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4068ac38"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x406ae7e0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x406ae7e0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x406a7010"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406ad0c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40725c18"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40725c18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40723cc8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x406eaea8"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40554ac8"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406ea3f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407252e0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407252e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x407232f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40724bb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40859680"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40859680"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40854be0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x407232f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x407216e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x407216e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4072f620"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407238c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40856308"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40856308"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40869c70"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40723cc8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40731380"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40731380"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4072c2a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40730a98"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c8868"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40731bf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40859ce0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40859ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408696c0"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40730240"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4091ecd0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4091ecd0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409152a8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4086bc10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408a4aa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408a4aa0"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408a09c8"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408541d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x406e8e98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x406e8e98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x406fb010"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4086edc0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408a4328"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408a4328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408a01b0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406ea9d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408a3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408a3010"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408a0ec0"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4089feb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40551d98"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x408a09c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4089c948"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4089c948"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408b6af8"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioReceive" scoped="" ref="0x408a0ec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4089cea0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4089cea0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408b3060"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x408a01b0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4093b9c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4093b9c0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40947818"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40899f08"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4055b750"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408993f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4089adf0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4089adf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408c68e8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408999d8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408c8390"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408c8390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408c6e40"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408c7960"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40556408"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408c8e58"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4090c150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x4090c150"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x40908010"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408c7458"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40938708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40938708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40946568"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409074f0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40551d98"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x40908010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409381b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409381b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40946010"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40908920"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40938b58"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40938b58"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409469b8"/></to>
    </wire>
    <wire loc="252:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4091d700"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40950890"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4091c090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40901638"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40901ef0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40936010"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4094e268"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x4054b078"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4094eb50"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409205e0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x405b7a58"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405b87e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409dd810"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405c5390"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405b87e8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x405bf740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x405b6b18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405e3658"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405db908"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x405e81a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x405d0290"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x405e89d8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x405dd540"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x405e7010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x405dc4d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x405e7448"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x405dc908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4065eb60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f01490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40671010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f01898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f01d58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406714c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40f00250"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f05d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f00848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406a78a8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405db908"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x406a6010"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x406ad0c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x406f5ed0"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x406fd6a8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x406fd6a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40713630"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x406f3f10"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407111b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407111b0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40710100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x406fb860"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x406ea3f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x406fbe40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x406ea9d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x406fa2f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x406eaea8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4072cb18"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40731bf8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40742140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40730a98"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40740ae0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40730240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x407427a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4072d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4072d330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40761618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x4073fd50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40761618"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40773628"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40773628"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40820600"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4075fe60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4076c060"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40771940"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x408490a0"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4076c060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4080a418"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4084e968"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4076d720"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40826a48"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4076c628"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4076c628"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4080a850"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40849a38"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40769010"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40769010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40808340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40808340"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f1aa88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4080a418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f1db28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4080a850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40f1c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f19c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407c9540"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c9540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407bf5f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40f16ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407c6878"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407c6878"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407d78d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40f158d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407c5418"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407c5418"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d6418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40f132e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407c2010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407c2010"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407d3398"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x408234d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4084bbc8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408685d0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4086edc0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40868d90"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x405b6b18"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40867450"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4086bc10"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408679a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408541d0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40879010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408732a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x40880718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40891528"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408a1378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408a3408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x4089f300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40891b00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408a1950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408a3800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4089f718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408a1010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4089feb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408a4010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408a1e48"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408b3570"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408993f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408af898"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40899f08"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408b3b50"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408999d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408b2010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408af368"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408b72a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x408b72a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x408d1cf8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x408ad8f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x408d3958"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x408d1438"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408b4730"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408b7f00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408e1940"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408c8e58"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408e1f20"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408c7458"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408e0ae0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408c7960"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408e0398"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x408da190"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x408e5e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x408e5e70"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e4b48"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4090b938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4090ca20"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40908920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4090d980"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4090a760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4090d170"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090bf10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4090ce18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40908d38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4090b5d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409074f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4090c628"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x40908508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x4090d668"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4090a428"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409126e0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4091c090"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40914330"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4091d700"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40914d68"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4091b7f8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4091b7f8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40771940"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40915b80"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x4093d0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x4093d0b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40932100"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40941010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x409db400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40afd570"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40954638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4094e268"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40954e08"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b42e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b42e00"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x409514d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b3d3e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b3d3e0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40951b90"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b3ca30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketFlag" scoped="" ref="0x40b3ca30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409703a8"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x4094eb50"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40956cc0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x409db400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4096e1b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409dd810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ae0c88"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x4095e6c8"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x409e2288"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409e2288"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404008e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4095d148"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x409e2ca8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409e2ca8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409e8588"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409597c0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x409df460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409df460"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x409e6748"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40959e38"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x409dfad8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409dfad8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40405210"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x4095c860"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x409de580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409de580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x404014b0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409559c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x409dd010"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409dd010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x409d71e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4096fa70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x405b6b18"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40956208"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b41010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ae0c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40f94c40"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x409e6748"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x409e7db8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40afd570"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b21f18"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x409d5d00"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40410c08"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x409f2758"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x40411750"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x409f4f08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40a80b28"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a80b28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40a94258"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a06dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a01450"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409e63a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x409e7a30"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409d8710"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409e76d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x409e8588"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a01b80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x409fe8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a68ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a68ec0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f6b908"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a11010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40a66a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a66a20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f6a470"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a12bc8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40a2b2e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40a2b2e8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40a4d6c0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a11490"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403663e0"/></to>
    </wire>
    <wire loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a20548"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40a46ce0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403663e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40a484d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404008e0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40a48ea8"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404092f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40a478d0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40409ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40a462e0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40408750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40a66618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f6a068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f6a930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40a66ed0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40f6ad58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f6c880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f69430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40a7bdf0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x40a95530"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40a624a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a74230"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40a7ad50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40a91128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40a7ad50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40a90d20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40a7ad50"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40a8d950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40f92630"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a624a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40f8f880"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40a7ad50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ada868"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a624a8"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b1f8c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b0ce60"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b220e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40af9688"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40af9688"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b1ae90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b0f078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a624a8"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b7b6e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b6acf0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b67d28"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40b7d8e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40b7d8e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40404b30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b66740"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40b7c308"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40b7c308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40404138"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b65200"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40b7cd10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40b7cd10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403f9730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40fa9de0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b95010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40b95010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b937f8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40cc9518"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b92e28"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40b92e28"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cbc118"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cc6160"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b923d0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b923d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cbd940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40cbc118"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fd8ec0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40cbd940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fdd068"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="AdcConfig" scoped="" ref="0x40cbccf0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ccbb28"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ccbb28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cc8688"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <from><interface-ref name="EnablePin" scoped="" ref="0x40cba250"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x40cb12e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40cb12e0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404172f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40fdd068"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fc3170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40fda7e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40fdc310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40fdc310"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffc3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40fdb7d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fd8800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fda150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fddbb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fddbb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fc3cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualRead" scoped="" ref="0x40fd4eb8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40fd0b78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReadNow" scoped="" ref="0x40fd0b78"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40c24010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40fd62c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fceb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40fceb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40761618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AnalogDeviceResource" scoped="" ref="0x40fd7af8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fd0450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40fd0450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c21838"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40fcf780"/></from>
      <to><interface-ref name="AdcConfig" scoped="" ref="0x40cbccf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EnablePin" scoped="" ref="0x40fd44d0"/></from>
      <to><interface-ref name="EnablePin" scoped="" ref="0x40cba250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40fdd7a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40fc38b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ffc8b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40fdc7c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40ffccd8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40fc4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40ffaf28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x41019970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fdb7d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41019f28"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40fdbd90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41018250"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fda150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x410188e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40fda7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x41018d20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x41017190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="readDoneTask" scoped="" ref="0x40fd2ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stopDone" scoped="" ref="0x40fd2ee8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c23010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40fcf780"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c1c100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40fcfc58"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40c25028"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c938c0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40c24010"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40c90598"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c99218"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c23848"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c8fab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c23010"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40c9a5e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c925f8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c8f238"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c19300"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c19300"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c3f678"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c15870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c3fc00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c21838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c44760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c44760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41035010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c40e28"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c1c100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c34498"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c1b9f8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c1b9f8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c42730"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c3d968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ed268"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40c78da8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c3f1e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c77548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c402e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c402e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41035b58"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c6bb40"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403663e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c44ea0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41035750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c40978"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41034230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410346f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c40e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41034b18"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40ffed78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41033d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x410573b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c78da8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x410577a8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40c77230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41057ac0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c77548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41056230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40c77be0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40c851e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x40cb97e0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x40405c08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40cda290"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x40cdb960"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40cb5650"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x4040da98"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40cb3490"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x4040a8e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40cdae80"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x40cd74e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x40cdc638"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40cd7c88"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40cb61f0"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x4040e670"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x40cb4050"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x4040c4b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x40cda6e0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40cdbd30"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40cb3e68"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x404142f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x40cdca08"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40cd6090"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40cb1cc8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40417ce8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40cb6bc8"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x4040d0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40cb4a28"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x4040cea8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x40cdaab0"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x40cd7118"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40cb2860"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404188e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40cdc268"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x40cd78b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40cdcdd8"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x40cd6460"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40cb0740"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x40416750"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x40cc8c88"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40cda6e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41043430"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4103b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ceed38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41043ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41043ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404e6e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d2a3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41042230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41042230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40d29010"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41042e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41042e28"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4103b6d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d03680"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4103bd70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40d03680"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cfd538"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40cfdca8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x404e1710"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d333f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d32010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404e6e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40d326e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40d32b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40d27d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404e6e50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d254d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.5 2009/02/04 19:31:43 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="24(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="73(RF230RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="32(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <module/>
    </component>
    <component qname="PacketLinkLayerC" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PacketLinkLayerC.DelayTimerC" loc="36(PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40768b68"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="24(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="SoftwareAckLayerC.MetadataFlagC" loc="24(SoftwareAckLayerC.MetadataFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="24(RF230RadioC.CsmaLayerC):/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC.TimeStampFlagC" loc="24(TimeStampingLayerC.TimeStampFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="1">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="24:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.6 2009/03/09 18:12:58 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.11 2009/09/09 19:44:16 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230DriverLayerC.TransmitPowerFlagC" loc="24(RF230DriverLayerC.TransmitPowerFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="2">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.RSSIFlagC" loc="24(RF230DriverLayerC.RSSIFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="3">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC.TimeSyncFlagC" loc="24(RF230DriverLayerC.TimeSyncFlagC):/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <instance number="4">
        <component-ref qname="MetadataFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="16(OscilloscopeAppC.Sensor):/opt/tinyos-2.x/tos/sensorboards/mda100/DemoSensorC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/sensorboards/mda100/DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.Sensor" loc="18(OscilloscopeAppC.Sensor.Sensor):/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP" loc="39:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC" loc="37(PhotoImplP.SharedAnalogDeviceC):/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceC"/>
        <arguments>
          <value cst="S:mda100.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter" loc="79(PhotoImplP.SharedAnalogDeviceC.Arbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue" loc="32(PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter" loc="52(PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager" loc="57(PhotoImplP.SharedAnalogDeviceC.PowerManager):/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager" loc="48(PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager):/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice" loc="37(PhotoImplP.SharedAnalogDeviceC.AnalogDevice):/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SharedAnalogDeviceP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.Adc" loc="21(PhotoImplP.SharedAnalogDeviceC.Adc):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadNowClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="73:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC" loc="36(PhotoImplP.SharedAnalogDeviceC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempConfigC" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempConfigP" loc="14:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigP.nc">
        <short>&#10; MDA100 photo and temp sensor ADC configuration.</short>
        <long>&#10; MDA100 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC" loc="39(OscilloscopeAppC.AMSenderC.SenderC):/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40423be8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40423e00" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4042b030" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40432f08" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4042f148" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4042f370" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4042f560" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4047c3d0" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4047c5f8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4047c820" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4047ca10" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4062f4c0" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4063a228" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40768b68" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40768b68"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40768d28" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40776ec0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40776ec0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x4078b0d0" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40804328" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40804328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40822830" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40822830"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40822a10" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40847010" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40847010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MetadataFlagC" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40adbc30" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40adbc30"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40adbe50" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40add930" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40add930"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40addd78" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40addd78"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40af3010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b1b470" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b1b470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b1b8b8" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b1b8b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40b0a5d0" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40b0a5d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40b0aa30" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40b0aa30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40b0ac98" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40b0ac98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40b09148" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40b09148"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40b093b0" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40b09838" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40b09838"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="16:/opt/tinyos-2.x/tos/sensorboards/mda100/DemoSensorC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/sensorboards/mda100/DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/mda100.h">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SharedAnalogDeviceC" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b8f2f0" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
        <constant name="startup_delay" ref="0x40b8f548" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
          <component-ref qname="SharedAnalogDeviceC"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40b85128" loc="79:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40ba62d0" loc="32:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40ba7ca8" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SharedAnalogDeviceP" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
        <short>&#10; </short>
        <long>&#10; @author Kevin Klues &#60;klueska@cs.stanford.edu>&#10; @date August 20th, 2007&#10;</long>
      </documentation>
      <parameters>
        <constant name="startup_delay" ref="0x40bf8d40" loc="37:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
          <component-ref qname="SharedAnalogDeviceP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadNowClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
        <short>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.</short>
        <long>&#10; Provide, as per TEP101, Resource-based access to the Atmega128 ADC via a&#10; ReadNow interface.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40c94c88" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40c94c88"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40b71ee8" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40cebaa8" loc="39:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ce6568" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40d00b18" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d28318" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x403792a0" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403792a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40379478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x403ba098" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x403ba098"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403ba270"/>
        <function-ref name="getPayload" scoped="" ref="0x403ba350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403ba430"/>
        <function-ref name="cancel" scoped="" ref="0x403ba510"/>
        <function-ref name="sendDone" scoped="" ref="0x403ba5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4037ea30" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4037ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4037ec08"/>
        <function-ref name="stopDone" scoped="" ref="0x4037ece8"/>
        <function-ref name="start" scoped="" ref="0x4037edc8"/>
        <function-ref name="stop" scoped="" ref="0x4037eea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x403cb570" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x403cb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x403cbb98"/>
        <function-ref name="readDone" scoped="" ref="0x403cbdf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x403c0230" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x403c0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x403c0408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403ce298" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403ce298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403ce470"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403ce550"/>
        <function-ref name="led1On" scoped="" ref="0x403ce630"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403ce710"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403ce7f0"/>
        <function-ref name="get" scoped="" ref="0x403ce8d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403ce9b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403ced30"/>
        <function-ref name="set" scoped="" ref="0x403cea90"/>
        <function-ref name="led0On" scoped="" ref="0x403ceb70"/>
        <function-ref name="led2On" scoped="" ref="0x403cec50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x403c6ee8" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x403c6ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4037da18"/>
        <function-ref name="fired" scoped="" ref="0x4037acb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4037d3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4037d180"/>
        <function-ref name="getdt" scoped="" ref="0x4037dec8"/>
        <function-ref name="gett0" scoped="" ref="0x4037dc70"/>
        <function-ref name="isRunning" scoped="" ref="0x4037af08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4037a558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4037d6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4037a7d8"/>
        <function-ref name="stop" scoped="" ref="0x4037aa58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x403ea630" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403ea630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ea808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40347a00" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40347a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40347bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403ed9c8" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403ed9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403edba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403e9868" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403e9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e9a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403ed268" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403ed268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403ed440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403ed520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403ed600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403ed6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403ed7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403f5088" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403f5088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403e8c58" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403e8c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403f5490" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403f5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403e7ac0" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403e7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403e76f0" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403e76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403e78c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403f7748" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403f7748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403fecc0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403fecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fee98"/>
        <function-ref name="isInput" scoped="" ref="0x403f7010"/>
        <function-ref name="toggle" scoped="" ref="0x403f70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f71d0"/>
        <function-ref name="get" scoped="" ref="0x403f72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f7390"/>
        <function-ref name="set" scoped="" ref="0x403f7470"/>
        <function-ref name="clr" scoped="" ref="0x403f7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403fa688" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403fa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fa860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4041c2f0" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4041c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4041c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4041c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4041c968"/>
        <function-ref name="get" scoped="" ref="0x4041ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041cb28"/>
        <function-ref name="set" scoped="" ref="0x4041cc08"/>
        <function-ref name="clr" scoped="" ref="0x4041cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40413830" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40413830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413a08"/>
        <function-ref name="isInput" scoped="" ref="0x40413ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40413bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40413ca8"/>
        <function-ref name="get" scoped="" ref="0x40413d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413e68"/>
        <function-ref name="set" scoped="" ref="0x40412010"/>
        <function-ref name="clr" scoped="" ref="0x404120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40419ea8" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40419ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404180c0"/>
        <function-ref name="isInput" scoped="" ref="0x404181a0"/>
        <function-ref name="toggle" scoped="" ref="0x40418280"/>
        <function-ref name="isOutput" scoped="" ref="0x40418360"/>
        <function-ref name="get" scoped="" ref="0x40418440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418520"/>
        <function-ref name="set" scoped="" ref="0x40418600"/>
        <function-ref name="clr" scoped="" ref="0x404186e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4041f0a0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4041f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f278"/>
        <function-ref name="isInput" scoped="" ref="0x4041f358"/>
        <function-ref name="toggle" scoped="" ref="0x4041f438"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f518"/>
        <function-ref name="get" scoped="" ref="0x4041f5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f6d8"/>
        <function-ref name="set" scoped="" ref="0x4041f7b8"/>
        <function-ref name="clr" scoped="" ref="0x4041f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404014b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404014b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40401688"/>
        <function-ref name="isInput" scoped="" ref="0x40401768"/>
        <function-ref name="toggle" scoped="" ref="0x40401848"/>
        <function-ref name="isOutput" scoped="" ref="0x40401928"/>
        <function-ref name="get" scoped="" ref="0x40401a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401ae8"/>
        <function-ref name="set" scoped="" ref="0x40401bc8"/>
        <function-ref name="clr" scoped="" ref="0x40401ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40415c08" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40415c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415de0"/>
        <function-ref name="isInput" scoped="" ref="0x40415ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40420010"/>
        <function-ref name="isOutput" scoped="" ref="0x404200f0"/>
        <function-ref name="get" scoped="" ref="0x404201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404202b0"/>
        <function-ref name="set" scoped="" ref="0x40420390"/>
        <function-ref name="clr" scoped="" ref="0x40420470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404008e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404008e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40400b98"/>
        <function-ref name="toggle" scoped="" ref="0x40400c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40400d58"/>
        <function-ref name="get" scoped="" ref="0x40400e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400f18"/>
        <function-ref name="set" scoped="" ref="0x40409010"/>
        <function-ref name="clr" scoped="" ref="0x404090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4040d0a0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4040d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d278"/>
        <function-ref name="isInput" scoped="" ref="0x4040d358"/>
        <function-ref name="toggle" scoped="" ref="0x4040d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d518"/>
        <function-ref name="get" scoped="" ref="0x4040d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d6d8"/>
        <function-ref name="set" scoped="" ref="0x4040d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4040d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40411750" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40411750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40411928"/>
        <function-ref name="isInput" scoped="" ref="0x40411a08"/>
        <function-ref name="toggle" scoped="" ref="0x40411ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40411bc8"/>
        <function-ref name="get" scoped="" ref="0x40411ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411d88"/>
        <function-ref name="set" scoped="" ref="0x40411e68"/>
        <function-ref name="clr" scoped="" ref="0x40410010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40417ce8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40417ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40416010"/>
        <function-ref name="toggle" scoped="" ref="0x404160f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404161d0"/>
        <function-ref name="get" scoped="" ref="0x404162b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416390"/>
        <function-ref name="set" scoped="" ref="0x40416470"/>
        <function-ref name="clr" scoped="" ref="0x40416550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40404138" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40404138"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404310"/>
        <function-ref name="isInput" scoped="" ref="0x404043f0"/>
        <function-ref name="toggle" scoped="" ref="0x404044d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404045b0"/>
        <function-ref name="get" scoped="" ref="0x40404690"/>
        <function-ref name="makeOutput" scoped="" ref="0x40404770"/>
        <function-ref name="set" scoped="" ref="0x40404850"/>
        <function-ref name="clr" scoped="" ref="0x40404930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40408750" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40408750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40408928"/>
        <function-ref name="isInput" scoped="" ref="0x40408a08"/>
        <function-ref name="toggle" scoped="" ref="0x40408ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40408bc8"/>
        <function-ref name="get" scoped="" ref="0x40408ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408d88"/>
        <function-ref name="set" scoped="" ref="0x40408e68"/>
        <function-ref name="clr" scoped="" ref="0x40407010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4040cea8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4040cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4040a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4040a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a360"/>
        <function-ref name="get" scoped="" ref="0x4040a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a520"/>
        <function-ref name="set" scoped="" ref="0x4040a600"/>
        <function-ref name="clr" scoped="" ref="0x4040a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4040f670" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4040f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f848"/>
        <function-ref name="isInput" scoped="" ref="0x4040f928"/>
        <function-ref name="toggle" scoped="" ref="0x4040fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4040fae8"/>
        <function-ref name="get" scoped="" ref="0x4040fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fca8"/>
        <function-ref name="set" scoped="" ref="0x4040fd88"/>
        <function-ref name="clr" scoped="" ref="0x4040fe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4041eea8" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4041eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4041d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4041d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d360"/>
        <function-ref name="get" scoped="" ref="0x4041d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d520"/>
        <function-ref name="set" scoped="" ref="0x4041d600"/>
        <function-ref name="clr" scoped="" ref="0x4041d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404263d0" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404263d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404265a8"/>
        <function-ref name="isInput" scoped="" ref="0x40426688"/>
        <function-ref name="toggle" scoped="" ref="0x40426768"/>
        <function-ref name="isOutput" scoped="" ref="0x40426848"/>
        <function-ref name="get" scoped="" ref="0x40426928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426a08"/>
        <function-ref name="set" scoped="" ref="0x40426ae8"/>
        <function-ref name="clr" scoped="" ref="0x40426bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4041aa98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4041aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4041ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4041ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4041af10"/>
        <function-ref name="get" scoped="" ref="0x40419010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404190f0"/>
        <function-ref name="set" scoped="" ref="0x404191d0"/>
        <function-ref name="clr" scoped="" ref="0x404192b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40402010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40402010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404021e8"/>
        <function-ref name="isInput" scoped="" ref="0x404022c8"/>
        <function-ref name="toggle" scoped="" ref="0x404023a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40402488"/>
        <function-ref name="get" scoped="" ref="0x40402568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40402648"/>
        <function-ref name="set" scoped="" ref="0x40402728"/>
        <function-ref name="clr" scoped="" ref="0x40402808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40406750" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40406750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40406928"/>
        <function-ref name="isInput" scoped="" ref="0x40406a08"/>
        <function-ref name="toggle" scoped="" ref="0x40406ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40406bc8"/>
        <function-ref name="get" scoped="" ref="0x40406ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406d88"/>
        <function-ref name="set" scoped="" ref="0x40406e68"/>
        <function-ref name="clr" scoped="" ref="0x40405010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4041cee8" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4041cee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041b0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4041b1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4041b2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041b380"/>
        <function-ref name="get" scoped="" ref="0x4041b460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041b540"/>
        <function-ref name="set" scoped="" ref="0x4041b620"/>
        <function-ref name="clr" scoped="" ref="0x4041b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40405c08" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40405c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405de0"/>
        <function-ref name="isInput" scoped="" ref="0x40405ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4040e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e0f0"/>
        <function-ref name="get" scoped="" ref="0x4040e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e2b0"/>
        <function-ref name="set" scoped="" ref="0x4040e390"/>
        <function-ref name="clr" scoped="" ref="0x4040e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404122f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404124c8"/>
        <function-ref name="isInput" scoped="" ref="0x404125a8"/>
        <function-ref name="toggle" scoped="" ref="0x40412688"/>
        <function-ref name="isOutput" scoped="" ref="0x40412768"/>
        <function-ref name="get" scoped="" ref="0x40412848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412928"/>
        <function-ref name="set" scoped="" ref="0x40412a08"/>
        <function-ref name="clr" scoped="" ref="0x40412ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404188e0" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404188e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40418b98"/>
        <function-ref name="toggle" scoped="" ref="0x40418c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40418d58"/>
        <function-ref name="get" scoped="" ref="0x40418e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418f18"/>
        <function-ref name="set" scoped="" ref="0x40417010"/>
        <function-ref name="clr" scoped="" ref="0x404170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x4041fa98" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x4041fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fc70"/>
        <function-ref name="isInput" scoped="" ref="0x4041fd50"/>
        <function-ref name="toggle" scoped="" ref="0x4041fe30"/>
        <function-ref name="isOutput" scoped="" ref="0x4041ff10"/>
        <function-ref name="get" scoped="" ref="0x4041e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e0f0"/>
        <function-ref name="set" scoped="" ref="0x4041e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4041e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40401ea8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40401ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404000c0"/>
        <function-ref name="isInput" scoped="" ref="0x404001a0"/>
        <function-ref name="toggle" scoped="" ref="0x40400280"/>
        <function-ref name="isOutput" scoped="" ref="0x40400360"/>
        <function-ref name="get" scoped="" ref="0x40400440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400520"/>
        <function-ref name="set" scoped="" ref="0x40400600"/>
        <function-ref name="clr" scoped="" ref="0x404006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404092f0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404092f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404094c8"/>
        <function-ref name="isInput" scoped="" ref="0x404095a8"/>
        <function-ref name="toggle" scoped="" ref="0x40409688"/>
        <function-ref name="isOutput" scoped="" ref="0x40409768"/>
        <function-ref name="get" scoped="" ref="0x40409848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409928"/>
        <function-ref name="set" scoped="" ref="0x40409a08"/>
        <function-ref name="clr" scoped="" ref="0x40409ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4040da98" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4040da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4040dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4040de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4040df10"/>
        <function-ref name="get" scoped="" ref="0x4040c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c0f0"/>
        <function-ref name="set" scoped="" ref="0x4040c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4040c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40410210" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40410210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404103e8"/>
        <function-ref name="isInput" scoped="" ref="0x404104c8"/>
        <function-ref name="toggle" scoped="" ref="0x404105a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40410688"/>
        <function-ref name="get" scoped="" ref="0x40410768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40410848"/>
        <function-ref name="set" scoped="" ref="0x40410928"/>
        <function-ref name="clr" scoped="" ref="0x40410a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40416750" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40416750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416928"/>
        <function-ref name="isInput" scoped="" ref="0x40416a08"/>
        <function-ref name="toggle" scoped="" ref="0x40416ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40416bc8"/>
        <function-ref name="get" scoped="" ref="0x40416ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416d88"/>
        <function-ref name="set" scoped="" ref="0x40416e68"/>
        <function-ref name="clr" scoped="" ref="0x40415010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40404b30" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40404b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404d08"/>
        <function-ref name="isInput" scoped="" ref="0x40404de8"/>
        <function-ref name="toggle" scoped="" ref="0x40404ec8"/>
        <function-ref name="isOutput" scoped="" ref="0x40403010"/>
        <function-ref name="get" scoped="" ref="0x404030f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404031d0"/>
        <function-ref name="set" scoped="" ref="0x404032b0"/>
        <function-ref name="clr" scoped="" ref="0x40403390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40407210" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40407210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407468"/>
        <function-ref name="isInput" scoped="" ref="0x40407548"/>
        <function-ref name="toggle" scoped="" ref="0x40407628"/>
        <function-ref name="isOutput" scoped="" ref="0x40407708"/>
        <function-ref name="get" scoped="" ref="0x404077e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404078c8"/>
        <function-ref name="set" scoped="" ref="0x404079a8"/>
        <function-ref name="clr" scoped="" ref="0x40407a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4040a8e0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4040a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4040ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4040ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ad58"/>
        <function-ref name="get" scoped="" ref="0x4040ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040af18"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
        <function-ref name="clr" scoped="" ref="0x404140f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4041d8e0" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4041d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4041db98"/>
        <function-ref name="toggle" scoped="" ref="0x4041dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4041dd58"/>
        <function-ref name="get" scoped="" ref="0x4041de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041df18"/>
        <function-ref name="set" scoped="" ref="0x4041c010"/>
        <function-ref name="clr" scoped="" ref="0x4041c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40414ce8" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40414ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413010"/>
        <function-ref name="isInput" scoped="" ref="0x404130f0"/>
        <function-ref name="toggle" scoped="" ref="0x404131d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404132b0"/>
        <function-ref name="get" scoped="" ref="0x40413390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413470"/>
        <function-ref name="set" scoped="" ref="0x40413550"/>
        <function-ref name="clr" scoped="" ref="0x40413630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404194b0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404194b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419688"/>
        <function-ref name="isInput" scoped="" ref="0x40419768"/>
        <function-ref name="toggle" scoped="" ref="0x40419848"/>
        <function-ref name="isOutput" scoped="" ref="0x40419928"/>
        <function-ref name="get" scoped="" ref="0x40419a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419ae8"/>
        <function-ref name="set" scoped="" ref="0x40419bc8"/>
        <function-ref name="clr" scoped="" ref="0x40419ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40420670" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40420670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420848"/>
        <function-ref name="isInput" scoped="" ref="0x40420928"/>
        <function-ref name="toggle" scoped="" ref="0x40420a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40420ae8"/>
        <function-ref name="get" scoped="" ref="0x40420bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420ca8"/>
        <function-ref name="set" scoped="" ref="0x40420d88"/>
        <function-ref name="clr" scoped="" ref="0x40420e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40426dc8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40426dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425010"/>
        <function-ref name="isInput" scoped="" ref="0x404250f0"/>
        <function-ref name="toggle" scoped="" ref="0x404251d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404252b0"/>
        <function-ref name="get" scoped="" ref="0x40425390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425470"/>
        <function-ref name="set" scoped="" ref="0x40425550"/>
        <function-ref name="clr" scoped="" ref="0x40425630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x40402a08" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x40402a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40402be0"/>
        <function-ref name="isInput" scoped="" ref="0x40402cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40402da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40402e80"/>
        <function-ref name="get" scoped="" ref="0x40401010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404010f0"/>
        <function-ref name="set" scoped="" ref="0x404011d0"/>
        <function-ref name="clr" scoped="" ref="0x404012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40405210" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40405210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404053e8"/>
        <function-ref name="isInput" scoped="" ref="0x404054c8"/>
        <function-ref name="toggle" scoped="" ref="0x404055a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40405688"/>
        <function-ref name="get" scoped="" ref="0x40405768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405848"/>
        <function-ref name="set" scoped="" ref="0x40405928"/>
        <function-ref name="clr" scoped="" ref="0x40405a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40415210" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40415210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404153e8"/>
        <function-ref name="isInput" scoped="" ref="0x404154c8"/>
        <function-ref name="toggle" scoped="" ref="0x404155a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40415688"/>
        <function-ref name="get" scoped="" ref="0x40415768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415848"/>
        <function-ref name="set" scoped="" ref="0x40415928"/>
        <function-ref name="clr" scoped="" ref="0x40415a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4040e670" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4040e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e848"/>
        <function-ref name="isInput" scoped="" ref="0x4040e928"/>
        <function-ref name="toggle" scoped="" ref="0x4040ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4040eae8"/>
        <function-ref name="get" scoped="" ref="0x4040ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040eca8"/>
        <function-ref name="set" scoped="" ref="0x4040ed88"/>
        <function-ref name="clr" scoped="" ref="0x4040ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40412ce8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40412ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40411010"/>
        <function-ref name="toggle" scoped="" ref="0x404110f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404111d0"/>
        <function-ref name="get" scoped="" ref="0x404112b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40411390"/>
        <function-ref name="set" scoped="" ref="0x40411470"/>
        <function-ref name="clr" scoped="" ref="0x40411550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404172f0" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404172f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404174c8"/>
        <function-ref name="isInput" scoped="" ref="0x404175a8"/>
        <function-ref name="toggle" scoped="" ref="0x40417688"/>
        <function-ref name="isOutput" scoped="" ref="0x40417768"/>
        <function-ref name="get" scoped="" ref="0x40417848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417928"/>
        <function-ref name="set" scoped="" ref="0x40417a08"/>
        <function-ref name="clr" scoped="" ref="0x40417ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4041e4b0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4041e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e688"/>
        <function-ref name="isInput" scoped="" ref="0x4041e768"/>
        <function-ref name="toggle" scoped="" ref="0x4041e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e928"/>
        <function-ref name="get" scoped="" ref="0x4041ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041eae8"/>
        <function-ref name="set" scoped="" ref="0x4041ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4041eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403f9730" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403f9730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f9908"/>
        <function-ref name="isInput" scoped="" ref="0x403f99e8"/>
        <function-ref name="toggle" scoped="" ref="0x403f9ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9ba8"/>
        <function-ref name="get" scoped="" ref="0x403f9c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f9d68"/>
        <function-ref name="set" scoped="" ref="0x403f9e48"/>
        <function-ref name="clr" scoped="" ref="0x403f9f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40409ce8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40409ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40408010"/>
        <function-ref name="toggle" scoped="" ref="0x404080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404081d0"/>
        <function-ref name="get" scoped="" ref="0x404082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408390"/>
        <function-ref name="set" scoped="" ref="0x40408470"/>
        <function-ref name="clr" scoped="" ref="0x40408550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4040c4b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4040c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c688"/>
        <function-ref name="isInput" scoped="" ref="0x4040c768"/>
        <function-ref name="toggle" scoped="" ref="0x4040c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c928"/>
        <function-ref name="get" scoped="" ref="0x4040ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040cae8"/>
        <function-ref name="set" scoped="" ref="0x4040cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4040cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40410c08" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40410c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410de0"/>
        <function-ref name="isInput" scoped="" ref="0x40410ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4040f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f0f0"/>
        <function-ref name="get" scoped="" ref="0x4040f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f2b0"/>
        <function-ref name="set" scoped="" ref="0x4040f390"/>
        <function-ref name="clr" scoped="" ref="0x4040f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4041b900" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4041b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041bad8"/>
        <function-ref name="isInput" scoped="" ref="0x4041bbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4041bc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4041bd78"/>
        <function-ref name="get" scoped="" ref="0x4041be58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426010"/>
        <function-ref name="set" scoped="" ref="0x404260f0"/>
        <function-ref name="clr" scoped="" ref="0x404261d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4041a0a0" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4041a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a278"/>
        <function-ref name="isInput" scoped="" ref="0x4041a358"/>
        <function-ref name="toggle" scoped="" ref="0x4041a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a518"/>
        <function-ref name="get" scoped="" ref="0x4041a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a6d8"/>
        <function-ref name="set" scoped="" ref="0x4041a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4041a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404142f0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404142f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404144c8"/>
        <function-ref name="isInput" scoped="" ref="0x404145a8"/>
        <function-ref name="toggle" scoped="" ref="0x40414688"/>
        <function-ref name="isOutput" scoped="" ref="0x40414768"/>
        <function-ref name="get" scoped="" ref="0x40414848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414928"/>
        <function-ref name="set" scoped="" ref="0x40414a08"/>
        <function-ref name="clr" scoped="" ref="0x40414ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40403590" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40403590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40403768"/>
        <function-ref name="isInput" scoped="" ref="0x40403848"/>
        <function-ref name="toggle" scoped="" ref="0x40403928"/>
        <function-ref name="isOutput" scoped="" ref="0x40403a08"/>
        <function-ref name="get" scoped="" ref="0x40403ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40403bc8"/>
        <function-ref name="set" scoped="" ref="0x40403ca8"/>
        <function-ref name="clr" scoped="" ref="0x40403d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40407c88" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40407c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407e60"/>
        <function-ref name="isInput" scoped="" ref="0x40406010"/>
        <function-ref name="toggle" scoped="" ref="0x404060f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404061d0"/>
        <function-ref name="get" scoped="" ref="0x404062b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40406390"/>
        <function-ref name="set" scoped="" ref="0x40406470"/>
        <function-ref name="clr" scoped="" ref="0x40406550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4044f330" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4044f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f508"/>
        <function-ref name="isInput" scoped="" ref="0x4044f5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044f6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f7a8"/>
        <function-ref name="get" scoped="" ref="0x4044f888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f968"/>
        <function-ref name="set" scoped="" ref="0x4044fa48"/>
        <function-ref name="clr" scoped="" ref="0x4044fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4044c030" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4044c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c208"/>
        <function-ref name="isInput" scoped="" ref="0x4044c2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044c3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c4a8"/>
        <function-ref name="get" scoped="" ref="0x4044c588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c668"/>
        <function-ref name="set" scoped="" ref="0x4044c748"/>
        <function-ref name="clr" scoped="" ref="0x4044c828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40450010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40450010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404501e8"/>
        <function-ref name="isInput" scoped="" ref="0x404502c8"/>
        <function-ref name="toggle" scoped="" ref="0x404503a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40450488"/>
        <function-ref name="get" scoped="" ref="0x40450568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450648"/>
        <function-ref name="set" scoped="" ref="0x40450728"/>
        <function-ref name="clr" scoped="" ref="0x40450808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4044fc88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4044fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044fe60"/>
        <function-ref name="isInput" scoped="" ref="0x4044d010"/>
        <function-ref name="toggle" scoped="" ref="0x4044d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d1d0"/>
        <function-ref name="get" scoped="" ref="0x4044d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d390"/>
        <function-ref name="set" scoped="" ref="0x4044d470"/>
        <function-ref name="clr" scoped="" ref="0x4044d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4044c988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4044c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044cb60"/>
        <function-ref name="isInput" scoped="" ref="0x4044cc40"/>
        <function-ref name="toggle" scoped="" ref="0x4044cd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4044ce00"/>
        <function-ref name="get" scoped="" ref="0x4044cee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b010"/>
        <function-ref name="set" scoped="" ref="0x4044b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4044b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40450968" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40450968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450b40"/>
        <function-ref name="isInput" scoped="" ref="0x40450c20"/>
        <function-ref name="toggle" scoped="" ref="0x40450d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40450de0"/>
        <function-ref name="get" scoped="" ref="0x40450ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f010"/>
        <function-ref name="set" scoped="" ref="0x4044f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4044f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4044d6b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4044d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d888"/>
        <function-ref name="isInput" scoped="" ref="0x4044d968"/>
        <function-ref name="toggle" scoped="" ref="0x4044da48"/>
        <function-ref name="isOutput" scoped="" ref="0x4044db28"/>
        <function-ref name="get" scoped="" ref="0x4044dc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044dce8"/>
        <function-ref name="set" scoped="" ref="0x4044ddc8"/>
        <function-ref name="clr" scoped="" ref="0x4044dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4044b330" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4044b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044b508"/>
        <function-ref name="isInput" scoped="" ref="0x4044b5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4044b6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044b7a8"/>
        <function-ref name="get" scoped="" ref="0x4044b888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044b968"/>
        <function-ref name="set" scoped="" ref="0x4044ba48"/>
        <function-ref name="clr" scoped="" ref="0x4044bb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d6d538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d6d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d6d710"/>
        <function-ref name="isInput" scoped="" ref="0x40d6d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d6d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d6d9b0"/>
        <function-ref name="get" scoped="" ref="0x40d6da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d6db70"/>
        <function-ref name="set" scoped="" ref="0x40d6dc50"/>
        <function-ref name="clr" scoped="" ref="0x40d6dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d6b010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d6b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d6b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d6b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d6b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d6b488"/>
        <function-ref name="get" scoped="" ref="0x40d6b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d6b648"/>
        <function-ref name="set" scoped="" ref="0x40d6b728"/>
        <function-ref name="clr" scoped="" ref="0x40d6b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d6a9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d6a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d6abc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d6aca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d6ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d6ae60"/>
        <function-ref name="get" scoped="" ref="0x40d69010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d690f0"/>
        <function-ref name="set" scoped="" ref="0x40d691d0"/>
        <function-ref name="clr" scoped="" ref="0x40d692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d68538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d68538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d68710"/>
        <function-ref name="isInput" scoped="" ref="0x40d687f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d688d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d689b0"/>
        <function-ref name="get" scoped="" ref="0x40d68a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d68b70"/>
        <function-ref name="set" scoped="" ref="0x40d68c50"/>
        <function-ref name="clr" scoped="" ref="0x40d68d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d66010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d66010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d661e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d662c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d663a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d66488"/>
        <function-ref name="get" scoped="" ref="0x40d66568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d66648"/>
        <function-ref name="set" scoped="" ref="0x40d66728"/>
        <function-ref name="clr" scoped="" ref="0x40d66808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d659e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d659e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d65bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d65ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d65d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d65e60"/>
        <function-ref name="get" scoped="" ref="0x40d64010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d640f0"/>
        <function-ref name="set" scoped="" ref="0x40d641d0"/>
        <function-ref name="clr" scoped="" ref="0x40d642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d63538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d63538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d63710"/>
        <function-ref name="isInput" scoped="" ref="0x40d637f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d638d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d639b0"/>
        <function-ref name="get" scoped="" ref="0x40d63a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d63b70"/>
        <function-ref name="set" scoped="" ref="0x40d63c50"/>
        <function-ref name="clr" scoped="" ref="0x40d63d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d61010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d61010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d611e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d612c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d613a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d61488"/>
        <function-ref name="get" scoped="" ref="0x40d61568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d61648"/>
        <function-ref name="set" scoped="" ref="0x40d61728"/>
        <function-ref name="clr" scoped="" ref="0x40d61808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40453ba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40453ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453d80"/>
        <function-ref name="isInput" scoped="" ref="0x40453e60"/>
        <function-ref name="toggle" scoped="" ref="0x40452010"/>
        <function-ref name="isOutput" scoped="" ref="0x404520f0"/>
        <function-ref name="get" scoped="" ref="0x404521d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404522b0"/>
        <function-ref name="set" scoped="" ref="0x40452390"/>
        <function-ref name="clr" scoped="" ref="0x40452470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40451890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40451890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451a68"/>
        <function-ref name="isInput" scoped="" ref="0x40451b48"/>
        <function-ref name="toggle" scoped="" ref="0x40451c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40451d08"/>
        <function-ref name="get" scoped="" ref="0x40451de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451ec8"/>
        <function-ref name="set" scoped="" ref="0x4045c010"/>
        <function-ref name="clr" scoped="" ref="0x4045c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40454888" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40454888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454a60"/>
        <function-ref name="isInput" scoped="" ref="0x40454b40"/>
        <function-ref name="toggle" scoped="" ref="0x40454c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40454d00"/>
        <function-ref name="get" scoped="" ref="0x40454de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454ec0"/>
        <function-ref name="set" scoped="" ref="0x40453010"/>
        <function-ref name="clr" scoped="" ref="0x404530f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404525d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404525d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404527a8"/>
        <function-ref name="isInput" scoped="" ref="0x40452888"/>
        <function-ref name="toggle" scoped="" ref="0x40452968"/>
        <function-ref name="isOutput" scoped="" ref="0x40452a48"/>
        <function-ref name="get" scoped="" ref="0x40452b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452c08"/>
        <function-ref name="set" scoped="" ref="0x40452ce8"/>
        <function-ref name="clr" scoped="" ref="0x40452dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4045c250" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4045c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c428"/>
        <function-ref name="isInput" scoped="" ref="0x4045c508"/>
        <function-ref name="toggle" scoped="" ref="0x4045c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c6c8"/>
        <function-ref name="get" scoped="" ref="0x4045c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c888"/>
        <function-ref name="set" scoped="" ref="0x4045c968"/>
        <function-ref name="clr" scoped="" ref="0x4045ca48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40453250" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40453250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453428"/>
        <function-ref name="isInput" scoped="" ref="0x40453508"/>
        <function-ref name="toggle" scoped="" ref="0x404535e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404536c8"/>
        <function-ref name="get" scoped="" ref="0x404537a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453888"/>
        <function-ref name="set" scoped="" ref="0x40453968"/>
        <function-ref name="clr" scoped="" ref="0x40453a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40452f28" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40452f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451110"/>
        <function-ref name="isInput" scoped="" ref="0x404511f0"/>
        <function-ref name="toggle" scoped="" ref="0x404512d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404513b0"/>
        <function-ref name="get" scoped="" ref="0x40451490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451570"/>
        <function-ref name="set" scoped="" ref="0x40451650"/>
        <function-ref name="clr" scoped="" ref="0x40451730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4045cba8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4045cba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cd80"/>
        <function-ref name="isInput" scoped="" ref="0x4045ce60"/>
        <function-ref name="toggle" scoped="" ref="0x4045b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b0f0"/>
        <function-ref name="get" scoped="" ref="0x4045b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b2b0"/>
        <function-ref name="set" scoped="" ref="0x4045b390"/>
        <function-ref name="clr" scoped="" ref="0x4045b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d95418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d95418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d955f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d956d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d957b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d95890"/>
        <function-ref name="get" scoped="" ref="0x40d95970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d95a50"/>
        <function-ref name="set" scoped="" ref="0x40d95b30"/>
        <function-ref name="clr" scoped="" ref="0x40d95c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d94de0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d94de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d92010"/>
        <function-ref name="isInput" scoped="" ref="0x40d920f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d921d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d922b0"/>
        <function-ref name="get" scoped="" ref="0x40d92390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d92470"/>
        <function-ref name="set" scoped="" ref="0x40d92550"/>
        <function-ref name="clr" scoped="" ref="0x40d92630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d917f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d917f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d919d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d91ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d91b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d91c70"/>
        <function-ref name="get" scoped="" ref="0x40d91d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d91e30"/>
        <function-ref name="set" scoped="" ref="0x40d91f10"/>
        <function-ref name="clr" scoped="" ref="0x40d90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d8f228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d8f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8f400"/>
        <function-ref name="isInput" scoped="" ref="0x40d8f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d8f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8f6a0"/>
        <function-ref name="get" scoped="" ref="0x40d8f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8f860"/>
        <function-ref name="set" scoped="" ref="0x40d8f940"/>
        <function-ref name="clr" scoped="" ref="0x40d8fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d8ec08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d8ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8ede0"/>
        <function-ref name="isInput" scoped="" ref="0x40d8eec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d8d010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8d0f0"/>
        <function-ref name="get" scoped="" ref="0x40d8d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8d2b0"/>
        <function-ref name="set" scoped="" ref="0x40d8d390"/>
        <function-ref name="clr" scoped="" ref="0x40d8d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d8c6c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8c898"/>
        <function-ref name="isInput" scoped="" ref="0x40d8c978"/>
        <function-ref name="toggle" scoped="" ref="0x40d8ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8cb38"/>
        <function-ref name="get" scoped="" ref="0x40d8cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8ccf8"/>
        <function-ref name="set" scoped="" ref="0x40d8cdd8"/>
        <function-ref name="clr" scoped="" ref="0x40d8ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d8a0b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d8a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8a288"/>
        <function-ref name="isInput" scoped="" ref="0x40d8a368"/>
        <function-ref name="toggle" scoped="" ref="0x40d8a448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8a528"/>
        <function-ref name="get" scoped="" ref="0x40d8a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8a6e8"/>
        <function-ref name="set" scoped="" ref="0x40d8a7c8"/>
        <function-ref name="clr" scoped="" ref="0x40d8a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d89a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d89a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d89c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d89d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d89e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d89f00"/>
        <function-ref name="get" scoped="" ref="0x40d88010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d880f0"/>
        <function-ref name="set" scoped="" ref="0x40d881d0"/>
        <function-ref name="clr" scoped="" ref="0x40d882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404624f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404624f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404626c8"/>
        <function-ref name="isInput" scoped="" ref="0x404627a8"/>
        <function-ref name="toggle" scoped="" ref="0x40462888"/>
        <function-ref name="isOutput" scoped="" ref="0x40462968"/>
        <function-ref name="get" scoped="" ref="0x40462a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462b28"/>
        <function-ref name="set" scoped="" ref="0x40462c08"/>
        <function-ref name="clr" scoped="" ref="0x40462ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40460170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40460170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460348"/>
        <function-ref name="isInput" scoped="" ref="0x40460428"/>
        <function-ref name="toggle" scoped="" ref="0x40460508"/>
        <function-ref name="isOutput" scoped="" ref="0x404605e8"/>
        <function-ref name="get" scoped="" ref="0x404606c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404607a8"/>
        <function-ref name="set" scoped="" ref="0x40460888"/>
        <function-ref name="clr" scoped="" ref="0x40460968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40457228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40457228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457400"/>
        <function-ref name="isInput" scoped="" ref="0x404574e0"/>
        <function-ref name="toggle" scoped="" ref="0x404575c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404576a0"/>
        <function-ref name="get" scoped="" ref="0x40457780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457860"/>
        <function-ref name="set" scoped="" ref="0x40457940"/>
        <function-ref name="clr" scoped="" ref="0x40457a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40462e48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40462e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461050"/>
        <function-ref name="isInput" scoped="" ref="0x40461130"/>
        <function-ref name="toggle" scoped="" ref="0x40461210"/>
        <function-ref name="isOutput" scoped="" ref="0x404612f0"/>
        <function-ref name="get" scoped="" ref="0x404613d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404614b0"/>
        <function-ref name="set" scoped="" ref="0x40461590"/>
        <function-ref name="clr" scoped="" ref="0x40461670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40460ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40460ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40460d80"/>
        <function-ref name="toggle" scoped="" ref="0x40460e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f010"/>
        <function-ref name="get" scoped="" ref="0x4045f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f1d0"/>
        <function-ref name="set" scoped="" ref="0x4045f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4045f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40457b80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40457b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457d58"/>
        <function-ref name="isInput" scoped="" ref="0x40457e38"/>
        <function-ref name="toggle" scoped="" ref="0x40457f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40462010"/>
        <function-ref name="get" scoped="" ref="0x404620f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404621d0"/>
        <function-ref name="set" scoped="" ref="0x404622b0"/>
        <function-ref name="clr" scoped="" ref="0x40462390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404617d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404617d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404619a8"/>
        <function-ref name="isInput" scoped="" ref="0x40461a88"/>
        <function-ref name="toggle" scoped="" ref="0x40461b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40461c48"/>
        <function-ref name="get" scoped="" ref="0x40461d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461e08"/>
        <function-ref name="set" scoped="" ref="0x40461ee8"/>
        <function-ref name="clr" scoped="" ref="0x40460010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4045f4f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4045f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f968"/>
        <function-ref name="get" scoped="" ref="0x4045fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045fb28"/>
        <function-ref name="set" scoped="" ref="0x4045fc08"/>
        <function-ref name="clr" scoped="" ref="0x4045fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dc3de8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dc3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dbf010"/>
        <function-ref name="isInput" scoped="" ref="0x40dbf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40dbf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dbf2b0"/>
        <function-ref name="get" scoped="" ref="0x40dbf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dbf470"/>
        <function-ref name="set" scoped="" ref="0x40dbf550"/>
        <function-ref name="clr" scoped="" ref="0x40dbf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dbe7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dbe7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dbe9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40dbeab0"/>
        <function-ref name="toggle" scoped="" ref="0x40dbeb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40dbec70"/>
        <function-ref name="get" scoped="" ref="0x40dbed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dbee30"/>
        <function-ref name="set" scoped="" ref="0x40dbef10"/>
        <function-ref name="clr" scoped="" ref="0x40dbd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dbc228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dbc228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dbc400"/>
        <function-ref name="isInput" scoped="" ref="0x40dbc4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40dbc5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40dbc6a0"/>
        <function-ref name="get" scoped="" ref="0x40dbc780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dbc860"/>
        <function-ref name="set" scoped="" ref="0x40dbc940"/>
        <function-ref name="clr" scoped="" ref="0x40dbca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dbbc08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dbbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dbbde0"/>
        <function-ref name="isInput" scoped="" ref="0x40dbbec0"/>
        <function-ref name="toggle" scoped="" ref="0x40dba010"/>
        <function-ref name="isOutput" scoped="" ref="0x40dba0f0"/>
        <function-ref name="get" scoped="" ref="0x40dba1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dba2b0"/>
        <function-ref name="set" scoped="" ref="0x40dba390"/>
        <function-ref name="clr" scoped="" ref="0x40dba470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db96c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db9898"/>
        <function-ref name="isInput" scoped="" ref="0x40db9978"/>
        <function-ref name="toggle" scoped="" ref="0x40db9a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40db9b38"/>
        <function-ref name="get" scoped="" ref="0x40db9c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db9cf8"/>
        <function-ref name="set" scoped="" ref="0x40db9dd8"/>
        <function-ref name="clr" scoped="" ref="0x40db9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de90b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de9288"/>
        <function-ref name="isInput" scoped="" ref="0x40de9368"/>
        <function-ref name="toggle" scoped="" ref="0x40de9448"/>
        <function-ref name="isOutput" scoped="" ref="0x40de9528"/>
        <function-ref name="get" scoped="" ref="0x40de9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de96e8"/>
        <function-ref name="set" scoped="" ref="0x40de97c8"/>
        <function-ref name="clr" scoped="" ref="0x40de98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de8a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de8c60"/>
        <function-ref name="isInput" scoped="" ref="0x40de8d40"/>
        <function-ref name="toggle" scoped="" ref="0x40de8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40de8f00"/>
        <function-ref name="get" scoped="" ref="0x40de7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de70f0"/>
        <function-ref name="set" scoped="" ref="0x40de71d0"/>
        <function-ref name="clr" scoped="" ref="0x40de72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40de6538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40de6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de6710"/>
        <function-ref name="isInput" scoped="" ref="0x40de67f0"/>
        <function-ref name="toggle" scoped="" ref="0x40de68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40de69b0"/>
        <function-ref name="get" scoped="" ref="0x40de6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de6b70"/>
        <function-ref name="set" scoped="" ref="0x40de6c50"/>
        <function-ref name="clr" scoped="" ref="0x40de6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40466e48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40466e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465050"/>
        <function-ref name="isInput" scoped="" ref="0x40465130"/>
        <function-ref name="toggle" scoped="" ref="0x40465210"/>
        <function-ref name="isOutput" scoped="" ref="0x404652f0"/>
        <function-ref name="get" scoped="" ref="0x404653d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404654b0"/>
        <function-ref name="set" scoped="" ref="0x40465590"/>
        <function-ref name="clr" scoped="" ref="0x40465670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40464ac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40464ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40464d80"/>
        <function-ref name="toggle" scoped="" ref="0x40464e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40463010"/>
        <function-ref name="get" scoped="" ref="0x404630f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404631d0"/>
        <function-ref name="set" scoped="" ref="0x404632b0"/>
        <function-ref name="clr" scoped="" ref="0x40463390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40467b00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40467b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40467db8"/>
        <function-ref name="toggle" scoped="" ref="0x40467e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40466010"/>
        <function-ref name="get" scoped="" ref="0x404660f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404661d0"/>
        <function-ref name="set" scoped="" ref="0x404662b0"/>
        <function-ref name="clr" scoped="" ref="0x40466390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404657d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404657d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404659a8"/>
        <function-ref name="isInput" scoped="" ref="0x40465a88"/>
        <function-ref name="toggle" scoped="" ref="0x40465b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40465c48"/>
        <function-ref name="get" scoped="" ref="0x40465d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465e08"/>
        <function-ref name="set" scoped="" ref="0x40465ee8"/>
        <function-ref name="clr" scoped="" ref="0x40464010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404634f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404634f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404636c8"/>
        <function-ref name="isInput" scoped="" ref="0x404637a8"/>
        <function-ref name="toggle" scoped="" ref="0x40463888"/>
        <function-ref name="isOutput" scoped="" ref="0x40463968"/>
        <function-ref name="get" scoped="" ref="0x40463a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463b28"/>
        <function-ref name="set" scoped="" ref="0x40463c08"/>
        <function-ref name="clr" scoped="" ref="0x40463ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404664f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404664f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404666c8"/>
        <function-ref name="isInput" scoped="" ref="0x404667a8"/>
        <function-ref name="toggle" scoped="" ref="0x40466888"/>
        <function-ref name="isOutput" scoped="" ref="0x40466968"/>
        <function-ref name="get" scoped="" ref="0x40466a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466b28"/>
        <function-ref name="set" scoped="" ref="0x40466c08"/>
        <function-ref name="clr" scoped="" ref="0x40466ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40464170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40464170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464348"/>
        <function-ref name="isInput" scoped="" ref="0x40464428"/>
        <function-ref name="toggle" scoped="" ref="0x40464508"/>
        <function-ref name="isOutput" scoped="" ref="0x404645e8"/>
        <function-ref name="get" scoped="" ref="0x404646c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404647a8"/>
        <function-ref name="set" scoped="" ref="0x40464888"/>
        <function-ref name="clr" scoped="" ref="0x40464968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40463e48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40463e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e050"/>
        <function-ref name="isInput" scoped="" ref="0x4046e130"/>
        <function-ref name="toggle" scoped="" ref="0x4046e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e2f0"/>
        <function-ref name="get" scoped="" ref="0x4046e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e4b0"/>
        <function-ref name="set" scoped="" ref="0x4046e590"/>
        <function-ref name="clr" scoped="" ref="0x4046e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dec938" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dec938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40decb10"/>
        <function-ref name="isInput" scoped="" ref="0x40decbf0"/>
        <function-ref name="toggle" scoped="" ref="0x40deccd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40decdb0"/>
        <function-ref name="get" scoped="" ref="0x40dece90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dea010"/>
        <function-ref name="set" scoped="" ref="0x40dea0f0"/>
        <function-ref name="clr" scoped="" ref="0x40dea1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e1b3b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e1b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e1b588"/>
        <function-ref name="isInput" scoped="" ref="0x40e1b668"/>
        <function-ref name="toggle" scoped="" ref="0x40e1b748"/>
        <function-ref name="isOutput" scoped="" ref="0x40e1b828"/>
        <function-ref name="get" scoped="" ref="0x40e1b908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e1b9e8"/>
        <function-ref name="set" scoped="" ref="0x40e1bac8"/>
        <function-ref name="clr" scoped="" ref="0x40e1bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e1ad70" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e1ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e19010"/>
        <function-ref name="isInput" scoped="" ref="0x40e190f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e191d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e192b0"/>
        <function-ref name="get" scoped="" ref="0x40e19390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e19470"/>
        <function-ref name="set" scoped="" ref="0x40e19550"/>
        <function-ref name="clr" scoped="" ref="0x40e19630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e187f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e187f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e189d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e18ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e18b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e18c70"/>
        <function-ref name="get" scoped="" ref="0x40e18d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e18e30"/>
        <function-ref name="set" scoped="" ref="0x40e18f10"/>
        <function-ref name="clr" scoped="" ref="0x40e17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e16228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e16228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e16400"/>
        <function-ref name="isInput" scoped="" ref="0x40e164e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e165c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e166a0"/>
        <function-ref name="get" scoped="" ref="0x40e16780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e16860"/>
        <function-ref name="set" scoped="" ref="0x40e16940"/>
        <function-ref name="clr" scoped="" ref="0x40e16a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e15c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e15c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e15de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e15ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e14010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e140f0"/>
        <function-ref name="get" scoped="" ref="0x40e141d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e142b0"/>
        <function-ref name="set" scoped="" ref="0x40e14390"/>
        <function-ref name="clr" scoped="" ref="0x40e14470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e136c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e136c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e13898"/>
        <function-ref name="isInput" scoped="" ref="0x40e13978"/>
        <function-ref name="toggle" scoped="" ref="0x40e13a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e13b38"/>
        <function-ref name="get" scoped="" ref="0x40e13c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e13cf8"/>
        <function-ref name="set" scoped="" ref="0x40e13dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e13eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e110b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e11288"/>
        <function-ref name="isInput" scoped="" ref="0x40e11368"/>
        <function-ref name="toggle" scoped="" ref="0x40e11448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e11528"/>
        <function-ref name="get" scoped="" ref="0x40e11608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e116e8"/>
        <function-ref name="set" scoped="" ref="0x40e117c8"/>
        <function-ref name="clr" scoped="" ref="0x40e118a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046a6b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a888"/>
        <function-ref name="isInput" scoped="" ref="0x4046a968"/>
        <function-ref name="toggle" scoped="" ref="0x4046aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ab28"/>
        <function-ref name="get" scoped="" ref="0x4046ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ace8"/>
        <function-ref name="set" scoped="" ref="0x4046adc8"/>
        <function-ref name="clr" scoped="" ref="0x4046aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40473330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40473330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473508"/>
        <function-ref name="isInput" scoped="" ref="0x404735e8"/>
        <function-ref name="toggle" scoped="" ref="0x404736c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404737a8"/>
        <function-ref name="get" scoped="" ref="0x40473888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473968"/>
        <function-ref name="set" scoped="" ref="0x40473a48"/>
        <function-ref name="clr" scoped="" ref="0x40473b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046b3d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4046b690"/>
        <function-ref name="toggle" scoped="" ref="0x4046b770"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b850"/>
        <function-ref name="get" scoped="" ref="0x4046b930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ba10"/>
        <function-ref name="set" scoped="" ref="0x4046baf0"/>
        <function-ref name="clr" scoped="" ref="0x4046bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40469030" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40469030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469208"/>
        <function-ref name="isInput" scoped="" ref="0x404692e8"/>
        <function-ref name="toggle" scoped="" ref="0x404693c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404694a8"/>
        <function-ref name="get" scoped="" ref="0x40469588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469668"/>
        <function-ref name="set" scoped="" ref="0x40469748"/>
        <function-ref name="clr" scoped="" ref="0x40469828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40473c88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40473c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473e60"/>
        <function-ref name="isInput" scoped="" ref="0x40472010"/>
        <function-ref name="toggle" scoped="" ref="0x404720f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404721d0"/>
        <function-ref name="get" scoped="" ref="0x404722b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472390"/>
        <function-ref name="set" scoped="" ref="0x40472470"/>
        <function-ref name="clr" scoped="" ref="0x40472550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046bd30" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046bf08"/>
        <function-ref name="isInput" scoped="" ref="0x4046a010"/>
        <function-ref name="toggle" scoped="" ref="0x4046a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a1d0"/>
        <function-ref name="get" scoped="" ref="0x4046a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a390"/>
        <function-ref name="set" scoped="" ref="0x4046a470"/>
        <function-ref name="clr" scoped="" ref="0x4046a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40469988" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40469988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469b60"/>
        <function-ref name="isInput" scoped="" ref="0x40469c40"/>
        <function-ref name="toggle" scoped="" ref="0x40469d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40469e00"/>
        <function-ref name="get" scoped="" ref="0x40469ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40473010"/>
        <function-ref name="set" scoped="" ref="0x404730f0"/>
        <function-ref name="clr" scoped="" ref="0x404731d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404726b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404726b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40472888"/>
        <function-ref name="isInput" scoped="" ref="0x40472968"/>
        <function-ref name="toggle" scoped="" ref="0x40472a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40472b28"/>
        <function-ref name="get" scoped="" ref="0x40472c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40472ce8"/>
        <function-ref name="set" scoped="" ref="0x40472dc8"/>
        <function-ref name="clr" scoped="" ref="0x40472ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4c538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4c710"/>
        <function-ref name="isInput" scoped="" ref="0x40e4c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e4c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4c9b0"/>
        <function-ref name="get" scoped="" ref="0x40e4ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4cb70"/>
        <function-ref name="set" scoped="" ref="0x40e4cc50"/>
        <function-ref name="clr" scoped="" ref="0x40e4cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e4a010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e4a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e4a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e4a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e4a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e4a488"/>
        <function-ref name="get" scoped="" ref="0x40e4a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e4a648"/>
        <function-ref name="set" scoped="" ref="0x40e4a728"/>
        <function-ref name="clr" scoped="" ref="0x40e4a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e499e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e499e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e49bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e49ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e49d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e49e60"/>
        <function-ref name="get" scoped="" ref="0x40e48010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e480f0"/>
        <function-ref name="set" scoped="" ref="0x40e481d0"/>
        <function-ref name="clr" scoped="" ref="0x40e482b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e47538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e47538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e47710"/>
        <function-ref name="isInput" scoped="" ref="0x40e477f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e478d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e479b0"/>
        <function-ref name="get" scoped="" ref="0x40e47a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e47b70"/>
        <function-ref name="set" scoped="" ref="0x40e47c50"/>
        <function-ref name="clr" scoped="" ref="0x40e47d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e45010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e451e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e452c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e453a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e45488"/>
        <function-ref name="get" scoped="" ref="0x40e45568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e45648"/>
        <function-ref name="set" scoped="" ref="0x40e45728"/>
        <function-ref name="clr" scoped="" ref="0x40e45808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e449e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e449e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e44bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e44ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e44d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e44e60"/>
        <function-ref name="get" scoped="" ref="0x40e43010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e430f0"/>
        <function-ref name="set" scoped="" ref="0x40e431d0"/>
        <function-ref name="clr" scoped="" ref="0x40e432b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e42538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e42538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e42710"/>
        <function-ref name="isInput" scoped="" ref="0x40e427f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e428d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e429b0"/>
        <function-ref name="get" scoped="" ref="0x40e42a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e42b70"/>
        <function-ref name="set" scoped="" ref="0x40e42c50"/>
        <function-ref name="clr" scoped="" ref="0x40e42d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e40010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e401e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e402c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e403a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e40488"/>
        <function-ref name="get" scoped="" ref="0x40e40568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e40648"/>
        <function-ref name="set" scoped="" ref="0x40e40728"/>
        <function-ref name="clr" scoped="" ref="0x40e40808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40479170" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40479170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479348"/>
        <function-ref name="isInput" scoped="" ref="0x40479428"/>
        <function-ref name="toggle" scoped="" ref="0x40479508"/>
        <function-ref name="isOutput" scoped="" ref="0x404795e8"/>
        <function-ref name="get" scoped="" ref="0x404796c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404797a8"/>
        <function-ref name="set" scoped="" ref="0x40479888"/>
        <function-ref name="clr" scoped="" ref="0x40479968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40478e48" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40478e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477050"/>
        <function-ref name="isInput" scoped="" ref="0x40477130"/>
        <function-ref name="toggle" scoped="" ref="0x40477210"/>
        <function-ref name="isOutput" scoped="" ref="0x404772f0"/>
        <function-ref name="get" scoped="" ref="0x404773d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404774b0"/>
        <function-ref name="set" scoped="" ref="0x40477590"/>
        <function-ref name="clr" scoped="" ref="0x40477670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046fdc8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046fdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a010"/>
        <function-ref name="isInput" scoped="" ref="0x4047a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a2b0"/>
        <function-ref name="get" scoped="" ref="0x4047a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a470"/>
        <function-ref name="set" scoped="" ref="0x4047a550"/>
        <function-ref name="clr" scoped="" ref="0x4047a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40479ac8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40479ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40479ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40479d80"/>
        <function-ref name="toggle" scoped="" ref="0x40479e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40478010"/>
        <function-ref name="get" scoped="" ref="0x404780f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404781d0"/>
        <function-ref name="set" scoped="" ref="0x404782b0"/>
        <function-ref name="clr" scoped="" ref="0x40478390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404777d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404777d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404779a8"/>
        <function-ref name="isInput" scoped="" ref="0x40477a88"/>
        <function-ref name="toggle" scoped="" ref="0x40477b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40477c48"/>
        <function-ref name="get" scoped="" ref="0x40477d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477e08"/>
        <function-ref name="set" scoped="" ref="0x40477ee8"/>
        <function-ref name="clr" scoped="" ref="0x40476010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4047a790" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4047a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a968"/>
        <function-ref name="isInput" scoped="" ref="0x4047aa48"/>
        <function-ref name="toggle" scoped="" ref="0x4047ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ac08"/>
        <function-ref name="get" scoped="" ref="0x4047ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047adc8"/>
        <function-ref name="set" scoped="" ref="0x4047aea8"/>
        <function-ref name="clr" scoped="" ref="0x40479010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404784f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404784f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404786c8"/>
        <function-ref name="isInput" scoped="" ref="0x404787a8"/>
        <function-ref name="toggle" scoped="" ref="0x40478888"/>
        <function-ref name="isOutput" scoped="" ref="0x40478968"/>
        <function-ref name="get" scoped="" ref="0x40478a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478b28"/>
        <function-ref name="set" scoped="" ref="0x40478c08"/>
        <function-ref name="clr" scoped="" ref="0x40478ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40476170" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40476170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40476348"/>
        <function-ref name="isInput" scoped="" ref="0x40476428"/>
        <function-ref name="toggle" scoped="" ref="0x40476508"/>
        <function-ref name="isOutput" scoped="" ref="0x404765e8"/>
        <function-ref name="get" scoped="" ref="0x404766c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404767a8"/>
        <function-ref name="set" scoped="" ref="0x40476888"/>
        <function-ref name="clr" scoped="" ref="0x40476968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7b418" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e7b5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40e7b6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40e7b7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e7b890"/>
        <function-ref name="get" scoped="" ref="0x40e7b970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e7ba50"/>
        <function-ref name="set" scoped="" ref="0x40e7bb30"/>
        <function-ref name="clr" scoped="" ref="0x40e7bc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e7ade0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e7ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e79010"/>
        <function-ref name="isInput" scoped="" ref="0x40e790f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e791d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e792b0"/>
        <function-ref name="get" scoped="" ref="0x40e79390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e79470"/>
        <function-ref name="set" scoped="" ref="0x40e79550"/>
        <function-ref name="clr" scoped="" ref="0x40e79630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e787f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e787f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e789d0"/>
        <function-ref name="isInput" scoped="" ref="0x40e78ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40e78b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40e78c70"/>
        <function-ref name="get" scoped="" ref="0x40e78d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e78e30"/>
        <function-ref name="set" scoped="" ref="0x40e78f10"/>
        <function-ref name="clr" scoped="" ref="0x40e77010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e76228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e76228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e76400"/>
        <function-ref name="isInput" scoped="" ref="0x40e764e0"/>
        <function-ref name="toggle" scoped="" ref="0x40e765c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e766a0"/>
        <function-ref name="get" scoped="" ref="0x40e76780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e76860"/>
        <function-ref name="set" scoped="" ref="0x40e76940"/>
        <function-ref name="clr" scoped="" ref="0x40e76a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e75c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e75c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e75de0"/>
        <function-ref name="isInput" scoped="" ref="0x40e75ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40e74010"/>
        <function-ref name="isOutput" scoped="" ref="0x40e740f0"/>
        <function-ref name="get" scoped="" ref="0x40e741d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e742b0"/>
        <function-ref name="set" scoped="" ref="0x40e74390"/>
        <function-ref name="clr" scoped="" ref="0x40e74470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e736c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e736c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e73898"/>
        <function-ref name="isInput" scoped="" ref="0x40e73978"/>
        <function-ref name="toggle" scoped="" ref="0x40e73a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e73b38"/>
        <function-ref name="get" scoped="" ref="0x40e73c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e73cf8"/>
        <function-ref name="set" scoped="" ref="0x40e73dd8"/>
        <function-ref name="clr" scoped="" ref="0x40e73eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e710b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e710b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e71288"/>
        <function-ref name="isInput" scoped="" ref="0x40e71368"/>
        <function-ref name="toggle" scoped="" ref="0x40e71448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e71528"/>
        <function-ref name="get" scoped="" ref="0x40e71608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e716e8"/>
        <function-ref name="set" scoped="" ref="0x40e717c8"/>
        <function-ref name="clr" scoped="" ref="0x40e718a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e70a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e70a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e70c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e70d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e70e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e70f00"/>
        <function-ref name="get" scoped="" ref="0x40e6f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e6f0f0"/>
        <function-ref name="set" scoped="" ref="0x40e6f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40e6f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4047e2d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4047e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4047e588"/>
        <function-ref name="toggle" scoped="" ref="0x4047e668"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e748"/>
        <function-ref name="get" scoped="" ref="0x4047e828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e908"/>
        <function-ref name="set" scoped="" ref="0x4047e9e8"/>
        <function-ref name="clr" scoped="" ref="0x4047eac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40487a88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40487a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40487c60"/>
        <function-ref name="isInput" scoped="" ref="0x40487d40"/>
        <function-ref name="toggle" scoped="" ref="0x40487e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40487f00"/>
        <function-ref name="get" scoped="" ref="0x40493010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404930f0"/>
        <function-ref name="set" scoped="" ref="0x404931d0"/>
        <function-ref name="clr" scoped="" ref="0x404932b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40491280" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40491280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491458"/>
        <function-ref name="isInput" scoped="" ref="0x40491538"/>
        <function-ref name="toggle" scoped="" ref="0x40491618"/>
        <function-ref name="isOutput" scoped="" ref="0x404916f8"/>
        <function-ref name="get" scoped="" ref="0x404917d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404918b8"/>
        <function-ref name="set" scoped="" ref="0x40491998"/>
        <function-ref name="clr" scoped="" ref="0x40491a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4048ea30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4048ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048ec08"/>
        <function-ref name="isInput" scoped="" ref="0x4048ece8"/>
        <function-ref name="toggle" scoped="" ref="0x4048edc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4048eea8"/>
        <function-ref name="get" scoped="" ref="0x4048d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048d0f0"/>
        <function-ref name="set" scoped="" ref="0x4048d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4048d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40499280" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40499280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40499458"/>
        <function-ref name="isInput" scoped="" ref="0x40499538"/>
        <function-ref name="toggle" scoped="" ref="0x40499618"/>
        <function-ref name="isOutput" scoped="" ref="0x404996f8"/>
        <function-ref name="get" scoped="" ref="0x404997d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404998b8"/>
        <function-ref name="set" scoped="" ref="0x40499998"/>
        <function-ref name="clr" scoped="" ref="0x40499a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40497a30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40497a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497c08"/>
        <function-ref name="isInput" scoped="" ref="0x40497ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40497dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40497ea8"/>
        <function-ref name="get" scoped="" ref="0x40496010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404960f0"/>
        <function-ref name="set" scoped="" ref="0x404961d0"/>
        <function-ref name="clr" scoped="" ref="0x404962b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a13b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1588"/>
        <function-ref name="isInput" scoped="" ref="0x404a1668"/>
        <function-ref name="toggle" scoped="" ref="0x404a1748"/>
        <function-ref name="isOutput" scoped="" ref="0x404a1828"/>
        <function-ref name="get" scoped="" ref="0x404a1908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a19e8"/>
        <function-ref name="set" scoped="" ref="0x404a1ac8"/>
        <function-ref name="clr" scoped="" ref="0x404a1ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049fb68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049fd40"/>
        <function-ref name="isInput" scoped="" ref="0x4049fe20"/>
        <function-ref name="toggle" scoped="" ref="0x4049ff00"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e010"/>
        <function-ref name="get" scoped="" ref="0x4049e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e1d0"/>
        <function-ref name="set" scoped="" ref="0x4049e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4049e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4049b3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4049b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049b588"/>
        <function-ref name="isInput" scoped="" ref="0x4049b668"/>
        <function-ref name="toggle" scoped="" ref="0x4049b748"/>
        <function-ref name="isOutput" scoped="" ref="0x4049b828"/>
        <function-ref name="get" scoped="" ref="0x4049b908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049b9e8"/>
        <function-ref name="set" scoped="" ref="0x4049bac8"/>
        <function-ref name="clr" scoped="" ref="0x4049bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a7b68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a7d40"/>
        <function-ref name="isInput" scoped="" ref="0x404a7e20"/>
        <function-ref name="toggle" scoped="" ref="0x404a7f00"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6010"/>
        <function-ref name="get" scoped="" ref="0x404a60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a61d0"/>
        <function-ref name="set" scoped="" ref="0x404a62b0"/>
        <function-ref name="clr" scoped="" ref="0x404a6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404a43b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404a43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4588"/>
        <function-ref name="isInput" scoped="" ref="0x404a4668"/>
        <function-ref name="toggle" scoped="" ref="0x404a4748"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4828"/>
        <function-ref name="get" scoped="" ref="0x404a4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a49e8"/>
        <function-ref name="set" scoped="" ref="0x404a4ac8"/>
        <function-ref name="clr" scoped="" ref="0x404a4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404afb68" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404afb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404afd40"/>
        <function-ref name="isInput" scoped="" ref="0x404afe20"/>
        <function-ref name="toggle" scoped="" ref="0x404aff00"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae010"/>
        <function-ref name="get" scoped="" ref="0x404ae0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae1d0"/>
        <function-ref name="set" scoped="" ref="0x404ae2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ae390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ac3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ac3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac588"/>
        <function-ref name="isInput" scoped="" ref="0x404ac668"/>
        <function-ref name="toggle" scoped="" ref="0x404ac748"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac828"/>
        <function-ref name="get" scoped="" ref="0x404ac908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac9e8"/>
        <function-ref name="set" scoped="" ref="0x404acac8"/>
        <function-ref name="clr" scoped="" ref="0x404acba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404ce4d0" loc="50:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404ce4d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402cfce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402cfce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ce6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404ce880" loc="51:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404ce880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404cea58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404ceb38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404cec18"/>
        <function-ref name="actualMicro" scoped="" ref="0x404cecf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404cedd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404d8030" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404d8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d8208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404c02b8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404c02b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404c0490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x404c0c18" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404c0c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c0df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404c0650" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404c0650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c0828"/>
        <function-ref name="taskLoop" scoped="" ref="0x404c0908"/>
        <function-ref name="runNextTask" scoped="" ref="0x404c09e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402ddbc0" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402ddbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402ddd98"/>
        <function-ref name="runTask" scoped="" ref="0x402dde78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402d6408" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402d6408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402d65e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402d66c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402d67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40358100" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40358100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403582d8"/>
        <function-ref name="runTask" scoped="" ref="0x403583b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40358d60" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40358d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40357010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403528a8" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403528a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40352a80"/>
        <function-ref name="taskLoop" scoped="" ref="0x40352b60"/>
        <function-ref name="runNextTask" scoped="" ref="0x40352c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40365e88" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40365e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40368070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402d7720" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402d7720"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402d78f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403663e0" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403663e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403665b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x403ebdd8" loc="30:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x403ebdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e1010"/>
        <function-ref name="stopDone" scoped="" ref="0x404e10f0"/>
        <function-ref name="start" scoped="" ref="0x404e11d0"/>
        <function-ref name="stop" scoped="" ref="0x404e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405039d8" loc="47:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405039d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4050f5b0"/>
        <function-ref name="clear" scoped="" ref="0x4050f960"/>
        <function-ref name="isValid" scoped="" ref="0x4050f200"/>
        <function-ref name="set" scoped="" ref="0x4050fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x404ebea8" loc="35:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x404ebea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x404df0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x404e1710" loc="32:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404e1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e18e8"/>
        <function-ref name="getPayload" scoped="" ref="0x404e19c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404e1aa8"/>
        <function-ref name="cancel" scoped="" ref="0x404e1b88"/>
        <function-ref name="sendDone" scoped="" ref="0x404e1c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x404e0798" loc="34:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404e0798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e0970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x404e6e50" loc="37:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404ec050"/>
        <function-ref name="payloadLength" scoped="" ref="0x404ec130"/>
        <function-ref name="getPayload" scoped="" ref="0x404ec210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404ec2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404ec3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x404fdb30" loc="41:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x404fdb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x404fdd08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x404fdde8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x404fdec8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x404f6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404e0100" loc="33:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404e0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404e02d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40501da0" loc="40:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40501da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x404f3010"/>
        <function-ref name="noAck" scoped="" ref="0x404f30f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x404f31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x405084d0" loc="43:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x405084d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x405086a8"/>
        <function-ref name="setRetries" scoped="" ref="0x40508788"/>
        <function-ref name="getRetries" scoped="" ref="0x40508868"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40508948"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40508a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x404f8bf8" loc="38:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404f8bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404f8dd0"/>
        <function-ref name="source" scoped="" ref="0x404f8eb0"/>
        <function-ref name="address" scoped="" ref="0x404ea010"/>
        <function-ref name="destination" scoped="" ref="0x404ea0f0"/>
        <function-ref name="setSource" scoped="" ref="0x404ea1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x404ea2b0"/>
        <function-ref name="type" scoped="" ref="0x404ea390"/>
        <function-ref name="setType" scoped="" ref="0x404ea470"/>
        <function-ref name="isForMe" scoped="" ref="0x404ea550"/>
        <function-ref name="setGroup" scoped="" ref="0x404ea630"/>
        <function-ref name="localGroup" scoped="" ref="0x404ea710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x404fe010" loc="46:/opt/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x404fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x404feb10"/>
        <function-ref name="clear" scoped="" ref="0x404feec0"/>
        <function-ref name="isValid" scoped="" ref="0x404fe760"/>
        <function-ref name="set" scoped="" ref="0x405032a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4050d7c8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4050d7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4050d9a0"/>
        <function-ref name="stopDone" scoped="" ref="0x4050da80"/>
        <function-ref name="start" scoped="" ref="0x4050db60"/>
        <function-ref name="stop" scoped="" ref="0x4050dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4051d510" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4051d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4051c0f8"/>
        <function-ref name="get" scoped="" ref="0x4051de18"/>
        <function-ref name="isSet" scoped="" ref="0x4051db58"/>
        <function-ref name="set" scoped="" ref="0x4051c3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405097f0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405097f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405099c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40509b48" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40509b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40509d20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40509e00"/>
        <function-ref name="getPayload" scoped="" ref="0x40509ee0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40517010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4050a100" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4050a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4050a2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4050a3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4050a498"/>
        <function-ref name="cancel" scoped="" ref="0x4050a578"/>
        <function-ref name="sendDone" scoped="" ref="0x4050a658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40509178" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40509178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40509350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4051e120" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4051e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4051ed68"/>
        <function-ref name="get" scoped="" ref="0x4051eaa8"/>
        <function-ref name="isSet" scoped="" ref="0x4051e7e8"/>
        <function-ref name="set" scoped="" ref="0x4051d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40516598" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40516598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40516770"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40516850"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40516930"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40516a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4050aac0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4050aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4050ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4051a130" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4051a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4051ac30"/>
        <function-ref name="clear" scoped="" ref="0x40519010"/>
        <function-ref name="isValid" scoped="" ref="0x4051a880"/>
        <function-ref name="set" scoped="" ref="0x405193c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40518558" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40518558"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40518ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4051fd38" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4051fd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40513910"/>
        <function-ref name="get" scoped="" ref="0x40513650"/>
        <function-ref name="isSet" scoped="" ref="0x40513390"/>
        <function-ref name="set" scoped="" ref="0x40513bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40516010" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40516010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405161e8"/>
        <function-ref name="noAck" scoped="" ref="0x405162c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x405163a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40516bb8" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40516bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40516d90"/>
        <function-ref name="setRetries" scoped="" ref="0x40516e70"/>
        <function-ref name="getRetries" scoped="" ref="0x40515010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x405150f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x405151d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40517288" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40517288"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40517460"/>
        <function-ref name="source" scoped="" ref="0x40517540"/>
        <function-ref name="address" scoped="" ref="0x40517620"/>
        <function-ref name="destination" scoped="" ref="0x40517700"/>
        <function-ref name="setSource" scoped="" ref="0x405177e0"/>
        <function-ref name="setDestination" scoped="" ref="0x405178c0"/>
        <function-ref name="type" scoped="" ref="0x405179a0"/>
        <function-ref name="setType" scoped="" ref="0x40517a80"/>
        <function-ref name="isForMe" scoped="" ref="0x40517b60"/>
        <function-ref name="setGroup" scoped="" ref="0x40517c40"/>
        <function-ref name="localGroup" scoped="" ref="0x40517d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x405126d8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x405126d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x405128b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40512990"/>
        <function-ref name="getChannel" scoped="" ref="0x40512a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40519af8" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40519af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405266b8"/>
        <function-ref name="clear" scoped="" ref="0x40526a68"/>
        <function-ref name="isValid" scoped="" ref="0x40526308"/>
        <function-ref name="set" scoped="" ref="0x40526e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40525798" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40525798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40525970"/>
        <function-ref name="stopDone" scoped="" ref="0x40525a50"/>
        <function-ref name="start" scoped="" ref="0x40525b30"/>
        <function-ref name="stop" scoped="" ref="0x40525c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4053a580" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4053a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40538170"/>
        <function-ref name="get" scoped="" ref="0x4053ae88"/>
        <function-ref name="isSet" scoped="" ref="0x4053abc8"/>
        <function-ref name="set" scoped="" ref="0x40538430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x4052d778" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x4052d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4052d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40534eb0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40534eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4052c0c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4052c1a0"/>
        <function-ref name="request" scoped="" ref="0x4052c280"/>
        <function-ref name="granted" scoped="" ref="0x4052c360"/>
        <function-ref name="isOwner" scoped="" ref="0x4052c440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405217f0" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405217f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405219c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40522100" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40522100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405222d8"/>
        <function-ref name="getPayload" scoped="" ref="0x405223b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40522498"/>
        <function-ref name="cancel" scoped="" ref="0x40522578"/>
        <function-ref name="sendDone" scoped="" ref="0x40522658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40521178" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40521178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40521350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40537010" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40537010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x405371e8"/>
        <function-ref name="address" scoped="" ref="0x405372c8"/>
        <function-ref name="destination" scoped="" ref="0x405373a8"/>
        <function-ref name="setSource" scoped="" ref="0x40537488"/>
        <function-ref name="setDestination" scoped="" ref="0x40537568"/>
        <function-ref name="pan" scoped="" ref="0x40537648"/>
        <function-ref name="setPan" scoped="" ref="0x40537728"/>
        <function-ref name="isForMe" scoped="" ref="0x40537808"/>
        <function-ref name="localPan" scoped="" ref="0x405378e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40537b70" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40537b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40537dc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40537ea8"/>
        <function-ref name="getPayload" scoped="" ref="0x40533010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405330f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40533978" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40533978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40533b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40533c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40533d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40533df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4053b218" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4053b218"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4053bde0"/>
        <function-ref name="get" scoped="" ref="0x4053bb20"/>
        <function-ref name="isSet" scoped="" ref="0x4053b860"/>
        <function-ref name="set" scoped="" ref="0x4053a0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40522ac0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40522ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40522c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x4052f8b0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x4052f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4052fa88"/>
        <function-ref name="payloadLength" scoped="" ref="0x4052fb68"/>
        <function-ref name="getPayload" scoped="" ref="0x4052fc48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4052fd28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4052fe08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40547560" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40547560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40546088"/>
        <function-ref name="clear" scoped="" ref="0x40546438"/>
        <function-ref name="isValid" scoped="" ref="0x40547cb0"/>
        <function-ref name="set" scoped="" ref="0x405467e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40538908" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40538908"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40547010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4053ee18" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4053ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4053da08"/>
        <function-ref name="get" scoped="" ref="0x4053d748"/>
        <function-ref name="isSet" scoped="" ref="0x4053d488"/>
        <function-ref name="set" scoped="" ref="0x4053dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405333f0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405335c8"/>
        <function-ref name="noAck" scoped="" ref="0x405336a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40533788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40528ab8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40528ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40528c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40528d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40528e50"/>
        <function-ref name="cancel" scoped="" ref="0x4052d010"/>
        <function-ref name="sendDone" scoped="" ref="0x4052d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4053e010" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4053e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4053e1e8"/>
        <function-ref name="setRetries" scoped="" ref="0x4053e2c8"/>
        <function-ref name="getRetries" scoped="" ref="0x4053e3a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4053e488"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4053e568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40521b60" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40521b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40521d38"/>
        <function-ref name="source" scoped="" ref="0x40521e18"/>
        <function-ref name="address" scoped="" ref="0x40521ef8"/>
        <function-ref name="destination" scoped="" ref="0x4052f010"/>
        <function-ref name="setSource" scoped="" ref="0x4052f0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4052f1d0"/>
        <function-ref name="type" scoped="" ref="0x4052f2b0"/>
        <function-ref name="setType" scoped="" ref="0x4052f390"/>
        <function-ref name="isForMe" scoped="" ref="0x4052f470"/>
        <function-ref name="setGroup" scoped="" ref="0x4052f550"/>
        <function-ref name="localGroup" scoped="" ref="0x4052f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4052d328" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4052d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4052d500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4053e728" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4053e728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4053e900"/>
        <function-ref name="setChannel" scoped="" ref="0x4053e9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x4053eac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40546f20" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40546f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40544a38"/>
        <function-ref name="clear" scoped="" ref="0x40544de8"/>
        <function-ref name="isValid" scoped="" ref="0x40544688"/>
        <function-ref name="set" scoped="" ref="0x405431b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40551d98" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40551d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4055e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40553010" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40553010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x40553808"/>
        <function-ref name="channelError" scoped="" ref="0x405532c8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x405533a8"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40553488"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40553568"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40553648"/>
        <function-ref name="getSender" scoped="" ref="0x40553728"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x405531e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40564da0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40564da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40551010"/>
        <function-ref name="checkFrame" scoped="" ref="0x405510f0"/>
        <function-ref name="source" scoped="" ref="0x405511d0"/>
        <function-ref name="destination" scoped="" ref="0x405512b0"/>
        <function-ref name="setSource" scoped="" ref="0x40551390"/>
        <function-ref name="setDestination" scoped="" ref="0x40551470"/>
        <function-ref name="setGroup" scoped="" ref="0x40551550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40558360" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40558360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40558538"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40558618"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405586f8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405587d8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405588b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40571b18" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40571b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40571cf0"/>
        <function-ref name="wait" scoped="" ref="0x40571dd0"/>
        <function-ref name="cancel" scoped="" ref="0x40571eb0"/>
        <function-ref name="isFree" scoped="" ref="0x40573010"/>
        <function-ref name="getNow" scoped="" ref="0x405730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x4057dde0" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x4057dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40572010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405720f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405721d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405722b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40572390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40572470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40572800" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40572800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405703c0"/>
        <function-ref name="clear" scoped="" ref="0x40570770"/>
        <function-ref name="isValid" scoped="" ref="0x40570010"/>
        <function-ref name="set" scoped="" ref="0x40570b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x4054b078" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x4054b078"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054b250"/>
        <function-ref name="headerLength" scoped="" ref="0x4054b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x4054b410"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4054b4f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4054b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40540b40" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40540b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40540d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40556408" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40556408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405565e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405566c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405567a0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40556880"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40556960"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40556a40"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40556b20"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40556c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40575978" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40575978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40575b50"/>
        <function-ref name="getFramePending" scoped="" ref="0x40563e90"/>
        <function-ref name="setFCF" scoped="" ref="0x40575d10"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40575df0"/>
        <function-ref name="getDSN" scoped="" ref="0x40575ed0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40563010"/>
        <function-ref name="setDSN" scoped="" ref="0x405630f0"/>
        <function-ref name="createAckReply" scoped="" ref="0x405631d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405632b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40563390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40563470"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40563550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40563630"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40563790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40563870"/>
        <function-ref name="setFramePending" scoped="" ref="0x40563950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40563a30"/>
        <function-ref name="setDestPan" scoped="" ref="0x40563b10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40563bf0"/>
        <function-ref name="getFCF" scoped="" ref="0x40563cd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40575c30"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40563db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40554ac8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40554ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40554ca0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40554d80"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40554e60"/>
        <function-ref name="getSender" scoped="" ref="0x40540010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4055b750" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4055b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4055b928"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4055ba08"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4055bae8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4055bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40541a98" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40541a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40541c70"/>
        <function-ref name="wait" scoped="" ref="0x40541d50"/>
        <function-ref name="cancel" scoped="" ref="0x40541e30"/>
        <function-ref name="isFree" scoped="" ref="0x40541f10"/>
        <function-ref name="getNow" scoped="" ref="0x405ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405b87e8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405b87e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402cfce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402cfce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405bcd58"/>
        <function-ref name="fired" scoped="" ref="0x405bc528"/>
        <function-ref name="startAt" scoped="" ref="0x405bca18"/>
        <function-ref name="isRunning" scoped="" ref="0x405bc7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x405b7010"/>
        <function-ref name="start" scoped="" ref="0x405bc010"/>
        <function-ref name="stop" scoped="" ref="0x405bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x405b7a58" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405b7a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405b7c30"/>
        <function-ref name="wait" scoped="" ref="0x405b7d10"/>
        <function-ref name="cancel" scoped="" ref="0x405b7df0"/>
        <function-ref name="isFree" scoped="" ref="0x405b7ed0"/>
        <function-ref name="getNow" scoped="" ref="0x405c5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x405c5390" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405c5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405c4840"/>
        <function-ref name="fired" scoped="" ref="0x405c4010"/>
        <function-ref name="startAt" scoped="" ref="0x405c4500"/>
        <function-ref name="isRunning" scoped="" ref="0x405c4288"/>
        <function-ref name="getAlarm" scoped="" ref="0x405c4ab8"/>
        <function-ref name="start" scoped="" ref="0x405c5ae0"/>
        <function-ref name="stop" scoped="" ref="0x405c5d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x405bf740" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x405bf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x405bf918"/>
        <function-ref name="suspend" scoped="" ref="0x405bf9f8"/>
        <function-ref name="resume" scoped="" ref="0x405bfad8"/>
        <function-ref name="run" scoped="" ref="0x405bfbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x405b6b18" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x405b6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x405b6cf0"/>
        <function-ref name="suspend" scoped="" ref="0x405b6dd0"/>
        <function-ref name="resume" scoped="" ref="0x405b6eb0"/>
        <function-ref name="run" scoped="" ref="0x405c7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405dd540" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405dd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405dd718"/>
        <function-ref name="cancel" scoped="" ref="0x405dd7f8"/>
        <function-ref name="sendDone" scoped="" ref="0x405dd8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405dc4d0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405dc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405dc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405d1e10" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405d1e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405d3cd0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405d3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d3ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d2010"/>
        <function-ref name="getPayload" scoped="" ref="0x405d20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d21d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405d2710" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405d2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d28e8"/>
        <function-ref name="getPayload" scoped="" ref="0x405d29c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d2aa8"/>
        <function-ref name="cancel" scoped="" ref="0x405d2b88"/>
        <function-ref name="sendDone" scoped="" ref="0x405d2c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405d1798" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405d1798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d1970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x405d0290" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x405d0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405d0468"/>
        <function-ref name="payloadLength" scoped="" ref="0x405d0548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d0628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d0708"/>
        <function-ref name="headerLength" scoped="" ref="0x405d07e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x405d08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x405dc908" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x405dc908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405dcae0"/>
        <function-ref name="checkFrame" scoped="" ref="0x405dcbc0"/>
        <function-ref name="source" scoped="" ref="0x405dcca0"/>
        <function-ref name="destination" scoped="" ref="0x405dcd80"/>
        <function-ref name="setSource" scoped="" ref="0x405dce60"/>
        <function-ref name="setDestination" scoped="" ref="0x405e0010"/>
        <function-ref name="setGroup" scoped="" ref="0x405e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405d1100" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405d1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d12d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405d30b8" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405d30b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405d3290"/>
        <function-ref name="source" scoped="" ref="0x405d3370"/>
        <function-ref name="address" scoped="" ref="0x405d3450"/>
        <function-ref name="destination" scoped="" ref="0x405d3530"/>
        <function-ref name="setSource" scoped="" ref="0x405d3610"/>
        <function-ref name="setDestination" scoped="" ref="0x405d36f0"/>
        <function-ref name="type" scoped="" ref="0x405d37d0"/>
        <function-ref name="setType" scoped="" ref="0x405d38b0"/>
        <function-ref name="isForMe" scoped="" ref="0x405d3990"/>
        <function-ref name="setGroup" scoped="" ref="0x405d3a70"/>
        <function-ref name="localGroup" scoped="" ref="0x405d3b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x405e89d8" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x405e89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405e8bb0"/>
        <function-ref name="cancel" scoped="" ref="0x405e8c90"/>
        <function-ref name="sendDone" scoped="" ref="0x405e8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x405e7010" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x405e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405e71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x405d8d20" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x405d8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405d8ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405dac28" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405dac28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405dae00"/>
        <function-ref name="payloadLength" scoped="" ref="0x405daee0"/>
        <function-ref name="getPayload" scoped="" ref="0x405d9010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d90f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405d91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x405e0828" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x405e0828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e0a00"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e0ae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e0bc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e0ca0"/>
        <function-ref name="headerLength" scoped="" ref="0x405e0d80"/>
        <function-ref name="metadataLength" scoped="" ref="0x405e0e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405d9630" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405d9630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d9808"/>
        <function-ref name="getPayload" scoped="" ref="0x405d98e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405d99c8"/>
        <function-ref name="cancel" scoped="" ref="0x405d9aa8"/>
        <function-ref name="sendDone" scoped="" ref="0x405d9b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x405d86a8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x405d86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d8880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x405e81a0" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x405e81a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e8378"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e8458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e8538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e8618"/>
        <function-ref name="headerLength" scoped="" ref="0x405e86f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x405e87d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405d8010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405d81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x405e7448" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x405e7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405e7620"/>
        <function-ref name="checkFrame" scoped="" ref="0x405e7700"/>
        <function-ref name="source" scoped="" ref="0x405e77e0"/>
        <function-ref name="destination" scoped="" ref="0x405e78c0"/>
        <function-ref name="setSource" scoped="" ref="0x405e79a0"/>
        <function-ref name="setDestination" scoped="" ref="0x405e7a80"/>
        <function-ref name="setGroup" scoped="" ref="0x405e7b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405e3658" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405e3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405e3830"/>
        <function-ref name="changed" scoped="" ref="0x405e3910"/>
        <function-ref name="amGroup" scoped="" ref="0x405e39f0"/>
        <function-ref name="setAddress" scoped="" ref="0x405e3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405da010" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageLayerP.nc">
      <component-ref qname="ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405da1e8"/>
        <function-ref name="source" scoped="" ref="0x405da2c8"/>
        <function-ref name="address" scoped="" ref="0x405da3a8"/>
        <function-ref name="destination" scoped="" ref="0x405da488"/>
        <function-ref name="setSource" scoped="" ref="0x405da568"/>
        <function-ref name="setDestination" scoped="" ref="0x405da648"/>
        <function-ref name="type" scoped="" ref="0x405da728"/>
        <function-ref name="setType" scoped="" ref="0x405da808"/>
        <function-ref name="isForMe" scoped="" ref="0x405da8e8"/>
        <function-ref name="setGroup" scoped="" ref="0x405da9c8"/>
        <function-ref name="localGroup" scoped="" ref="0x405daaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x405db908" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405db908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x405dbae0"/>
        <function-ref name="changed" scoped="" ref="0x405dbbc0"/>
        <function-ref name="amGroup" scoped="" ref="0x405dbca0"/>
        <function-ref name="setAddress" scoped="" ref="0x405dbd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40628b08" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40628b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40628ce0"/>
        <function-ref name="cancel" scoped="" ref="0x40628dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40628ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40627010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406271e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406272c8"/>
        <function-ref name="request" scoped="" ref="0x406273a8"/>
        <function-ref name="granted" scoped="" ref="0x40627488"/>
        <function-ref name="isOwner" scoped="" ref="0x40627568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x406285e0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x406285e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406287b8"/>
        <function-ref name="cancel" scoped="" ref="0x40628898"/>
        <function-ref name="sendDone" scoped="" ref="0x40628978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4065eb60" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4065eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4065ed48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4065ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406714c0" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406714c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406716a8"/>
        <function-ref name="configure" scoped="" ref="0x40671788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4065e420" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4065e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4065e608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4065e6e8"/>
        <function-ref name="request" scoped="" ref="0x4065e7c8"/>
        <function-ref name="granted" scoped="" ref="0x4065e8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4065e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40671010" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40671010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x406711e8"/>
        <function-ref name="userId" scoped="" ref="0x406712c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f059f8" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f059f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f05bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f05d30" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f05d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f05f08"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f02010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f020f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f021d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f01490" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f01490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f01678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f01758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f01d58" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f01d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f00010"/>
        <function-ref name="configure" scoped="" ref="0x40f000f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f00250" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f00250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f00428"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f00508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f005e8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f006c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f02d38" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f02d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f02f20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f01018"/>
        <function-ref name="request" scoped="" ref="0x40f010f8"/>
        <function-ref name="granted" scoped="" ref="0x40f011d8"/>
        <function-ref name="isOwner" scoped="" ref="0x40f012b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f01898" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f01898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f01a70"/>
        <function-ref name="userId" scoped="" ref="0x40f01b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f00848" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f00848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f00a20"/>
        <function-ref name="runTask" scoped="" ref="0x40f00b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4066a670" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4066a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4066a848"/>
        <function-ref name="cancel" scoped="" ref="0x4066a928"/>
        <function-ref name="sendDone" scoped="" ref="0x4066aa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4066ac40" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4066ac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4066ae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4066d7a0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4066d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4066d978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40670528" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40670528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40670700"/>
        <function-ref name="payloadLength" scoped="" ref="0x406707e0"/>
        <function-ref name="getPayload" scoped="" ref="0x406708c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406709a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40670a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Packet" ref="0x4066b398" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4066b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4066b570"/>
        <function-ref name="address" scoped="" ref="0x4066b650"/>
        <function-ref name="destination" scoped="" ref="0x4066b730"/>
        <function-ref name="setSource" scoped="" ref="0x4066b810"/>
        <function-ref name="setDestination" scoped="" ref="0x4066b8f0"/>
        <function-ref name="pan" scoped="" ref="0x4066b9d0"/>
        <function-ref name="setPan" scoped="" ref="0x4066bab0"/>
        <function-ref name="isForMe" scoped="" ref="0x4066bb90"/>
        <function-ref name="localPan" scoped="" ref="0x4066bc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4066be20" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4066be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4066a010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4066a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4066a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4066a2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x4066a390"/>
        <function-ref name="metadataLength" scoped="" ref="0x4066a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4066dbc0" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4066dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4066dd98"/>
        <function-ref name="getFramePending" scoped="" ref="0x4066b1d0"/>
        <function-ref name="setFCF" scoped="" ref="0x4066c010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4066c0f0"/>
        <function-ref name="getDSN" scoped="" ref="0x4066c1d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4066c2b0"/>
        <function-ref name="setDSN" scoped="" ref="0x4066c390"/>
        <function-ref name="createAckReply" scoped="" ref="0x4066c470"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4066c550"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4066c630"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4066c710"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4066c7f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4066c8d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4066ca30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4066cb10"/>
        <function-ref name="setFramePending" scoped="" ref="0x4066cbf0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4066ccd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4066cdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4066ce90"/>
        <function-ref name="getFCF" scoped="" ref="0x4066b010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4066de78"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4066b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40670c30" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40670c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40670e08"/>
        <function-ref name="getPayload" scoped="" ref="0x40670ee8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4066d010"/>
        <function-ref name="cancel" scoped="" ref="0x4066d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4066d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4066d408" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4066d408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4066d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4068a260" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4068a260"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4068a438"/>
        <function-ref name="cancel" scoped="" ref="0x4068a518"/>
        <function-ref name="sendDone" scoped="" ref="0x4068a5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4068a830" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4068a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4068aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4068c6a0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4068c6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068c878"/>
        <function-ref name="payloadLength" scoped="" ref="0x4068c958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4068ca38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4068cb18"/>
        <function-ref name="headerLength" scoped="" ref="0x4068cbf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4068ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x4068b4f8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x4068b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4068b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4068ac38" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4068ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068ae10"/>
        <function-ref name="payloadLength" scoped="" ref="0x4068aef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40689010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406890f0"/>
        <function-ref name="headerLength" scoped="" ref="0x406891d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x406892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x4068cef8" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x4068cef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4068b0e0"/>
        <function-ref name="cancel" scoped="" ref="0x4068b1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x4068b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4068fba0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4068fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4068fd78"/>
        <function-ref name="cancel" scoped="" ref="0x4068fe58"/>
        <function-ref name="sendDone" scoped="" ref="0x4068c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4068c270" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4068c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4068c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x4068b920" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x4068b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4068baf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4068bbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4068bcb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4068bd98"/>
        <function-ref name="headerLength" scoped="" ref="0x4068be78"/>
        <function-ref name="metadataLength" scoped="" ref="0x4068a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406afcd8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406afcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x406afeb0"/>
        <function-ref name="address" scoped="" ref="0x406ae010"/>
        <function-ref name="destination" scoped="" ref="0x406ae0f0"/>
        <function-ref name="setSource" scoped="" ref="0x406ae1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x406ae2b0"/>
        <function-ref name="pan" scoped="" ref="0x406ae390"/>
        <function-ref name="setPan" scoped="" ref="0x406ae470"/>
        <function-ref name="isForMe" scoped="" ref="0x406ae550"/>
        <function-ref name="localPan" scoped="" ref="0x406ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x406ae7e0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x406ae7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ae9b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406aea98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406aeb78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406aec58"/>
        <function-ref name="headerLength" scoped="" ref="0x406aed38"/>
        <function-ref name="metadataLength" scoped="" ref="0x406aee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4068d5a0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4068d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4068d778"/>
        <function-ref name="getFramePending" scoped="" ref="0x406afb10"/>
        <function-ref name="setFCF" scoped="" ref="0x4068d938"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4068da18"/>
        <function-ref name="getDSN" scoped="" ref="0x4068daf8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4068dbd8"/>
        <function-ref name="setDSN" scoped="" ref="0x4068dcb8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4068dd98"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4068de78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406af010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406af0f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406af1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406af2b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406af410"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406af4f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x406af5d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406af6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x406af790"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406af870"/>
        <function-ref name="getFCF" scoped="" ref="0x406af950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4068d858"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406afa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406ad0c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406ad0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ad298"/>
        <function-ref name="payloadLength" scoped="" ref="0x406ad378"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ad458"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406ad538"/>
        <function-ref name="headerLength" scoped="" ref="0x406ad618"/>
        <function-ref name="metadataLength" scoped="" ref="0x406ad6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x406a8558" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x406a8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x406a8730"/>
        <function-ref name="address" scoped="" ref="0x406a8810"/>
        <function-ref name="destination" scoped="" ref="0x406a88f0"/>
        <function-ref name="setSource" scoped="" ref="0x406a89d0"/>
        <function-ref name="setDestination" scoped="" ref="0x406a8ab0"/>
        <function-ref name="pan" scoped="" ref="0x406a8b90"/>
        <function-ref name="setPan" scoped="" ref="0x406a8c70"/>
        <function-ref name="isForMe" scoped="" ref="0x406a8d50"/>
        <function-ref name="localPan" scoped="" ref="0x406a8e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x406a7010" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x406a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a71e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a72c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a73a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a7488"/>
        <function-ref name="headerLength" scoped="" ref="0x406a7568"/>
        <function-ref name="metadataLength" scoped="" ref="0x406a7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x406ade78" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x406ade78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x406a9070"/>
        <function-ref name="getFramePending" scoped="" ref="0x406a8390"/>
        <function-ref name="setFCF" scoped="" ref="0x406a9230"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406a9310"/>
        <function-ref name="getDSN" scoped="" ref="0x406a93f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406a94d0"/>
        <function-ref name="setDSN" scoped="" ref="0x406a95b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x406a9690"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406a9770"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x406a9850"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406a9930"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x406a9a10"/>
        <function-ref name="getAckRequired" scoped="" ref="0x406a9af0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x406a9c50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x406a9d30"/>
        <function-ref name="setFramePending" scoped="" ref="0x406a9e10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x406a9ef0"/>
        <function-ref name="setDestPan" scoped="" ref="0x406a8010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x406a80f0"/>
        <function-ref name="getFCF" scoped="" ref="0x406a81d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x406a9150"/>
        <function-ref name="getDestAddr" scoped="" ref="0x406a82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x406a78a8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x406a78a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406a7a80"/>
        <function-ref name="changed" scoped="" ref="0x406a7b60"/>
        <function-ref name="amGroup" scoped="" ref="0x406a7c40"/>
        <function-ref name="setAddress" scoped="" ref="0x406a7d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x406a6010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x406a6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406a61e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406a62c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a63a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406a6488"/>
        <function-ref name="headerLength" scoped="" ref="0x406a6568"/>
        <function-ref name="metadataLength" scoped="" ref="0x406a6648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406ea3f0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406ea3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ea5c8"/>
        <function-ref name="cancel" scoped="" ref="0x406ea6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x406ea788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406ea9d0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406ea9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406eaba8"/>
        <function-ref name="header" scoped="" ref="0x406eac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406ed7c0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406ed7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ed998"/>
        <function-ref name="cancel" scoped="" ref="0x406eda78"/>
        <function-ref name="sendDone" scoped="" ref="0x406edb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x406eaea8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x406eaea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406e90c0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x406e91a0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406e9280"/>
        <function-ref name="getSender" scoped="" ref="0x406e9360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x406e8e98" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x406e8e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ea0c0"/>
        <function-ref name="header" scoped="" ref="0x406ea1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x406fb860" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x406fb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406fba38"/>
        <function-ref name="cancel" scoped="" ref="0x406fbb18"/>
        <function-ref name="sendDone" scoped="" ref="0x406fbbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x406fbe40" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x406fbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406fa050"/>
        <function-ref name="header" scoped="" ref="0x406fa130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x406f3f10" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x406f3f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f8108"/>
        <function-ref name="clearAll" scoped="" ref="0x406f81e8"/>
        <function-ref name="get" scoped="" ref="0x406f82c8"/>
        <function-ref name="set" scoped="" ref="0x406f83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x406e9a58" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x406e9a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e9c30"/>
        <function-ref name="cancel" scoped="" ref="0x406e9d10"/>
        <function-ref name="sendDone" scoped="" ref="0x406e9df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x406f5ed0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x406f5ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x406f90c0"/>
        <function-ref name="insertNode" scoped="" ref="0x406f91a0"/>
        <function-ref name="getNode" scoped="" ref="0x406f9280"/>
        <function-ref name="evicted" scoped="" ref="0x406f9360"/>
        <function-ref name="getIndex" scoped="" ref="0x406f9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x406fb010" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x406fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406fb1e8"/>
        <function-ref name="header" scoped="" ref="0x406fb2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406fb438" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406fb438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406fb610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x406fa2f0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x406fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x406fa4c8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x406fa5a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x406fa688"/>
        <function-ref name="getSender" scoped="" ref="0x406fa768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x406fd6a8" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x406fd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x406fd880"/>
        <function-ref name="insertNode" scoped="" ref="0x406fd960"/>
        <function-ref name="getNode" scoped="" ref="0x406fda40"/>
        <function-ref name="evicted" scoped="" ref="0x406fdb20"/>
        <function-ref name="getIndex" scoped="" ref="0x406fdc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40710100" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40710100"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407102d8"/>
        <function-ref name="clearAll" scoped="" ref="0x407103b8"/>
        <function-ref name="get" scoped="" ref="0x40710498"/>
        <function-ref name="set" scoped="" ref="0x40710578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40713630" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40713630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40713808"/>
        <function-ref name="insertNode" scoped="" ref="0x407138e8"/>
        <function-ref name="getNode" scoped="" ref="0x407139c8"/>
        <function-ref name="evicted" scoped="" ref="0x40713aa8"/>
        <function-ref name="getIndex" scoped="" ref="0x40713b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40713298" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40713298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40713470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x407111b0" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x407111b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40711388"/>
        <function-ref name="clearAll" scoped="" ref="0x40711468"/>
        <function-ref name="get" scoped="" ref="0x40711548"/>
        <function-ref name="set" scoped="" ref="0x40711628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406ebc68" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406ebc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406ebe40"/>
        <function-ref name="stopDone" scoped="" ref="0x406ebf20"/>
        <function-ref name="start" scoped="" ref="0x40725018"/>
        <function-ref name="stop" scoped="" ref="0x407250f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x407232f0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x407232f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407234c8"/>
        <function-ref name="cancel" scoped="" ref="0x407235a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40723688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407238c0" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407238c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40723a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407252e0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407252e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407254b8"/>
        <function-ref name="cancel" scoped="" ref="0x40725598"/>
        <function-ref name="sendDone" scoped="" ref="0x40725678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40725c18" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40725c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40725df0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40725ed0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40724010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407240f0"/>
        <function-ref name="headerLength" scoped="" ref="0x407241d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x407242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x407244a0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x407244a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40724678"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40724758"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40724838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40724918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40724bb0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40724bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40724d88"/>
        <function-ref name="stopDone" scoped="" ref="0x40724e68"/>
        <function-ref name="start" scoped="" ref="0x40723010"/>
        <function-ref name="stop" scoped="" ref="0x407230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40725890" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40725890"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40725a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40723cc8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="LowPowerListeningDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40723cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40723ea0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40722010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407220f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407221d0"/>
        <function-ref name="headerLength" scoped="" ref="0x407222b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40722390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40737238" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40737238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40737410"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x407374f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x407375d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x407376b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40731bf8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40731bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40731dd0"/>
        <function-ref name="cancel" scoped="" ref="0x40731eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40730010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x407216e8" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x407216e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407218c0"/>
        <function-ref name="cancel" scoped="" ref="0x407219a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40721a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40731380" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40731380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40731558"/>
        <function-ref name="payloadLength" scoped="" ref="0x40731638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40731718"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407317f8"/>
        <function-ref name="headerLength" scoped="" ref="0x407318d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x407319b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40730240" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40730240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40730418"/>
        <function-ref name="payloadLength" scoped="" ref="0x407304f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407305d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407306b8"/>
        <function-ref name="headerLength" scoped="" ref="0x40730798"/>
        <function-ref name="metadataLength" scoped="" ref="0x40730878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40730a98" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40730a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40730c70"/>
        <function-ref name="noAck" scoped="" ref="0x40730d50"/>
        <function-ref name="wasAcked" scoped="" ref="0x40730e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40721c28" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerC.nc">
      <component-ref qname="PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40721c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40721e00"/>
        <function-ref name="setRetries" scoped="" ref="0x40721ee0"/>
        <function-ref name="getRetries" scoped="" ref="0x40731010"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x407310f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x407311d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4072cb18" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4072cb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072ccf0"/>
        <function-ref name="cancel" scoped="" ref="0x4072cdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x4072ceb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x4073fd50" loc="87:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x4073fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4073ff28"/>
        <function-ref name="runTask" scoped="" ref="0x4073e018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x407427a8" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x407427a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40740330"/>
        <function-ref name="fired" scoped="" ref="0x40741540"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40741c48"/>
        <function-ref name="isOneShot" scoped="" ref="0x407419f0"/>
        <function-ref name="getdt" scoped="" ref="0x407407e0"/>
        <function-ref name="gett0" scoped="" ref="0x40740588"/>
        <function-ref name="isRunning" scoped="" ref="0x40741798"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40742dd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40740010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40741068"/>
        <function-ref name="stop" scoped="" ref="0x407412e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4072f620" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4072f620"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072f7f8"/>
        <function-ref name="cancel" scoped="" ref="0x4072f8d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4072f9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4072c2a0" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4072c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072c478"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072c558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072c638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072c718"/>
        <function-ref name="headerLength" scoped="" ref="0x4072c7f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4072c8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40740ae0" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40740ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40740cb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40740d98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40740e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4073f010"/>
        <function-ref name="headerLength" scoped="" ref="0x4073f0f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4073f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40742140" loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40742140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40742318"/>
        <function-ref name="noAck" scoped="" ref="0x407423f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x407424d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4072fb60" loc="65:/opt/tinyos-2.x/tos/chips/rf2xx/layers/PacketLinkLayerP.nc">
      <component-ref qname="PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4072fb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4072fd38"/>
        <function-ref name="setRetries" scoped="" ref="0x4072fe18"/>
        <function-ref name="getRetries" scoped="" ref="0x4072fef8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4072c010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4072c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4072d330" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4072d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085ce38"/>
        <function-ref name="fired" scoped="" ref="0x4085c0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085c7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085c5a0"/>
        <function-ref name="getdt" scoped="" ref="0x4085b310"/>
        <function-ref name="gett0" scoped="" ref="0x4085b0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4085c348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4072d958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085cb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4072dbd8"/>
        <function-ref name="stop" scoped="" ref="0x4072de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40761618" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40761618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4075f130"/>
        <function-ref name="fired" scoped="" ref="0x407603c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40760ad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40760878"/>
        <function-ref name="getdt" scoped="" ref="0x4075f5e0"/>
        <function-ref name="gett0" scoped="" ref="0x4075f388"/>
        <function-ref name="isRunning" scoped="" ref="0x40760620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40761c40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40760df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40761ec0"/>
        <function-ref name="stop" scoped="" ref="0x40760170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40773628" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40773628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40771130"/>
        <function-ref name="fired" scoped="" ref="0x407723c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40772ad0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40772878"/>
        <function-ref name="getdt" scoped="" ref="0x407715e0"/>
        <function-ref name="gett0" scoped="" ref="0x40771388"/>
        <function-ref name="isRunning" scoped="" ref="0x40772620"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40773c50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40772df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40773ed0"/>
        <function-ref name="stop" scoped="" ref="0x40772170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40771940" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40771940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4076f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4075fe60" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4075fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40773050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40769010" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40769010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40769760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40769c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407699d8"/>
        <function-ref name="overflow" scoped="" ref="0x40769ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4076c060" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4076c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4076c238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4076c628" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4076c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4076baf0"/>
        <function-ref name="fired" scoped="" ref="0x4076b2c0"/>
        <function-ref name="startAt" scoped="" ref="0x4076b7b0"/>
        <function-ref name="isRunning" scoped="" ref="0x4076b538"/>
        <function-ref name="getAlarm" scoped="" ref="0x4076bd68"/>
        <function-ref name="start" scoped="" ref="0x4076cd78"/>
        <function-ref name="stop" scoped="" ref="0x4076b048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4080a850" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4080a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40809d58"/>
        <function-ref name="fired" scoped="" ref="0x40809528"/>
        <function-ref name="startAt" scoped="" ref="0x40809a18"/>
        <function-ref name="isRunning" scoped="" ref="0x408097a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40808010"/>
        <function-ref name="start" scoped="" ref="0x40809010"/>
        <function-ref name="stop" scoped="" ref="0x408092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4080a418" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4080a418"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402cfae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402cfae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4080a5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40808340" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40808340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40808a90"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40806010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40808d08"/>
        <function-ref name="overflow" scoped="" ref="0x40806288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40f16ec0" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40f16ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40f150c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40f151a0"/>
        <function-ref name="getControlA" scoped="" ref="0x40f15280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40f15360"/>
        <function-ref name="setControlB" scoped="" ref="0x40f15440"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40f15520"/>
        <function-ref name="getControlB" scoped="" ref="0x40f15600"/>
        <function-ref name="setControlA" scoped="" ref="0x40f156e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40f1c010" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f1c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f1a4e0"/>
        <function-ref name="fired" scoped="" ref="0x40f1cc78"/>
        <function-ref name="startAt" scoped="" ref="0x40f1a1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f1cef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f1a758"/>
        <function-ref name="start" scoped="" ref="0x40f1c760"/>
        <function-ref name="stop" scoped="" ref="0x40f1ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f1db28" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f1db28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f1dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f1aa88" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f1aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f19200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f196f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f19478"/>
        <function-ref name="overflow" scoped="" ref="0x40f19968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40f132e8" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40f132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x40f134c0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x40f135a0"/>
        <function-ref name="controlABusy" scoped="" ref="0x40f13680"/>
        <function-ref name="controlBBusy" scoped="" ref="0x40f13760"/>
        <function-ref name="countBusy" scoped="" ref="0x40f13840"/>
        <function-ref name="compareABusy" scoped="" ref="0x40f13920"/>
        <function-ref name="getAssr" scoped="" ref="0x40f13a00"/>
        <function-ref name="setAssr" scoped="" ref="0x40f13ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40f158d0" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40f158d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f14e28"/>
        <function-ref name="fired" scoped="" ref="0x40f14448"/>
        <function-ref name="get" scoped="" ref="0x40f15f18"/>
        <function-ref name="reset" scoped="" ref="0x40f146c0"/>
        <function-ref name="isOn" scoped="" ref="0x40f130b8"/>
        <function-ref name="set" scoped="" ref="0x40f141a8"/>
        <function-ref name="start" scoped="" ref="0x40f14938"/>
        <function-ref name="stop" scoped="" ref="0x40f14bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40f19c58" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f19c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f16778"/>
        <function-ref name="test" scoped="" ref="0x40f16288"/>
        <function-ref name="get" scoped="" ref="0x40f182e8"/>
        <function-ref name="setScale" scoped="" ref="0x40f169f0"/>
        <function-ref name="getScale" scoped="" ref="0x40f16c90"/>
        <function-ref name="reset" scoped="" ref="0x40f18a78"/>
        <function-ref name="overflow" scoped="" ref="0x40f18800"/>
        <function-ref name="isOn" scoped="" ref="0x40f16500"/>
        <function-ref name="set" scoped="" ref="0x40f18560"/>
        <function-ref name="start" scoped="" ref="0x40f18cf0"/>
        <function-ref name="stop" scoped="" ref="0x40f16010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407c6878" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407c6878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407c6a50"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407c6b30"/>
        <function-ref name="getControlA" scoped="" ref="0x407c6c10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407c6cf0"/>
        <function-ref name="setControlB" scoped="" ref="0x407c6dd0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407c6eb0"/>
        <function-ref name="getControlB" scoped="" ref="0x407c5010"/>
        <function-ref name="setControlA" scoped="" ref="0x407c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407c2010" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407c21e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407c22c8"/>
        <function-ref name="controlABusy" scoped="" ref="0x407c23a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407c2488"/>
        <function-ref name="countBusy" scoped="" ref="0x407c2568"/>
        <function-ref name="compareABusy" scoped="" ref="0x407c2648"/>
        <function-ref name="getAssr" scoped="" ref="0x407c2728"/>
        <function-ref name="setAssr" scoped="" ref="0x407c2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407c5418" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407c5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407c49f0"/>
        <function-ref name="fired" scoped="" ref="0x407c4010"/>
        <function-ref name="get" scoped="" ref="0x407c5a60"/>
        <function-ref name="reset" scoped="" ref="0x407c4288"/>
        <function-ref name="isOn" scoped="" ref="0x407c4c68"/>
        <function-ref name="set" scoped="" ref="0x407c5cd8"/>
        <function-ref name="start" scoped="" ref="0x407c4500"/>
        <function-ref name="stop" scoped="" ref="0x407c4778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407c9540" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407c6010"/>
        <function-ref name="test" scoped="" ref="0x407c7a98"/>
        <function-ref name="get" scoped="" ref="0x407c9b88"/>
        <function-ref name="setScale" scoped="" ref="0x407c6288"/>
        <function-ref name="getScale" scoped="" ref="0x407c6528"/>
        <function-ref name="reset" scoped="" ref="0x407c7330"/>
        <function-ref name="overflow" scoped="" ref="0x407c70b8"/>
        <function-ref name="isOn" scoped="" ref="0x407c7d10"/>
        <function-ref name="set" scoped="" ref="0x407c9e00"/>
        <function-ref name="start" scoped="" ref="0x407c75a8"/>
        <function-ref name="stop" scoped="" ref="0x407c7820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407d78d0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407d78d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407d7aa8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407d7b88"/>
        <function-ref name="getControlA" scoped="" ref="0x407d7c68"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407d7d48"/>
        <function-ref name="setControlB" scoped="" ref="0x407d7e28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407d7f08"/>
        <function-ref name="getControlB" scoped="" ref="0x407d6010"/>
        <function-ref name="setControlA" scoped="" ref="0x407d60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407d4f20" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407d4f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407d3110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407d3398" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407d3398"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407d3570"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407d3650"/>
        <function-ref name="controlABusy" scoped="" ref="0x407d3730"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407d3810"/>
        <function-ref name="countBusy" scoped="" ref="0x407d38f0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407d39d0"/>
        <function-ref name="getAssr" scoped="" ref="0x407d3ab0"/>
        <function-ref name="setAssr" scoped="" ref="0x407d3b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d6418" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407d6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407d49f0"/>
        <function-ref name="fired" scoped="" ref="0x407d4010"/>
        <function-ref name="get" scoped="" ref="0x407d6a60"/>
        <function-ref name="reset" scoped="" ref="0x407d4288"/>
        <function-ref name="isOn" scoped="" ref="0x407d4c68"/>
        <function-ref name="set" scoped="" ref="0x407d6cd8"/>
        <function-ref name="start" scoped="" ref="0x407d4500"/>
        <function-ref name="stop" scoped="" ref="0x407d4778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407bf5f8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407bf5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407d7068"/>
        <function-ref name="test" scoped="" ref="0x407d8b50"/>
        <function-ref name="get" scoped="" ref="0x407bfc40"/>
        <function-ref name="setScale" scoped="" ref="0x407d72e0"/>
        <function-ref name="getScale" scoped="" ref="0x407d7580"/>
        <function-ref name="reset" scoped="" ref="0x407d83e8"/>
        <function-ref name="overflow" scoped="" ref="0x407d8170"/>
        <function-ref name="isOn" scoped="" ref="0x407d8dc8"/>
        <function-ref name="set" scoped="" ref="0x407bfeb8"/>
        <function-ref name="start" scoped="" ref="0x407d8660"/>
        <function-ref name="stop" scoped="" ref="0x407d88d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x408234d8" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x408234d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408236b0"/>
        <function-ref name="runTask" scoped="" ref="0x40823790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40826a48" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40826a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40823010"/>
        <function-ref name="fired" scoped="" ref="0x40824718"/>
        <function-ref name="startAt" scoped="" ref="0x40824c08"/>
        <function-ref name="isRunning" scoped="" ref="0x40824990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40823288"/>
        <function-ref name="start" scoped="" ref="0x40824200"/>
        <function-ref name="stop" scoped="" ref="0x408244a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4076d720" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4076d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40826248"/>
        <function-ref name="fired" scoped="" ref="0x408274e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40827bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40827998"/>
        <function-ref name="getdt" scoped="" ref="0x408266f8"/>
        <function-ref name="gett0" scoped="" ref="0x408264a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40827740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4076dd48"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40827f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40827010"/>
        <function-ref name="stop" scoped="" ref="0x40827290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4084bbc8" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4084bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4084bda0"/>
        <function-ref name="runTask" scoped="" ref="0x4084be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4084e968" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4084e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4084b4c8"/>
        <function-ref name="fired" scoped="" ref="0x4084c768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4084ce70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4084cc18"/>
        <function-ref name="getdt" scoped="" ref="0x4084b978"/>
        <function-ref name="gett0" scoped="" ref="0x4084b720"/>
        <function-ref name="isRunning" scoped="" ref="0x4084c9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4084c010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4084b1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4084c290"/>
        <function-ref name="stop" scoped="" ref="0x4084c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40820600" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40820600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4084e1a8"/>
        <function-ref name="fired" scoped="" ref="0x4084f3d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4084fb10"/>
        <function-ref name="isOneShot" scoped="" ref="0x4084f8a8"/>
        <function-ref name="getdt" scoped="" ref="0x4084e678"/>
        <function-ref name="gett0" scoped="" ref="0x4084e410"/>
        <function-ref name="isRunning" scoped="" ref="0x4084f640"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40820c38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4084fe40"/>
        <function-ref name="startOneShot" scoped="" ref="0x40820ec8"/>
        <function-ref name="stop" scoped="" ref="0x4084f170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x408490a0" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408496e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40849a38" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40849a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4085e200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4085e6f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4085e478"/>
        <function-ref name="overflow" scoped="" ref="0x4085e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40859680" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40859680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40859858"/>
        <function-ref name="stopDone" scoped="" ref="0x40859938"/>
        <function-ref name="start" scoped="" ref="0x40859a18"/>
        <function-ref name="stop" scoped="" ref="0x40859af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4086edc0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4086edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40855010"/>
        <function-ref name="turnOn" scoped="" ref="0x408550f0"/>
        <function-ref name="setChannel" scoped="" ref="0x408551d0"/>
        <function-ref name="done" scoped="" ref="0x408552b0"/>
        <function-ref name="standby" scoped="" ref="0x40855390"/>
        <function-ref name="getChannel" scoped="" ref="0x40855470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40859ce0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40859ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40859eb8"/>
        <function-ref name="cancel" scoped="" ref="0x40856010"/>
        <function-ref name="sendDone" scoped="" ref="0x408560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408541d0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408541d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408543a8"/>
        <function-ref name="header" scoped="" ref="0x40854488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40856308" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40856308"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408564e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4086bc10" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4086bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4086bde8"/>
        <function-ref name="ready" scoped="" ref="0x4086bec8"/>
        <function-ref name="sendDone" scoped="" ref="0x40854010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x408566a0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x408566a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40856878"/>
        <function-ref name="setChannel" scoped="" ref="0x40856958"/>
        <function-ref name="getChannel" scoped="" ref="0x40856a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40854be0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40854be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40854db8"/>
        <function-ref name="stopDone" scoped="" ref="0x40854e98"/>
        <function-ref name="start" scoped="" ref="0x40869010"/>
        <function-ref name="stop" scoped="" ref="0x408690f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40869300" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40869300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408694d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408685d0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408685d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408687a8"/>
        <function-ref name="turnOn" scoped="" ref="0x40868888"/>
        <function-ref name="setChannel" scoped="" ref="0x40868968"/>
        <function-ref name="done" scoped="" ref="0x40868a48"/>
        <function-ref name="standby" scoped="" ref="0x40868b28"/>
        <function-ref name="getChannel" scoped="" ref="0x40868c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408696c0" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40869898"/>
        <function-ref name="cancel" scoped="" ref="0x40869978"/>
        <function-ref name="sendDone" scoped="" ref="0x40869a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40879010" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40879010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408791e8"/>
        <function-ref name="runTask" scoped="" ref="0x408792c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408679a8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408679a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40867b80"/>
        <function-ref name="header" scoped="" ref="0x40867c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408732a0" loc="170:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408732a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40873478"/>
        <function-ref name="runTask" scoped="" ref="0x40873558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40869c70" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40869c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40869e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40880718" loc="280:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40880718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408808f0"/>
        <function-ref name="runTask" scoped="" ref="0x408809d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40867450" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40867450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40867628"/>
        <function-ref name="ready" scoped="" ref="0x40867708"/>
        <function-ref name="sendDone" scoped="" ref="0x408677e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40868040" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40868040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40868218"/>
        <function-ref name="setChannel" scoped="" ref="0x408682f8"/>
        <function-ref name="getChannel" scoped="" ref="0x408683d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40868d90" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40868d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40867010"/>
        <function-ref name="suspend" scoped="" ref="0x408670f0"/>
        <function-ref name="resume" scoped="" ref="0x408671d0"/>
        <function-ref name="run" scoped="" ref="0x408672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40891528" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40891528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40891700"/>
        <function-ref name="stopDone" scoped="" ref="0x408917e0"/>
        <function-ref name="start" scoped="" ref="0x408918c0"/>
        <function-ref name="stop" scoped="" ref="0x408919a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408a3408" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408a3408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408a35e0"/>
        <function-ref name="request" scoped="" ref="0x408a36c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a1950" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a1950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a1b28"/>
        <function-ref name="cancel" scoped="" ref="0x408a1c08"/>
        <function-ref name="sendDone" scoped="" ref="0x408a1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408a1e48" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408a1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a0050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408a09c8" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408a09c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a0ba0"/>
        <function-ref name="ready" scoped="" ref="0x408a0c80"/>
        <function-ref name="sendDone" scoped="" ref="0x408a0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408a4328" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408a4328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408a4500"/>
        <function-ref name="turnOn" scoped="" ref="0x408a45e0"/>
        <function-ref name="setChannel" scoped="" ref="0x408a46c0"/>
        <function-ref name="done" scoped="" ref="0x408a47a0"/>
        <function-ref name="standby" scoped="" ref="0x408a4880"/>
        <function-ref name="getChannel" scoped="" ref="0x408a4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40891b00" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40891b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40891cd8"/>
        <function-ref name="cancel" scoped="" ref="0x40891db8"/>
        <function-ref name="sendDone" scoped="" ref="0x40891e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408a3800" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408a3800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408a39d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408a3ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a3b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408a3c78"/>
        <function-ref name="headerLength" scoped="" ref="0x408a3d58"/>
        <function-ref name="metadataLength" scoped="" ref="0x408a3e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408a1010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408a11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408a3010" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408a3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a31e8"/>
        <function-ref name="header" scoped="" ref="0x408a32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408a01b0" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408a01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408a0408"/>
        <function-ref name="turnOn" scoped="" ref="0x408a04e8"/>
        <function-ref name="setChannel" scoped="" ref="0x408a05c8"/>
        <function-ref name="done" scoped="" ref="0x408a06a8"/>
        <function-ref name="standby" scoped="" ref="0x408a0788"/>
        <function-ref name="getChannel" scoped="" ref="0x408a0868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408a1378" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408a1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408a1550"/>
        <function-ref name="stopDone" scoped="" ref="0x408a1630"/>
        <function-ref name="start" scoped="" ref="0x408a1710"/>
        <function-ref name="stop" scoped="" ref="0x408a17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4089f718" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4089f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089f8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4089f9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089fab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4089fb90"/>
        <function-ref name="headerLength" scoped="" ref="0x4089fc70"/>
        <function-ref name="metadataLength" scoped="" ref="0x4089fd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408a4010" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4089feb0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4089feb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4089e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408a0ec0" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408a0ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089f0c0"/>
        <function-ref name="header" scoped="" ref="0x4089f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408a4aa0" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408a4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a4c78"/>
        <function-ref name="ready" scoped="" ref="0x408a4d58"/>
        <function-ref name="sendDone" scoped="" ref="0x408a4e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x4089f300" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x4089f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4089f4d8"/>
        <function-ref name="request" scoped="" ref="0x4089f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408993f8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408993f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408995d0"/>
        <function-ref name="ready" scoped="" ref="0x408996b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40899790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408999d8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408999d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40899bb0"/>
        <function-ref name="header" scoped="" ref="0x40899c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40899f08" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40899f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408b60f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408b61d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408b62b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408b6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4089cea0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4089cea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408990c0"/>
        <function-ref name="header" scoped="" ref="0x408991a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4089c948" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089cb20"/>
        <function-ref name="ready" scoped="" ref="0x4089cc00"/>
        <function-ref name="sendDone" scoped="" ref="0x4089cce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408b3570" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408b3570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b3748"/>
        <function-ref name="ready" scoped="" ref="0x408b3828"/>
        <function-ref name="sendDone" scoped="" ref="0x408b3908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408b3b50" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408b3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b3d28"/>
        <function-ref name="header" scoped="" ref="0x408b3e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408b2010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408b21e8"/>
        <function-ref name="wait" scoped="" ref="0x408b22c8"/>
        <function-ref name="cancel" scoped="" ref="0x408b23a8"/>
        <function-ref name="isFree" scoped="" ref="0x408b2488"/>
        <function-ref name="getNow" scoped="" ref="0x408b2568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x408af368" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408af368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408af540"/>
        <function-ref name="rand32" scoped="" ref="0x408af620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408af898" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408af898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408afa70"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408afb50"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408afc30"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408afd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408b3060" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408b3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b3238"/>
        <function-ref name="header" scoped="" ref="0x408b3318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408b6af8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408b6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b6cd0"/>
        <function-ref name="ready" scoped="" ref="0x408b6db0"/>
        <function-ref name="sendDone" scoped="" ref="0x408b6e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x408ad8f0" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x408ad8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408adac8"/>
        <function-ref name="runTask" scoped="" ref="0x408adba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x408b72a8" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408b72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408b7480"/>
        <function-ref name="rand32" scoped="" ref="0x408b7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x408d3958" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x408d3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b4730" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b4730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408b4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x408d1cf8" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x408d1cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x408d1ed0"/>
        <function-ref name="rand32" scoped="" ref="0x408d0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x408d1438" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x408d1438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d1a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408b7f00" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408b7f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408c8e58" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408c8e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c7050"/>
        <function-ref name="ready" scoped="" ref="0x408c7130"/>
        <function-ref name="sendDone" scoped="" ref="0x408c7210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408c7458" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408c7458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c7630"/>
        <function-ref name="header" scoped="" ref="0x408c7710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408c7960" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408c7960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x408c7b38"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408c7c18"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408c7cf8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408c7dd8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x408c7eb8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x408c6010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408c60f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408c61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408c8390" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408c8390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c8568"/>
        <function-ref name="header" scoped="" ref="0x408c8648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4089adf0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4089adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c8010"/>
        <function-ref name="ready" scoped="" ref="0x408c80f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408c8868" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408c8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408c8a40"/>
        <function-ref name="noAck" scoped="" ref="0x408c8b20"/>
        <function-ref name="wasAcked" scoped="" ref="0x408c8c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408e1940" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408e1940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408e1b18"/>
        <function-ref name="ready" scoped="" ref="0x408e1bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x408e1cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408e1f20" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408e1f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e0110"/>
        <function-ref name="header" scoped="" ref="0x408e01f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x408e0398" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408e0398"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408e0570"/>
        <function-ref name="wait" scoped="" ref="0x408e0650"/>
        <function-ref name="cancel" scoped="" ref="0x408e0730"/>
        <function-ref name="isFree" scoped="" ref="0x408e0810"/>
        <function-ref name="getNow" scoped="" ref="0x408e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x408da190" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x408da190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408da368"/>
        <function-ref name="get" scoped="" ref="0x408da448"/>
        <function-ref name="setValue" scoped="" ref="0x408da528"/>
        <function-ref name="set" scoped="" ref="0x408da608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408c6e40" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408c6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e1050"/>
        <function-ref name="header" scoped="" ref="0x408e1130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x408e0ae0" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408e0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x408e0cb8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408e0d98"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408e0e78"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408df010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x408df0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x408df1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408df2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408df390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408c68e8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408c68e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c6ac0"/>
        <function-ref name="ready" scoped="" ref="0x408c6ba0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c6c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408e1350" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408e1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408e1528"/>
        <function-ref name="noAck" scoped="" ref="0x408e1608"/>
        <function-ref name="wasAcked" scoped="" ref="0x408e16e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x408e5e70" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="SoftwareAckLayerC.MetadataFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x408e5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408e2070"/>
        <function-ref name="get" scoped="" ref="0x408e2150"/>
        <function-ref name="setValue" scoped="" ref="0x408e2230"/>
        <function-ref name="set" scoped="" ref="0x408e2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40901638" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40901638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40901810"/>
        <function-ref name="payloadLength" scoped="" ref="0x409018f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409019d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40901ab0"/>
        <function-ref name="headerLength" scoped="" ref="0x40901b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x40901c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40901ef0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40901ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409000e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x409001c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409002a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40900380"/>
        <function-ref name="headerLength" scoped="" ref="0x40900460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40900540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40901010" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40901010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409011e8"/>
        <function-ref name="get" scoped="" ref="0x409012c8"/>
        <function-ref name="setValue" scoped="" ref="0x409013a8"/>
        <function-ref name="set" scoped="" ref="0x40901488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e4b48" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e4d20"/>
        <function-ref name="stopDone" scoped="" ref="0x408e4e00"/>
        <function-ref name="start" scoped="" ref="0x408e4ee0"/>
        <function-ref name="stop" scoped="" ref="0x4090d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4090ca20" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4090ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4090cbf8"/>
        <function-ref name="request" scoped="" ref="0x4090ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090bf10" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090bf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090a108"/>
        <function-ref name="cancel" scoped="" ref="0x4090a1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4090a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4090a428" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4090a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090a600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x40908010" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x40908010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409081e8"/>
        <function-ref name="ready" scoped="" ref="0x409082c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409083a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4090d980" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4090d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4090db58"/>
        <function-ref name="turnOn" scoped="" ref="0x4090dc38"/>
        <function-ref name="setChannel" scoped="" ref="0x4090dd18"/>
        <function-ref name="done" scoped="" ref="0x4090ddf8"/>
        <function-ref name="standby" scoped="" ref="0x4090ded8"/>
        <function-ref name="getChannel" scoped="" ref="0x4090c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4090d170" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4090d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090d348"/>
        <function-ref name="cancel" scoped="" ref="0x4090d428"/>
        <function-ref name="sendDone" scoped="" ref="0x4090d508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4090ce18" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4090ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090b010"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090b0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090b1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090b2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x4090b390"/>
        <function-ref name="metadataLength" scoped="" ref="0x4090b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4090b5d0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4090b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4090b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4090c628" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4090c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090c800"/>
        <function-ref name="header" scoped="" ref="0x4090c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4090a760" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4090a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4090a9b8"/>
        <function-ref name="turnOn" scoped="" ref="0x4090aa98"/>
        <function-ref name="setChannel" scoped="" ref="0x4090ab78"/>
        <function-ref name="done" scoped="" ref="0x4090ac58"/>
        <function-ref name="standby" scoped="" ref="0x4090ad38"/>
        <function-ref name="getChannel" scoped="" ref="0x4090ae18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4090b938" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4090b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090bb10"/>
        <function-ref name="stopDone" scoped="" ref="0x4090bbf0"/>
        <function-ref name="start" scoped="" ref="0x4090bcd0"/>
        <function-ref name="stop" scoped="" ref="0x4090bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40908d38" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40908d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40908f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40907010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409070f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409071d0"/>
        <function-ref name="headerLength" scoped="" ref="0x409072b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40907390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090d668" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090d840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409074f0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409074f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409076c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x40908508" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x40908508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409086e0"/>
        <function-ref name="header" scoped="" ref="0x409087c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4090c150" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4090c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090c328"/>
        <function-ref name="ready" scoped="" ref="0x4090c408"/>
        <function-ref name="sendDone" scoped="" ref="0x4090c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40908920" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40908920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40908af8"/>
        <function-ref name="request" scoped="" ref="0x40908bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4091ecd0" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4091ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091eea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4091d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091d0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4091d1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x4091d2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4091d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4091c090" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4091c090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091c268"/>
        <function-ref name="payloadLength" scoped="" ref="0x4091c348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091c428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4091c508"/>
        <function-ref name="headerLength" scoped="" ref="0x4091c5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4091c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x409205e0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x409205e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4091e108"/>
        <function-ref name="clear" scoped="" ref="0x4091e4b8"/>
        <function-ref name="isValid" scoped="" ref="0x40920d30"/>
        <function-ref name="set" scoped="" ref="0x4091e868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x4091d700" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4091d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4091dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40905c08" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerC.nc">
      <component-ref qname="TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40905c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40902730"/>
        <function-ref name="clear" scoped="" ref="0x40902ae0"/>
        <function-ref name="isValid" scoped="" ref="0x40902380"/>
        <function-ref name="set" scoped="" ref="0x40902e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40915b80" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40915b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40915d58"/>
        <function-ref name="get" scoped="" ref="0x40915e38"/>
        <function-ref name="setValue" scoped="" ref="0x40915f18"/>
        <function-ref name="set" scoped="" ref="0x40914010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409152a8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409152a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40915480"/>
        <function-ref name="payloadLength" scoped="" ref="0x40915560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40915640"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40915720"/>
        <function-ref name="headerLength" scoped="" ref="0x40915800"/>
        <function-ref name="metadataLength" scoped="" ref="0x409158e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409126e0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409126e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409128b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40912998"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40912a78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40912b58"/>
        <function-ref name="headerLength" scoped="" ref="0x40912c38"/>
        <function-ref name="metadataLength" scoped="" ref="0x40912d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40918af8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40918af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409166b8"/>
        <function-ref name="clear" scoped="" ref="0x40916a68"/>
        <function-ref name="isValid" scoped="" ref="0x40916308"/>
        <function-ref name="set" scoped="" ref="0x40916e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40914330" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40914330"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40914978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40914d68" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40914d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409123e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40919100" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TimeStampingLayerP.nc">
      <component-ref qname="TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40919100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40919c00"/>
        <function-ref name="clear" scoped="" ref="0x40918010"/>
        <function-ref name="isValid" scoped="" ref="0x40919850"/>
        <function-ref name="set" scoped="" ref="0x409183c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4091b7f8" loc="20:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4091b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4091be40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x4093d0b0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="TimeStampingLayerC.TimeStampFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x4093d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4093d288"/>
        <function-ref name="get" scoped="" ref="0x4093d368"/>
        <function-ref name="setValue" scoped="" ref="0x4093d448"/>
        <function-ref name="set" scoped="" ref="0x4093d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40938b58" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40938b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40938d30"/>
        <function-ref name="request" scoped="" ref="0x40938e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40935d18" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40935d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409348f0"/>
        <function-ref name="get" scoped="" ref="0x40934630"/>
        <function-ref name="isSet" scoped="" ref="0x40934370"/>
        <function-ref name="set" scoped="" ref="0x40934bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4094eb50" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4094eb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4094d6b8"/>
        <function-ref name="clear" scoped="" ref="0x4094da68"/>
        <function-ref name="isValid" scoped="" ref="0x4094d308"/>
        <function-ref name="set" scoped="" ref="0x4094de18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4093b9c0" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4093b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4093bb98"/>
        <function-ref name="turnOn" scoped="" ref="0x4093bc78"/>
        <function-ref name="setChannel" scoped="" ref="0x4093bd58"/>
        <function-ref name="done" scoped="" ref="0x4093be38"/>
        <function-ref name="standby" scoped="" ref="0x4093bf18"/>
        <function-ref name="getChannel" scoped="" ref="0x40938010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40936010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40936010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409361e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x409362c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409363a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40936488"/>
        <function-ref name="headerLength" scoped="" ref="0x40936568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40936648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409369b0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409369b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40935590"/>
        <function-ref name="get" scoped="" ref="0x409352d0"/>
        <function-ref name="isSet" scoped="" ref="0x40935010"/>
        <function-ref name="set" scoped="" ref="0x40935850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40938708" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40938708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409388e0"/>
        <function-ref name="header" scoped="" ref="0x409389c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40932100" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40932100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40932cc8"/>
        <function-ref name="get" scoped="" ref="0x40932a08"/>
        <function-ref name="isSet" scoped="" ref="0x40932748"/>
        <function-ref name="set" scoped="" ref="0x40931010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4094e268" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4094e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094e440"/>
        <function-ref name="headerLength" scoped="" ref="0x4094e520"/>
        <function-ref name="metadataLength" scoped="" ref="0x4094e600"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4094e6e0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4094e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40950890" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40950890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40950ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409381b0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409381b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40938388"/>
        <function-ref name="ready" scoped="" ref="0x40938468"/>
        <function-ref name="sendDone" scoped="" ref="0x40938548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40931520" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40931520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409500f8"/>
        <function-ref name="get" scoped="" ref="0x40931e28"/>
        <function-ref name="isSet" scoped="" ref="0x40931b68"/>
        <function-ref name="set" scoped="" ref="0x409503b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409469b8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409469b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40946b90"/>
        <function-ref name="request" scoped="" ref="0x40946c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40956208" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40956208"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40956958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40944b40" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40944b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40942780"/>
        <function-ref name="get" scoped="" ref="0x409424c0"/>
        <function-ref name="isSet" scoped="" ref="0x40942200"/>
        <function-ref name="set" scoped="" ref="0x40942a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x409514d0" loc="67:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x409514d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409516a8"/>
        <function-ref name="get" scoped="" ref="0x40951788"/>
        <function-ref name="setValue" scoped="" ref="0x40951868"/>
        <function-ref name="set" scoped="" ref="0x40951948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40947498" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40947498"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402cfce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402cfce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40947670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409703a8" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409703a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40970ea8"/>
        <function-ref name="clear" scoped="" ref="0x4096f280"/>
        <function-ref name="isValid" scoped="" ref="0x40970af8"/>
        <function-ref name="set" scoped="" ref="0x4096f630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x4095c860" loc="57:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x4095c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095ca38"/>
        <function-ref name="isInput" scoped="" ref="0x4095cb18"/>
        <function-ref name="toggle" scoped="" ref="0x4095cbf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4095ccd8"/>
        <function-ref name="get" scoped="" ref="0x4095cdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095ce98"/>
        <function-ref name="set" scoped="" ref="0x4095b010"/>
        <function-ref name="clr" scoped="" ref="0x4095b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4096e1b8" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4096e1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4096e390"/>
        <function-ref name="wait" scoped="" ref="0x4096e470"/>
        <function-ref name="cancel" scoped="" ref="0x4096e550"/>
        <function-ref name="isFree" scoped="" ref="0x4096e630"/>
        <function-ref name="getNow" scoped="" ref="0x4096e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40947818" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40947818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409479f0"/>
        <function-ref name="turnOn" scoped="" ref="0x40947ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x40947bb0"/>
        <function-ref name="done" scoped="" ref="0x40947c90"/>
        <function-ref name="standby" scoped="" ref="0x40947d70"/>
        <function-ref name="getChannel" scoped="" ref="0x40947e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40956cc0" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40956cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40954318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x409457d8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409457d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409443b8"/>
        <function-ref name="get" scoped="" ref="0x409440f8"/>
        <function-ref name="isSet" scoped="" ref="0x40945e20"/>
        <function-ref name="set" scoped="" ref="0x40944678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40946e20" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40946e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40945010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409450f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409451d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409452b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40945390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40945470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x40959e38" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40959e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095c050"/>
        <function-ref name="isInput" scoped="" ref="0x4095c130"/>
        <function-ref name="toggle" scoped="" ref="0x4095c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4095c2f0"/>
        <function-ref name="get" scoped="" ref="0x4095c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095c4b0"/>
        <function-ref name="set" scoped="" ref="0x4095c590"/>
        <function-ref name="clr" scoped="" ref="0x4095c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40954638" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40954638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40954810"/>
        <function-ref name="headerLength" scoped="" ref="0x409548f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409549d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40954ab0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40954b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40946568" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40946568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40946740"/>
        <function-ref name="header" scoped="" ref="0x40946820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40941010" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40941010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40941bd8"/>
        <function-ref name="get" scoped="" ref="0x40941918"/>
        <function-ref name="isSet" scoped="" ref="0x40941658"/>
        <function-ref name="set" scoped="" ref="0x40941e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40948e10" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40948e10"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402cfce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402cfce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40947010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4095d148" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4095d148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095d3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095d480"/>
        <function-ref name="request" scoped="" ref="0x4095d560"/>
        <function-ref name="granted" scoped="" ref="0x4095d640"/>
        <function-ref name="isOwner" scoped="" ref="0x4095d720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x4095e6c8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x4095e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095e8a0"/>
        <function-ref name="isInput" scoped="" ref="0x4095e980"/>
        <function-ref name="toggle" scoped="" ref="0x4095ea60"/>
        <function-ref name="isOutput" scoped="" ref="0x4095eb40"/>
        <function-ref name="get" scoped="" ref="0x4095ec20"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095ed00"/>
        <function-ref name="set" scoped="" ref="0x4095ede0"/>
        <function-ref name="clr" scoped="" ref="0x4095eec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4095f3d8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4095f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095e010"/>
        <function-ref name="get" scoped="" ref="0x4095fce0"/>
        <function-ref name="isSet" scoped="" ref="0x4095fa20"/>
        <function-ref name="set" scoped="" ref="0x4095e2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40946010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40946010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409461e8"/>
        <function-ref name="ready" scoped="" ref="0x409462c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409463a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409559c0" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409559c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40955b98"/>
        <function-ref name="disable" scoped="" ref="0x40955c78"/>
        <function-ref name="captured" scoped="" ref="0x40955d58"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40955e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x409597c0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40959998"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40959a78"/>
        <function-ref name="splitRead" scoped="" ref="0x40959b58"/>
        <function-ref name="write" scoped="" ref="0x40959c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40951b90" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40951b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40951d68"/>
        <function-ref name="get" scoped="" ref="0x40951e48"/>
        <function-ref name="setValue" scoped="" ref="0x40951f28"/>
        <function-ref name="set" scoped="" ref="0x40970018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40954e08" loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40954e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40951010"/>
        <function-ref name="get" scoped="" ref="0x409510f0"/>
        <function-ref name="setValue" scoped="" ref="0x409511d0"/>
        <function-ref name="set" scoped="" ref="0x409512b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4096fa70" loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4096fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4096fd48"/>
        <function-ref name="suspend" scoped="" ref="0x4096fe28"/>
        <function-ref name="resume" scoped="" ref="0x4096ff08"/>
        <function-ref name="run" scoped="" ref="0x4096e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x409de580" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409de580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409de758"/>
        <function-ref name="isInput" scoped="" ref="0x409de838"/>
        <function-ref name="toggle" scoped="" ref="0x409de918"/>
        <function-ref name="isOutput" scoped="" ref="0x409de9f8"/>
        <function-ref name="get" scoped="" ref="0x409dead8"/>
        <function-ref name="makeOutput" scoped="" ref="0x409debb8"/>
        <function-ref name="set" scoped="" ref="0x409dec98"/>
        <function-ref name="clr" scoped="" ref="0x409ded78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x409dfad8" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409dfad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409dfcb0"/>
        <function-ref name="isInput" scoped="" ref="0x409dfd90"/>
        <function-ref name="toggle" scoped="" ref="0x409dfe70"/>
        <function-ref name="isOutput" scoped="" ref="0x409de010"/>
        <function-ref name="get" scoped="" ref="0x409de0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409de1d0"/>
        <function-ref name="set" scoped="" ref="0x409de2b0"/>
        <function-ref name="clr" scoped="" ref="0x409de390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409dd810" loc="38:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409dd810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409dcd58"/>
        <function-ref name="fired" scoped="" ref="0x409dc528"/>
        <function-ref name="startAt" scoped="" ref="0x409dca18"/>
        <function-ref name="isRunning" scoped="" ref="0x409dc7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x409db010"/>
        <function-ref name="start" scoped="" ref="0x409dc010"/>
        <function-ref name="stop" scoped="" ref="0x409dc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x409e2ca8" loc="31:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409e2ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e2e80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409df010"/>
        <function-ref name="request" scoped="" ref="0x409df0f0"/>
        <function-ref name="granted" scoped="" ref="0x409df1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x409df2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x409e2288" loc="30:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409e2288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409e2460"/>
        <function-ref name="isInput" scoped="" ref="0x409e2540"/>
        <function-ref name="toggle" scoped="" ref="0x409e2620"/>
        <function-ref name="isOutput" scoped="" ref="0x409e2700"/>
        <function-ref name="get" scoped="" ref="0x409e27e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409e28c0"/>
        <function-ref name="set" scoped="" ref="0x409e29a0"/>
        <function-ref name="clr" scoped="" ref="0x409e2a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x409dd010" loc="37:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409dd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409dd1e8"/>
        <function-ref name="disable" scoped="" ref="0x409dd2c8"/>
        <function-ref name="captured" scoped="" ref="0x409dd3a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409dd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x409df460" loc="32:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409df460"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409df638"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409df718"/>
        <function-ref name="splitRead" scoped="" ref="0x409df7f8"/>
        <function-ref name="write" scoped="" ref="0x409df8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x409db400" loc="39:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x409db400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TRadio" ref="0x403a2118"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409dba48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x409d5d00" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x409d5d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409d5ed8"/>
        <function-ref name="isInput" scoped="" ref="0x409f2010"/>
        <function-ref name="toggle" scoped="" ref="0x409f20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409f21d0"/>
        <function-ref name="get" scoped="" ref="0x409f22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f2390"/>
        <function-ref name="set" scoped="" ref="0x409f2470"/>
        <function-ref name="clr" scoped="" ref="0x409f2550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x409f4f08" loc="34:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x409f4f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x409d59f0"/>
        <function-ref name="test" scoped="" ref="0x409d5500"/>
        <function-ref name="get" scoped="" ref="0x409d6578"/>
        <function-ref name="captured" scoped="" ref="0x409d6a90"/>
        <function-ref name="reset" scoped="" ref="0x409d6d30"/>
        <function-ref name="isOn" scoped="" ref="0x409d5778"/>
        <function-ref name="set" scoped="" ref="0x409d67f0"/>
        <function-ref name="start" scoped="" ref="0x409d5010"/>
        <function-ref name="stop" scoped="" ref="0x409d5288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x409f2758" loc="36:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x409f2758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409f2930"/>
        <function-ref name="isInput" scoped="" ref="0x409f2a10"/>
        <function-ref name="toggle" scoped="" ref="0x409f2af0"/>
        <function-ref name="isOutput" scoped="" ref="0x409f2bd0"/>
        <function-ref name="get" scoped="" ref="0x409f2cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409f2d90"/>
        <function-ref name="set" scoped="" ref="0x409f2e70"/>
        <function-ref name="clr" scoped="" ref="0x409f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409d7868" loc="29:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409d7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x409d71e0" loc="28:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409d71e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409d73b8"/>
        <function-ref name="disable" scoped="" ref="0x409d7498"/>
        <function-ref name="captured" scoped="" ref="0x409d7578"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409d7658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a06dc8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a06dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409e8010"/>
        <function-ref name="sendDone" scoped="" ref="0x409e80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409e63a0" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409e63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409e6578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d8710" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d88e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x409e6748" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409e6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x409e6920"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x409e6a00"/>
        <function-ref name="splitRead" scoped="" ref="0x409e6ae0"/>
        <function-ref name="write" scoped="" ref="0x409e6bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409e8588" loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409e8588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e8760"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e8840"/>
        <function-ref name="request" scoped="" ref="0x409e8920"/>
        <function-ref name="granted" scoped="" ref="0x409e8a00"/>
        <function-ref name="isOwner" scoped="" ref="0x409e8ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a20548" loc="241:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a20548"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a20720"/>
        <function-ref name="runTask" scoped="" ref="0x40a20800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a01450" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a01450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a01628"/>
        <function-ref name="sendDone" scoped="" ref="0x40a01708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x409fe8c0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x409fe8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409fea98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409feb78"/>
        <function-ref name="request" scoped="" ref="0x409fec58"/>
        <function-ref name="granted" scoped="" ref="0x409fed38"/>
        <function-ref name="isOwner" scoped="" ref="0x409fee18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x409e7a30" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409e7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409e7c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409e76d0" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409e76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409e78a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a12bc8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a12bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a12da0"/>
        <function-ref name="sleep" scoped="" ref="0x409fe2b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x409ff010"/>
        <function-ref name="dataReady" scoped="" ref="0x409fe390"/>
        <function-ref name="initMaster" scoped="" ref="0x409ff1d0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x409ff2b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x409ff390"/>
        <function-ref name="read" scoped="" ref="0x409ff470"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x409ff550"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x409ff630"/>
        <function-ref name="setClock" scoped="" ref="0x409ff710"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x409ff7f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x409ff8d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x409ffa30"/>
        <function-ref name="setDataOrder" scoped="" ref="0x409ffb10"/>
        <function-ref name="write" scoped="" ref="0x409ffbf0"/>
        <function-ref name="enableSpi" scoped="" ref="0x409ffcd0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x409ffdb0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x409ffe90"/>
        <function-ref name="getClock" scoped="" ref="0x409fe010"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x409fe0f0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a12e80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x409ff0f0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x409fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x409e7db8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x409e7db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x40a01010"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x40a010f0"/>
        <function-ref name="splitRead" scoped="" ref="0x40a011d0"/>
        <function-ref name="write" scoped="" ref="0x40a012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a01b80" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a01b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a01d58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a01e38"/>
        <function-ref name="request" scoped="" ref="0x40a01f18"/>
        <function-ref name="granted" scoped="" ref="0x40a00010"/>
        <function-ref name="isOwner" scoped="" ref="0x40a000f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a11010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a11010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a111e8"/>
        <function-ref name="userId" scoped="" ref="0x40a112c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a11490" loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a11490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a11668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40a2b2e8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40a2b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a2b4c0"/>
        <function-ref name="sleep" scoped="" ref="0x40a4e950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a2b680"/>
        <function-ref name="dataReady" scoped="" ref="0x40a4ea30"/>
        <function-ref name="initMaster" scoped="" ref="0x40a2b840"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a2b920"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a2ba00"/>
        <function-ref name="read" scoped="" ref="0x40a2bae0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a2bbc0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a2bca0"/>
        <function-ref name="setClock" scoped="" ref="0x40a2bd80"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a2be60"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a4e010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a4e170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a4e250"/>
        <function-ref name="write" scoped="" ref="0x40a4e330"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a4e410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a4e4f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a4e5d0"/>
        <function-ref name="getClock" scoped="" ref="0x40a4e6b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a4e790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a2b5a0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a2b760"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a4e870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40a462e0" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40a462e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a464b8"/>
        <function-ref name="isInput" scoped="" ref="0x40a46598"/>
        <function-ref name="toggle" scoped="" ref="0x40a46678"/>
        <function-ref name="isOutput" scoped="" ref="0x40a46758"/>
        <function-ref name="get" scoped="" ref="0x40a46838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a46918"/>
        <function-ref name="set" scoped="" ref="0x40a469f8"/>
        <function-ref name="clr" scoped="" ref="0x40a46ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40a48ea8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40a48ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a470c0"/>
        <function-ref name="isInput" scoped="" ref="0x40a471a0"/>
        <function-ref name="toggle" scoped="" ref="0x40a47280"/>
        <function-ref name="isOutput" scoped="" ref="0x40a47360"/>
        <function-ref name="get" scoped="" ref="0x40a47440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a47520"/>
        <function-ref name="set" scoped="" ref="0x40a47600"/>
        <function-ref name="clr" scoped="" ref="0x40a476e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40a484d0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40a484d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a486a8"/>
        <function-ref name="isInput" scoped="" ref="0x40a48788"/>
        <function-ref name="toggle" scoped="" ref="0x40a48868"/>
        <function-ref name="isOutput" scoped="" ref="0x40a48948"/>
        <function-ref name="get" scoped="" ref="0x40a48a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a48b08"/>
        <function-ref name="set" scoped="" ref="0x40a48be8"/>
        <function-ref name="clr" scoped="" ref="0x40a48cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40a48010" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40a48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a481e8"/>
        <function-ref name="stop" scoped="" ref="0x40a482c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40a46ce0" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40a46ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a46eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40a4d6c0" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40a4d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a4d898"/>
        <function-ref name="sleep" scoped="" ref="0x40a4acd0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a4da58"/>
        <function-ref name="dataReady" scoped="" ref="0x40a4adb0"/>
        <function-ref name="initMaster" scoped="" ref="0x40a4dc18"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a4dcf8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a4ddd8"/>
        <function-ref name="read" scoped="" ref="0x40a4deb8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a4a010"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a4a0f0"/>
        <function-ref name="setClock" scoped="" ref="0x40a4a1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a4a2b0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a4a390"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a4a4f0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a4a5d0"/>
        <function-ref name="write" scoped="" ref="0x40a4a6b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a4a790"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a4a870"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a4a950"/>
        <function-ref name="getClock" scoped="" ref="0x40a4aa30"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a4ab10"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a4d978"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a4db38"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a4abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40a478d0" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40a478d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a47aa8"/>
        <function-ref name="isInput" scoped="" ref="0x40a47b88"/>
        <function-ref name="toggle" scoped="" ref="0x40a47c68"/>
        <function-ref name="isOutput" scoped="" ref="0x40a47d48"/>
        <function-ref name="get" scoped="" ref="0x40a47e28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a47f08"/>
        <function-ref name="set" scoped="" ref="0x40a46010"/>
        <function-ref name="clr" scoped="" ref="0x40a460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40a66618" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40a66618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40a66800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40a668e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40a66ed0" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40a66ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40a650e0"/>
        <function-ref name="configure" scoped="" ref="0x40a651c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a68ec0" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a68ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a660c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a661a0"/>
        <function-ref name="request" scoped="" ref="0x40a66280"/>
        <function-ref name="granted" scoped="" ref="0x40a66360"/>
        <function-ref name="isOwner" scoped="" ref="0x40a66440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40a66a20" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a66a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a66bf8"/>
        <function-ref name="userId" scoped="" ref="0x40a66cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f6c548" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f6c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f6c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f6c880" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f6c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f6ca58"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f6cb38"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f6cc18"/>
        <function-ref name="dequeue" scoped="" ref="0x40f6ccf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f6a068" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f6a068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f6a250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f6a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f6a930" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f6a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f6ab18"/>
        <function-ref name="configure" scoped="" ref="0x40f6abf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f6ad58" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f6ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f69010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f690f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f691d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f692b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f6b908" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f6b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f6baf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f6bbd0"/>
        <function-ref name="request" scoped="" ref="0x40f6bcb0"/>
        <function-ref name="granted" scoped="" ref="0x40f6bd90"/>
        <function-ref name="isOwner" scoped="" ref="0x40f6be70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f6a470" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f6a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f6a648"/>
        <function-ref name="userId" scoped="" ref="0x40f6a728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f69430" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f69430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f69608"/>
        <function-ref name="runTask" scoped="" ref="0x40f696e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40a7bdf0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40a7bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40a80010"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40a800f0"/>
        <function-ref name="getControlA" scoped="" ref="0x40a801d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40a802b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40a80390"/>
        <function-ref name="setControlB" scoped="" ref="0x40a80470"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40a80550"/>
        <function-ref name="getControlB" scoped="" ref="0x40a80630"/>
        <function-ref name="setControlC" scoped="" ref="0x40a80710"/>
        <function-ref name="setControlA" scoped="" ref="0x40a807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40a80b28" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a80b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a7a640"/>
        <function-ref name="test" scoped="" ref="0x40a7a150"/>
        <function-ref name="get" scoped="" ref="0x40a7f200"/>
        <function-ref name="captured" scoped="" ref="0x40a7f718"/>
        <function-ref name="reset" scoped="" ref="0x40a7f9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40a7a3c8"/>
        <function-ref name="set" scoped="" ref="0x40a7f478"/>
        <function-ref name="start" scoped="" ref="0x40a7fc30"/>
        <function-ref name="stop" scoped="" ref="0x40a7fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40a7ad50" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40a7ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40a77300"/>
        <function-ref name="fired" scoped="" ref="0x40a788f8"/>
        <function-ref name="get" scoped="" ref="0x40a783e0"/>
        <function-ref name="reset" scoped="" ref="0x40a78b70"/>
        <function-ref name="isOn" scoped="" ref="0x40a77578"/>
        <function-ref name="set" scoped="" ref="0x40a78658"/>
        <function-ref name="start" scoped="" ref="0x40a78de8"/>
        <function-ref name="stop" scoped="" ref="0x40a77088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a624a8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a624a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a82f18"/>
        <function-ref name="test" scoped="" ref="0x40a82a28"/>
        <function-ref name="get" scoped="" ref="0x40a62af0"/>
        <function-ref name="setScale" scoped="" ref="0x40a811a8"/>
        <function-ref name="getScale" scoped="" ref="0x40a81448"/>
        <function-ref name="reset" scoped="" ref="0x40a822c0"/>
        <function-ref name="overflow" scoped="" ref="0x40a82048"/>
        <function-ref name="isOn" scoped="" ref="0x40a82ca0"/>
        <function-ref name="set" scoped="" ref="0x40a62d68"/>
        <function-ref name="start" scoped="" ref="0x40a82538"/>
        <function-ref name="stop" scoped="" ref="0x40a827b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40a95530" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40a95530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x40a95708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40a957e8"/>
        <function-ref name="getControlA" scoped="" ref="0x40a958c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40a959a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40a95a88"/>
        <function-ref name="setControlB" scoped="" ref="0x40a95b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40a95c48"/>
        <function-ref name="getControlB" scoped="" ref="0x40a95d28"/>
        <function-ref name="setControlC" scoped="" ref="0x40a95e08"/>
        <function-ref name="setControlA" scoped="" ref="0x40a95ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40a91128" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40a91128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40a90690"/>
        <function-ref name="fired" scoped="" ref="0x40a91c88"/>
        <function-ref name="get" scoped="" ref="0x40a91770"/>
        <function-ref name="reset" scoped="" ref="0x40a91f00"/>
        <function-ref name="isOn" scoped="" ref="0x40a90908"/>
        <function-ref name="set" scoped="" ref="0x40a919e8"/>
        <function-ref name="start" scoped="" ref="0x40a901a0"/>
        <function-ref name="stop" scoped="" ref="0x40a90418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40a94258" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a94258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a93cc0"/>
        <function-ref name="test" scoped="" ref="0x40a937d0"/>
        <function-ref name="get" scoped="" ref="0x40a948a0"/>
        <function-ref name="captured" scoped="" ref="0x40a94db8"/>
        <function-ref name="reset" scoped="" ref="0x40a93068"/>
        <function-ref name="isOn" scoped="" ref="0x40a93a48"/>
        <function-ref name="set" scoped="" ref="0x40a94b18"/>
        <function-ref name="start" scoped="" ref="0x40a932e0"/>
        <function-ref name="stop" scoped="" ref="0x40a93558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40a90d20" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40a90d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40a8d2c0"/>
        <function-ref name="fired" scoped="" ref="0x40a8f8a8"/>
        <function-ref name="get" scoped="" ref="0x40a8f390"/>
        <function-ref name="reset" scoped="" ref="0x40a8fb20"/>
        <function-ref name="isOn" scoped="" ref="0x40a8d538"/>
        <function-ref name="set" scoped="" ref="0x40a8f608"/>
        <function-ref name="start" scoped="" ref="0x40a8fd98"/>
        <function-ref name="stop" scoped="" ref="0x40a8d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40a8d950" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40a8d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40a8cf08"/>
        <function-ref name="fired" scoped="" ref="0x40a8c528"/>
        <function-ref name="get" scoped="" ref="0x40a8c010"/>
        <function-ref name="reset" scoped="" ref="0x40a8c7a0"/>
        <function-ref name="isOn" scoped="" ref="0x40a8b1a0"/>
        <function-ref name="set" scoped="" ref="0x40a8c288"/>
        <function-ref name="start" scoped="" ref="0x40a8ca18"/>
        <function-ref name="stop" scoped="" ref="0x40a8cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a74230" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a74230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40a96ca0"/>
        <function-ref name="test" scoped="" ref="0x40a967b0"/>
        <function-ref name="get" scoped="" ref="0x40a74878"/>
        <function-ref name="setScale" scoped="" ref="0x40a96f18"/>
        <function-ref name="getScale" scoped="" ref="0x40a951d0"/>
        <function-ref name="reset" scoped="" ref="0x40a96048"/>
        <function-ref name="overflow" scoped="" ref="0x40a74d90"/>
        <function-ref name="isOn" scoped="" ref="0x40a96a28"/>
        <function-ref name="set" scoped="" ref="0x40a74af0"/>
        <function-ref name="start" scoped="" ref="0x40a962c0"/>
        <function-ref name="stop" scoped="" ref="0x40a96538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ae0c88" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ae0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40afe150"/>
        <function-ref name="fired" scoped="" ref="0x40aff908"/>
        <function-ref name="startAt" scoped="" ref="0x40affdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40affb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40afe3c8"/>
        <function-ref name="start" scoped="" ref="0x40aff3f0"/>
        <function-ref name="stop" scoped="" ref="0x40aff690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ada480" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ada480"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402cfae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402cfae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ada658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40ada868" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ada868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ad12e0"/>
        <function-ref name="test" scoped="" ref="0x40ad9dd0"/>
        <function-ref name="get" scoped="" ref="0x40adaeb0"/>
        <function-ref name="setScale" scoped="" ref="0x40ad1558"/>
        <function-ref name="getScale" scoped="" ref="0x40ad17f8"/>
        <function-ref name="reset" scoped="" ref="0x40ad9668"/>
        <function-ref name="overflow" scoped="" ref="0x40ad93f0"/>
        <function-ref name="isOn" scoped="" ref="0x40ad1068"/>
        <function-ref name="set" scoped="" ref="0x40ad9150"/>
        <function-ref name="start" scoped="" ref="0x40ad98e0"/>
        <function-ref name="stop" scoped="" ref="0x40ad9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40f94c40" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f94c40"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402cf8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402cf8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f920f8"/>
        <function-ref name="fired" scoped="" ref="0x40f938b8"/>
        <function-ref name="startAt" scoped="" ref="0x40f93da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f93b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f92370"/>
        <function-ref name="start" scoped="" ref="0x40f933a0"/>
        <function-ref name="stop" scoped="" ref="0x40f93640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40f8f880" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40f8f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40f8edf0"/>
        <function-ref name="fired" scoped="" ref="0x40f8e410"/>
        <function-ref name="get" scoped="" ref="0x40f8fec8"/>
        <function-ref name="reset" scoped="" ref="0x40f8e688"/>
        <function-ref name="isOn" scoped="" ref="0x40f8c088"/>
        <function-ref name="set" scoped="" ref="0x40f8e170"/>
        <function-ref name="start" scoped="" ref="0x40f8e900"/>
        <function-ref name="stop" scoped="" ref="0x40f8eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40f92630" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40f92630"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40f8f0a8"/>
        <function-ref name="test" scoped="" ref="0x40f90ba0"/>
        <function-ref name="get" scoped="" ref="0x40f92c78"/>
        <function-ref name="setScale" scoped="" ref="0x40f8f320"/>
        <function-ref name="getScale" scoped="" ref="0x40f8f5c0"/>
        <function-ref name="reset" scoped="" ref="0x40f90438"/>
        <function-ref name="overflow" scoped="" ref="0x40f901c0"/>
        <function-ref name="isOn" scoped="" ref="0x40f90e18"/>
        <function-ref name="set" scoped="" ref="0x40f92ef0"/>
        <function-ref name="start" scoped="" ref="0x40f906b0"/>
        <function-ref name="stop" scoped="" ref="0x40f90928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40afd570" loc="28:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40afd570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40afdbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40af9688" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40af9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af9dd8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40af62e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40af6068"/>
        <function-ref name="overflow" scoped="" ref="0x40af6558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b1ae90" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b1ae90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TOne" ref="0x4034ddb0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b19600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b19af0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b19878"/>
        <function-ref name="overflow" scoped="" ref="0x40b19d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b0f078" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b0f078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40b0eab8"/>
        <function-ref name="test" scoped="" ref="0x40b0e5c8"/>
        <function-ref name="get" scoped="" ref="0x40b0f6c0"/>
        <function-ref name="setScale" scoped="" ref="0x40b0ed30"/>
        <function-ref name="getScale" scoped="" ref="0x40b0d010"/>
        <function-ref name="reset" scoped="" ref="0x40b0fe50"/>
        <function-ref name="overflow" scoped="" ref="0x40b0fbd8"/>
        <function-ref name="isOn" scoped="" ref="0x40b0e840"/>
        <function-ref name="set" scoped="" ref="0x40b0f938"/>
        <function-ref name="start" scoped="" ref="0x40b0e0d8"/>
        <function-ref name="stop" scoped="" ref="0x40b0e350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b220e0" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b220e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b22830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b22d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b22aa8"/>
        <function-ref name="overflow" scoped="" ref="0x40b21010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b0ce60" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b0ce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b235e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b23ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b23858"/>
        <function-ref name="overflow" scoped="" ref="0x40b23d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b21f18" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b21f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1f578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b1f8c8" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b1f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1e048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b1e538"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b1e2c0"/>
        <function-ref name="overflow" scoped="" ref="0x40b1e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b41010" loc="31:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b41010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326bd0"/>
            <typename><typedef-ref name="TMicro" ref="0x40326d98"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b41760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b42e00" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TransmitPowerFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b42e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b3e010"/>
        <function-ref name="get" scoped="" ref="0x40b3e0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40b3e1d0"/>
        <function-ref name="set" scoped="" ref="0x40b3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b3d3e0" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.RSSIFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b3d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b3d5b8"/>
        <function-ref name="get" scoped="" ref="0x40b3d698"/>
        <function-ref name="setValue" scoped="" ref="0x40b3d778"/>
        <function-ref name="set" scoped="" ref="0x40b3d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b3ca30" loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/MetadataFlagC.nc">
      <component-ref qname="RF230DriverLayerC.TimeSyncFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b3ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b3cc08"/>
        <function-ref name="get" scoped="" ref="0x40b3cce8"/>
        <function-ref name="setValue" scoped="" ref="0x40b3cdc8"/>
        <function-ref name="set" scoped="" ref="0x40b3cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b6d950" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b6d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b6db28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b6dc08"/>
        <function-ref name="led1On" scoped="" ref="0x40b6dce8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b6ddc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b6dea8"/>
        <function-ref name="get" scoped="" ref="0x40b6a010"/>
        <function-ref name="led1Off" scoped="" ref="0x40b6a0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b6a470"/>
        <function-ref name="set" scoped="" ref="0x40b6a1d0"/>
        <function-ref name="led0On" scoped="" ref="0x40b6a2b0"/>
        <function-ref name="led2On" scoped="" ref="0x40b6a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40b67d28" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b67d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b67f00"/>
        <function-ref name="isInput" scoped="" ref="0x40b66010"/>
        <function-ref name="toggle" scoped="" ref="0x40b660f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b661d0"/>
        <function-ref name="get" scoped="" ref="0x40b662b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b66390"/>
        <function-ref name="set" scoped="" ref="0x40b66470"/>
        <function-ref name="clr" scoped="" ref="0x40b66550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b6acf0" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b6acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b6aec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40b66740" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b66740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b66918"/>
        <function-ref name="isInput" scoped="" ref="0x40b669f8"/>
        <function-ref name="toggle" scoped="" ref="0x40b66ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40b66bb8"/>
        <function-ref name="get" scoped="" ref="0x40b66c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b66d78"/>
        <function-ref name="set" scoped="" ref="0x40b66e58"/>
        <function-ref name="clr" scoped="" ref="0x40b65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40b67060" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b67060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b67238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b67318"/>
        <function-ref name="led1On" scoped="" ref="0x40b673f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b674d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b675b8"/>
        <function-ref name="get" scoped="" ref="0x40b67698"/>
        <function-ref name="led1Off" scoped="" ref="0x40b67778"/>
        <function-ref name="led2Off" scoped="" ref="0x40b67af8"/>
        <function-ref name="set" scoped="" ref="0x40b67858"/>
        <function-ref name="led0On" scoped="" ref="0x40b67938"/>
        <function-ref name="led2On" scoped="" ref="0x40b67a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40b65200" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b65200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b653d8"/>
        <function-ref name="isInput" scoped="" ref="0x40b654b8"/>
        <function-ref name="toggle" scoped="" ref="0x40b65598"/>
        <function-ref name="isOutput" scoped="" ref="0x40b65678"/>
        <function-ref name="get" scoped="" ref="0x40b65758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b65838"/>
        <function-ref name="set" scoped="" ref="0x40b65918"/>
        <function-ref name="clr" scoped="" ref="0x40b659f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40b7d8e8" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40b7d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7dac0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7dba0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7dc80"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7dd60"/>
        <function-ref name="get" scoped="" ref="0x40b7de40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7df20"/>
        <function-ref name="set" scoped="" ref="0x40b7c018"/>
        <function-ref name="clr" scoped="" ref="0x40b7c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40b7c308" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40b7c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7c4e0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7c5c0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7c6a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7c780"/>
        <function-ref name="get" scoped="" ref="0x40b7c860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7c940"/>
        <function-ref name="set" scoped="" ref="0x40b7ca20"/>
        <function-ref name="clr" scoped="" ref="0x40b7cb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40b7b6e0" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b7b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b7b8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40b7cd10" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40b7cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7cee8"/>
        <function-ref name="isInput" scoped="" ref="0x40b7b010"/>
        <function-ref name="toggle" scoped="" ref="0x40b7b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7b1d0"/>
        <function-ref name="get" scoped="" ref="0x40b7b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7b390"/>
        <function-ref name="set" scoped="" ref="0x40b7b470"/>
        <function-ref name="clr" scoped="" ref="0x40b7b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b6b940" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b6b940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b784c8"/>
        <function-ref name="fired" scoped="" ref="0x40b79768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b79e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b79c18"/>
        <function-ref name="getdt" scoped="" ref="0x40b78978"/>
        <function-ref name="gett0" scoped="" ref="0x40b78720"/>
        <function-ref name="isRunning" scoped="" ref="0x40b799c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b79010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b781a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b79290"/>
        <function-ref name="stop" scoped="" ref="0x40b79510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b769d0" loc="17:/opt/tinyos-2.x/tos/sensorboards/mda100/DemoSensorC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71010"/>
        <function-ref name="readDone" scoped="" ref="0x40b71268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fa9de0" loc="19:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fa9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa8448"/>
        <function-ref name="readDone" scoped="" ref="0x40fa86a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b95010" loc="39:/opt/tinyos-2.x/tos/sensorboards/mda100/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b95638"/>
        <function-ref name="readDone" scoped="" ref="0x40b95890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b92e28" loc="42:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b92e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b91468"/>
        <function-ref name="readDone" scoped="" ref="0x40b916c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b923d0" loc="41:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoImplP.nc">
      <component-ref qname="PhotoImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b923d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b925a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b92688"/>
        <function-ref name="request" scoped="" ref="0x40b92768"/>
        <function-ref name="granted" scoped="" ref="0x40b92848"/>
        <function-ref name="isOwner" scoped="" ref="0x40b92928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x40cba250" loc="44:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x40cba250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cba428"/>
        <function-ref name="isInput" scoped="" ref="0x40cba508"/>
        <function-ref name="toggle" scoped="" ref="0x40cba5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cba6c8"/>
        <function-ref name="get" scoped="" ref="0x40cba7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cba888"/>
        <function-ref name="set" scoped="" ref="0x40cba968"/>
        <function-ref name="clr" scoped="" ref="0x40cbaa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cbc118" loc="40:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cbc118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cbc750"/>
        <function-ref name="readDone" scoped="" ref="0x40cbc9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cbd940" loc="39:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cbd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cbdb28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cbdc08"/>
        <function-ref name="request" scoped="" ref="0x40cbdce8"/>
        <function-ref name="granted" scoped="" ref="0x40cbddc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cbdea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfig" ref="0x40cbccf0" loc="43:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcConfig" scoped="" ref="0x40cbccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40cbcec8"/>
        <function-ref name="getChannel" scoped="" ref="0x40cba010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40cba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40fdd7a8" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40fdd7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40fdd990"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fdda70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40fdc7c0" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40fdc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40fdc9a8"/>
        <function-ref name="configure" scoped="" ref="0x40fdca88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40fddbb0" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fddbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fddd88"/>
        <function-ref name="requested" scoped="" ref="0x40fdde68"/>
        <function-ref name="granted" scoped="" ref="0x40fdc010"/>
        <function-ref name="isOwner" scoped="" ref="0x40fdc0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fdc1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fdd068" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fdd068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fdd250"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fdd330"/>
        <function-ref name="request" scoped="" ref="0x40fdd410"/>
        <function-ref name="granted" scoped="" ref="0x40fdd4f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40fdd5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40fdc310" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fdc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fdc4e8"/>
        <function-ref name="userId" scoped="" ref="0x40fdc5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fc6c68" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fc6c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fc6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40fc4010" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40fc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40fc41e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40fc42c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40fc43a8"/>
        <function-ref name="dequeue" scoped="" ref="0x40fc4488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40fc38b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40fc38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40fc3a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fc3b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ffc8b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ffc8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ffca98"/>
        <function-ref name="configure" scoped="" ref="0x40ffcb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40ffccd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ffccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ffceb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ffa010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ffa0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40ffa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40fc3cb8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fc3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fc3e90"/>
        <function-ref name="requested" scoped="" ref="0x40ffc010"/>
        <function-ref name="granted" scoped="" ref="0x40ffc0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ffc1d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ffc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ffa310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ffa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ffa4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ffa5c8"/>
        <function-ref name="led1On" scoped="" ref="0x40ffa6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ffa788"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ffa868"/>
        <function-ref name="get" scoped="" ref="0x40ffa948"/>
        <function-ref name="led1Off" scoped="" ref="0x40ffaa28"/>
        <function-ref name="led0On" scoped="" ref="0x40ffada8"/>
        <function-ref name="set" scoped="" ref="0x40ffabe8"/>
        <function-ref name="led2On" scoped="" ref="0x40ffab08"/>
        <function-ref name="led2Off" scoped="" ref="0x40ffacc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fc3170" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fc3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fc3358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fc3438"/>
        <function-ref name="request" scoped="" ref="0x40fc3518"/>
        <function-ref name="granted" scoped="" ref="0x40fc35f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fc36d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ffc3f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ffc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ffc5c8"/>
        <function-ref name="userId" scoped="" ref="0x40ffc6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40ffaf28" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40ffaf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff9110"/>
        <function-ref name="runTask" scoped="" ref="0x40ff91f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40fdb7d8" loc="59:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40fdb7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fdb9b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40fdba90"/>
        <function-ref name="start" scoped="" ref="0x40fdbb70"/>
        <function-ref name="stop" scoped="" ref="0x40fdbc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40fdbd90" loc="61:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40fdbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40fda010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40fda150" loc="62:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fda150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fda328"/>
        <function-ref name="requested" scoped="" ref="0x40fda408"/>
        <function-ref name="granted" scoped="" ref="0x40fda4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fda5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fda6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40fda7e8" loc="63:/opt/tinyos-2.x/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fda7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fda9c0"/>
        <function-ref name="userId" scoped="" ref="0x40fdaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x41019970" loc="51:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41019970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41019b48"/>
        <function-ref name="stopDone" scoped="" ref="0x41019c28"/>
        <function-ref name="start" scoped="" ref="0x41019d08"/>
        <function-ref name="stop" scoped="" ref="0x41019de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41019f28" loc="53:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41019f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41018110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x41018d20" loc="68:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x41018d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41018ef8"/>
        <function-ref name="runTask" scoped="" ref="0x41017010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41018250" loc="54:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41018250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41018428"/>
        <function-ref name="requested" scoped="" ref="0x41018508"/>
        <function-ref name="granted" scoped="" ref="0x410185e8"/>
        <function-ref name="isOwner" scoped="" ref="0x410186c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410187a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x41017190" loc="63:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x41017190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41017368"/>
        <function-ref name="runTask" scoped="" ref="0x41017448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x41019578" loc="50:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41019578"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41019750"/>
        <function-ref name="stop" scoped="" ref="0x41019830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x410188e8" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410188e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41018ac0"/>
        <function-ref name="userId" scoped="" ref="0x41018ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40fd8800" loc="39:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40fd8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fd89d8"/>
        <function-ref name="stopDone" scoped="" ref="0x40fd8ab8"/>
        <function-ref name="start" scoped="" ref="0x40fd8b98"/>
        <function-ref name="stop" scoped="" ref="0x40fd8c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EnablePin" ref="0x40fd44d0" loc="45:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnablePin" scoped="" ref="0x40fd44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fd46a8"/>
        <function-ref name="isInput" scoped="" ref="0x40fd4788"/>
        <function-ref name="toggle" scoped="" ref="0x40fd4868"/>
        <function-ref name="isOutput" scoped="" ref="0x40fd4948"/>
        <function-ref name="get" scoped="" ref="0x40fd4a28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fd4b08"/>
        <function-ref name="set" scoped="" ref="0x40fd4be8"/>
        <function-ref name="clr" scoped="" ref="0x40fd4cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AnalogDeviceResource" ref="0x40fd7af8" loc="43:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AnalogDeviceResource" scoped="" ref="0x40fd7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd7cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fd7db0"/>
        <function-ref name="request" scoped="" ref="0x40fd7e90"/>
        <function-ref name="granted" scoped="" ref="0x40fd6010"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDoneTask" ref="0x40fd2ab0" loc="108:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDoneTask" scoped="" ref="0x40fd2ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd2c88"/>
        <function-ref name="runTask" scoped="" ref="0x40fd2d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fd8ec0" loc="40:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fd8ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd7558"/>
        <function-ref name="readDone" scoped="" ref="0x40fd77c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x40fd2ee8" loc="77:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x40fd2ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd10e0"/>
        <function-ref name="runTask" scoped="" ref="0x40fd11c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40fd4eb8" loc="46:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40fd4eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fd2520"/>
        <function-ref name="readDone" scoped="" ref="0x40fd2798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40fd62c0" loc="44:/opt/tinyos-2.x/tos/sensorboards/mda100/SharedAnalogDeviceP.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.AnalogDevice"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fd62c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fd5db0"/>
        <function-ref name="fired" scoped="" ref="0x40fd5068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fd5770"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fd5518"/>
        <function-ref name="getdt" scoped="" ref="0x40fd42a0"/>
        <function-ref name="gett0" scoped="" ref="0x40fd4048"/>
        <function-ref name="isRunning" scoped="" ref="0x40fd52c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fd68e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fd5a90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fd6b68"/>
        <function-ref name="stop" scoped="" ref="0x40fd6de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40fcfc58" loc="28:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40fcfc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40fcfe30"/>
        <function-ref name="configure" scoped="" ref="0x40fcff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40fd0b78" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40fd0b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fcf200"/>
        <function-ref name="readDone" scoped="" ref="0x40fcf478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40fcf780" loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40fcf780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40fcf958"/>
        <function-ref name="getChannel" scoped="" ref="0x40fcfa38"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40fcfb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fd0450" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadNowClientC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fd0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fd0628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fd0708"/>
        <function-ref name="request" scoped="" ref="0x40fd07e8"/>
        <function-ref name="granted" scoped="" ref="0x40fd08c8"/>
        <function-ref name="isOwner" scoped="" ref="0x40fd09a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c25028" loc="18:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c25028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c25650"/>
        <function-ref name="readDone" scoped="" ref="0x40c258a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40c24010" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40c24010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c24658"/>
        <function-ref name="readDone" scoped="" ref="0x40c248d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40c23010" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c231e8"/>
        <function-ref name="getChannel" scoped="" ref="0x40c232c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c233a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c23848" loc="23:/opt/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c23848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c23a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c23b00"/>
        <function-ref name="request" scoped="" ref="0x40c23be0"/>
        <function-ref name="granted" scoped="" ref="0x40c23cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c23da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c1c100" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c1c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c1c2d8"/>
        <function-ref name="configure" scoped="" ref="0x40c1c3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c15870" loc="47:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c15870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c15a48"/>
        <function-ref name="dataReady" scoped="" ref="0x40c15b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c19300" loc="46:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c19300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c194d8"/>
        <function-ref name="cancel" scoped="" ref="0x40c195b8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c19698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c21838" loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c21838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c21a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c21af0"/>
        <function-ref name="request" scoped="" ref="0x40c21bd0"/>
        <function-ref name="granted" scoped="" ref="0x40c21cb0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c21d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c1cd70" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c1cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c3f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c3fc00" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c3fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c3fdd8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c3feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c3f678" loc="89:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c3f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c3f850"/>
        <function-ref name="cancel" scoped="" ref="0x40c3f930"/>
        <function-ref name="dataReady" scoped="" ref="0x40c3fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40c34498" loc="93:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c34498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c34670"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c34750"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c34830"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c34910"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c349f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c34ad0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c34bb0"/>
        <function-ref name="isComplete" scoped="" ref="0x40c34c90"/>
        <function-ref name="cancel" scoped="" ref="0x40c34d70"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c34e50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c3d010"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c3d0f0"/>
        <function-ref name="startConversion" scoped="" ref="0x40c3d1d0"/>
        <function-ref name="isStarted" scoped="" ref="0x40c3d330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c3d410"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c3d4f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c3d5d0"/>
        <function-ref name="getValue" scoped="" ref="0x40c3d6b0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c3d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c3f1e8" loc="88:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c3f1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c3f3c0"/>
        <function-ref name="stop" scoped="" ref="0x40c3f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40c3d968" loc="94:/opt/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c3d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40c3db40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40c3dc20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40c3dd00"/>
        <function-ref name="actualMicro" scoped="" ref="0x40c3dde0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40c3dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c1b9f8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c1b9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c1bbd0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c1bcb0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c1bd90"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c1be70"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c43010"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c430f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c431d0"/>
        <function-ref name="isComplete" scoped="" ref="0x40c432b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c43390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c43470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c43550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c43630"/>
        <function-ref name="startConversion" scoped="" ref="0x40c43710"/>
        <function-ref name="isStarted" scoped="" ref="0x40c43870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c43950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c43a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c43b10"/>
        <function-ref name="getValue" scoped="" ref="0x40c43bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c43cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c42730" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c42730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c42908"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c429e8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c42ac8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c42ba8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c42c88"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c42d68"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c42e48"/>
        <function-ref name="isComplete" scoped="" ref="0x40c42f28"/>
        <function-ref name="cancel" scoped="" ref="0x40c6b018"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c6b0f8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c6b1d8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c6b2b8"/>
        <function-ref name="startConversion" scoped="" ref="0x40c6b398"/>
        <function-ref name="isStarted" scoped="" ref="0x40c6b4f8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c6b5d8"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c6b6b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c6b798"/>
        <function-ref name="getValue" scoped="" ref="0x40c6b878"/>
        <function-ref name="dataReady" scoped="" ref="0x40c6b958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c6bb40" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c6bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c6bd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c44ea0" loc="82:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c44ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c400c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c401a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c40e28" loc="86:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c40e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c79050"/>
        <function-ref name="configure" scoped="" ref="0x40c79130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c402e0" loc="83:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c402e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c404b8"/>
        <function-ref name="requested" scoped="" ref="0x40c40598"/>
        <function-ref name="granted" scoped="" ref="0x40c40678"/>
        <function-ref name="isOwner" scoped="" ref="0x40c40758"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c40838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c44760" loc="81:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c44760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c44948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c44a28"/>
        <function-ref name="request" scoped="" ref="0x40c44b08"/>
        <function-ref name="granted" scoped="" ref="0x40c44be8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c44cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c40978" loc="84:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c40978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c40b50"/>
        <function-ref name="userId" scoped="" ref="0x40c40c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ffea40" loc="34:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ffea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ffec18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40ffed78" loc="35:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40ffed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41037010"/>
        <function-ref name="isEmpty" scoped="" ref="0x410370f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410371d0"/>
        <function-ref name="dequeue" scoped="" ref="0x410372b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41035750" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41035750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41035938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41035a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410346f0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410346f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410348d8"/>
        <function-ref name="configure" scoped="" ref="0x410349b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41034b18" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41034b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41034cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41034dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41034eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x41033010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41035b58" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41035b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41035d30"/>
        <function-ref name="requested" scoped="" ref="0x41035e10"/>
        <function-ref name="granted" scoped="" ref="0x41035ef0"/>
        <function-ref name="isOwner" scoped="" ref="0x41034010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410340f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41033150" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41033150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41033328"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41033408"/>
        <function-ref name="led1On" scoped="" ref="0x410334e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410335c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410336a8"/>
        <function-ref name="get" scoped="" ref="0x41033788"/>
        <function-ref name="led1Off" scoped="" ref="0x41033868"/>
        <function-ref name="led0On" scoped="" ref="0x41033be8"/>
        <function-ref name="set" scoped="" ref="0x41033a28"/>
        <function-ref name="led2On" scoped="" ref="0x41033948"/>
        <function-ref name="led2Off" scoped="" ref="0x41033b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41035010" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41035010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410351f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410352d8"/>
        <function-ref name="request" scoped="" ref="0x410353b8"/>
        <function-ref name="granted" scoped="" ref="0x41035498"/>
        <function-ref name="isOwner" scoped="" ref="0x41035578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41034230" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41034230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41034408"/>
        <function-ref name="userId" scoped="" ref="0x410344e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41033d68" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41033d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41032010"/>
        <function-ref name="runTask" scoped="" ref="0x410320f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40c77230" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40c77230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40c77408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40c77548" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c77548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c77720"/>
        <function-ref name="requested" scoped="" ref="0x40c77800"/>
        <function-ref name="granted" scoped="" ref="0x40c778e0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c779c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c77aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40c78da8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c78da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c77010"/>
        <function-ref name="stop" scoped="" ref="0x40c770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40c77be0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c77be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c77db8"/>
        <function-ref name="userId" scoped="" ref="0x40c77e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x410577a8" loc="52:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x410577a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41057980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41057ac0" loc="53:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41057ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41057c98"/>
        <function-ref name="requested" scoped="" ref="0x41057d78"/>
        <function-ref name="granted" scoped="" ref="0x41057e58"/>
        <function-ref name="isOwner" scoped="" ref="0x41056010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x410573b0" loc="50:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x410573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41057588"/>
        <function-ref name="stop" scoped="" ref="0x41057668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41056230" loc="54:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41056230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41056408"/>
        <function-ref name="userId" scoped="" ref="0x410564e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c925f8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c925f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c92c20"/>
        <function-ref name="readDone" scoped="" ref="0x40c92e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40c90598" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40c90598"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c90be0"/>
        <function-ref name="readDone" scoped="" ref="0x40c90e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40c8fab0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c8fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c8fc88"/>
        <function-ref name="getChannel" scoped="" ref="0x40c8fd68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c8fe48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40c8f238" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c8f238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c8f410"/>
        <function-ref name="cancel" scoped="" ref="0x40c8f4f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c8f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40c851e0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40c851e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c853b8"/>
        <function-ref name="runTask" scoped="" ref="0x40c85498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c938c0" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c938c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c93ef8"/>
        <function-ref name="readDone" scoped="" ref="0x40c9a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40c9a5e0" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40c9a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9ac18"/>
        <function-ref name="readDone" scoped="" ref="0x40c9ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c99218" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c99218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c99400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c994e0"/>
        <function-ref name="request" scoped="" ref="0x40c995c0"/>
        <function-ref name="granted" scoped="" ref="0x40c996a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c99780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fceb60" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoImplP.SharedAnalogDeviceC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fceb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40326350"/>
            <typename><typedef-ref name="TMilli" ref="0x40326518"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fcc6a8"/>
        <function-ref name="fired" scoped="" ref="0x40fcd938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fcc068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fcdde8"/>
        <function-ref name="getdt" scoped="" ref="0x40fccb58"/>
        <function-ref name="gett0" scoped="" ref="0x40fcc900"/>
        <function-ref name="isRunning" scoped="" ref="0x40fcdb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fcd1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fcc388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fcd460"/>
        <function-ref name="stop" scoped="" ref="0x40fcd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x40cb97e0" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x40cb97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb99b8"/>
        <function-ref name="isInput" scoped="" ref="0x40cb9a98"/>
        <function-ref name="toggle" scoped="" ref="0x40cb9b78"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb9c58"/>
        <function-ref name="get" scoped="" ref="0x40cb9d38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb9e18"/>
        <function-ref name="set" scoped="" ref="0x40cb9ef8"/>
        <function-ref name="clr" scoped="" ref="0x40cb6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40cda290" loc="34:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40cda290"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cda4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40cb5650" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40cb5650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb5828"/>
        <function-ref name="isInput" scoped="" ref="0x40cb5908"/>
        <function-ref name="toggle" scoped="" ref="0x40cb59e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb5ac8"/>
        <function-ref name="get" scoped="" ref="0x40cb5ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb5c88"/>
        <function-ref name="set" scoped="" ref="0x40cb5d68"/>
        <function-ref name="clr" scoped="" ref="0x40cb5e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40cb3490" loc="26:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40cb3490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb3668"/>
        <function-ref name="isInput" scoped="" ref="0x40cb3748"/>
        <function-ref name="toggle" scoped="" ref="0x40cb3828"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb3908"/>
        <function-ref name="get" scoped="" ref="0x40cb39e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb3ac8"/>
        <function-ref name="set" scoped="" ref="0x40cb3ba8"/>
        <function-ref name="clr" scoped="" ref="0x40cb3c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40cdae80" loc="37:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40cdae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdc070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40cdc638" loc="39:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40cdc638"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdc810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40cb12e0" loc="29:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40cb12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb14b8"/>
        <function-ref name="isInput" scoped="" ref="0x40cb1598"/>
        <function-ref name="toggle" scoped="" ref="0x40cb1678"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb1758"/>
        <function-ref name="get" scoped="" ref="0x40cb1838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb1918"/>
        <function-ref name="set" scoped="" ref="0x40cb19f8"/>
        <function-ref name="clr" scoped="" ref="0x40cb1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40cb61f0" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40cb61f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb63c8"/>
        <function-ref name="isInput" scoped="" ref="0x40cb64a8"/>
        <function-ref name="toggle" scoped="" ref="0x40cb6588"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb6668"/>
        <function-ref name="get" scoped="" ref="0x40cb6748"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb6828"/>
        <function-ref name="set" scoped="" ref="0x40cb6908"/>
        <function-ref name="clr" scoped="" ref="0x40cb69e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x40cb4050" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x40cb4050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb4228"/>
        <function-ref name="isInput" scoped="" ref="0x40cb4308"/>
        <function-ref name="toggle" scoped="" ref="0x40cb43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb44c8"/>
        <function-ref name="get" scoped="" ref="0x40cb45a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb4688"/>
        <function-ref name="set" scoped="" ref="0x40cb4768"/>
        <function-ref name="clr" scoped="" ref="0x40cb4848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40cda6e0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40cda6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cda8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40cb3e68" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40cb3e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb2050"/>
        <function-ref name="isInput" scoped="" ref="0x40cb2130"/>
        <function-ref name="toggle" scoped="" ref="0x40cb2210"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb22f0"/>
        <function-ref name="get" scoped="" ref="0x40cb23d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb24b0"/>
        <function-ref name="set" scoped="" ref="0x40cb2590"/>
        <function-ref name="clr" scoped="" ref="0x40cb2670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40cdca08" loc="40:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40cdca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40cb1cc8" loc="30:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40cb1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb1ea0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb0010"/>
        <function-ref name="toggle" scoped="" ref="0x40cb00f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb01d0"/>
        <function-ref name="get" scoped="" ref="0x40cb02b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb0390"/>
        <function-ref name="set" scoped="" ref="0x40cb0470"/>
        <function-ref name="clr" scoped="" ref="0x40cb0550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40cb6bc8" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40cb6bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb6da0"/>
        <function-ref name="isInput" scoped="" ref="0x40cb6e80"/>
        <function-ref name="toggle" scoped="" ref="0x40cb5010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb50f0"/>
        <function-ref name="get" scoped="" ref="0x40cb51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb52b0"/>
        <function-ref name="set" scoped="" ref="0x40cb5390"/>
        <function-ref name="clr" scoped="" ref="0x40cb5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40cb4a28" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40cb4a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb4c00"/>
        <function-ref name="isInput" scoped="" ref="0x40cb4ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb4dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb4ea0"/>
        <function-ref name="get" scoped="" ref="0x40cb3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb30f0"/>
        <function-ref name="set" scoped="" ref="0x40cb31d0"/>
        <function-ref name="clr" scoped="" ref="0x40cb32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40cdaab0" loc="36:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40cdaab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40cb2860" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40cb2860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb2a38"/>
        <function-ref name="isInput" scoped="" ref="0x40cb2b18"/>
        <function-ref name="toggle" scoped="" ref="0x40cb2bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb2cd8"/>
        <function-ref name="get" scoped="" ref="0x40cb2db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb2e98"/>
        <function-ref name="set" scoped="" ref="0x40cb1010"/>
        <function-ref name="clr" scoped="" ref="0x40cb10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40cdc268" loc="38:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40cdc268"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdc440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40cdcdd8" loc="41:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40cdcdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40cb0740" loc="31:/opt/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40cb0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb0918"/>
        <function-ref name="isInput" scoped="" ref="0x40cb09f8"/>
        <function-ref name="toggle" scoped="" ref="0x40cb0ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb0bb8"/>
        <function-ref name="get" scoped="" ref="0x40cb0c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb0d78"/>
        <function-ref name="set" scoped="" ref="0x40cb0e58"/>
        <function-ref name="clr" scoped="" ref="0x40caf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40cdb960" loc="18:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40cdb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40cd74e8" loc="21:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40cd74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd76c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40cd7c88" loc="23:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40cd7c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40cdbd30" loc="19:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40cdbd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cdbf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40cd6090" loc="24:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40cd6090"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd6268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40cd7118" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40cd7118"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd72f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40cd78b8" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40cd78b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd7a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40cd6460" loc="25:/opt/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40cd6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cd6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40ccbb28" loc="38:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigC.nc">
      <component-ref qname="PhotoTempConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40ccbb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40ccbd00"/>
        <function-ref name="getChannel" scoped="" ref="0x40ccbde0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40ccbec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x40cc8c88" loc="17:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x40cc8c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40cc8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40cc8688" loc="16:/opt/tinyos-2.x/tos/sensorboards/mda100/PhotoTempConfigP.nc">
      <component-ref qname="PhotoTempConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cc8688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40cc8860"/>
        <function-ref name="getChannel" scoped="" ref="0x40cc8940"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40cc8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b937f8" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b937f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b93e30"/>
        <function-ref name="readDone" scoped="" ref="0x40cc90b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40cc9518" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40cc9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cc9b50"/>
        <function-ref name="readDone" scoped="" ref="0x40cc9db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40cc6160" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cc6160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc6348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cc6428"/>
        <function-ref name="request" scoped="" ref="0x40cc6508"/>
        <function-ref name="granted" scoped="" ref="0x40cc65e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40cee6a0" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cee6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cee878"/>
        <function-ref name="getPayload" scoped="" ref="0x40cee958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ceea38"/>
        <function-ref name="cancel" scoped="" ref="0x40ceeb18"/>
        <function-ref name="sendDone" scoped="" ref="0x40ceebf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ceed38" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ceed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ceef10"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d2a010"/>
        <function-ref name="getPayload" scoped="" ref="0x40d2a0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d2a1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d2a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d2a3f0" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d2a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d2a5c8"/>
        <function-ref name="source" scoped="" ref="0x40d2a6a8"/>
        <function-ref name="address" scoped="" ref="0x40d2a788"/>
        <function-ref name="destination" scoped="" ref="0x40d2a868"/>
        <function-ref name="setSource" scoped="" ref="0x40d2a948"/>
        <function-ref name="setDestination" scoped="" ref="0x40d2aa28"/>
        <function-ref name="type" scoped="" ref="0x40d2ab08"/>
        <function-ref name="setType" scoped="" ref="0x40d2abe8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d2acc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d2ada8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d2ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40d29010" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40d29010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d291e8"/>
        <function-ref name="noAck" scoped="" ref="0x40d292c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d293a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41043430" loc="41:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41043430"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41043608"/>
        <function-ref name="getPayload" scoped="" ref="0x410436e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410437c8"/>
        <function-ref name="cancel" scoped="" ref="0x410438a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41043988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41043ac8" loc="42:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41043ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41043ca0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41043d80"/>
        <function-ref name="getPayload" scoped="" ref="0x41043e60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41042010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410420f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41042230" loc="43:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41042230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41042408"/>
        <function-ref name="source" scoped="" ref="0x410424e8"/>
        <function-ref name="address" scoped="" ref="0x410425c8"/>
        <function-ref name="destination" scoped="" ref="0x410426a8"/>
        <function-ref name="setSource" scoped="" ref="0x41042788"/>
        <function-ref name="setDestination" scoped="" ref="0x41042868"/>
        <function-ref name="type" scoped="" ref="0x41042948"/>
        <function-ref name="setType" scoped="" ref="0x41042a28"/>
        <function-ref name="isForMe" scoped="" ref="0x41042b08"/>
        <function-ref name="setGroup" scoped="" ref="0x41042be8"/>
        <function-ref name="localGroup" scoped="" ref="0x41042cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41042e28" loc="44:/opt/tinyos-2.x/tos/system/DirectAMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41042e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41041050"/>
        <function-ref name="noAck" scoped="" ref="0x41041130"/>
        <function-ref name="wasAcked" scoped="" ref="0x41041210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4103b010" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4103b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4103b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4103b2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4103b3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4103b488"/>
        <function-ref name="sendDone" scoped="" ref="0x4103b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4103b6d8" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4103b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4103b8b0"/>
        <function-ref name="getPayload" scoped="" ref="0x4103b990"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4103ba70"/>
        <function-ref name="cancel" scoped="" ref="0x4103bb50"/>
        <function-ref name="sendDone" scoped="" ref="0x4103bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4103bd70" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4103bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41076010"/>
        <function-ref name="source" scoped="" ref="0x410760f0"/>
        <function-ref name="address" scoped="" ref="0x410761d0"/>
        <function-ref name="destination" scoped="" ref="0x410762b0"/>
        <function-ref name="setSource" scoped="" ref="0x41076390"/>
        <function-ref name="setDestination" scoped="" ref="0x41076470"/>
        <function-ref name="type" scoped="" ref="0x41076550"/>
        <function-ref name="setType" scoped="" ref="0x41076630"/>
        <function-ref name="isForMe" scoped="" ref="0x41076710"/>
        <function-ref name="setGroup" scoped="" ref="0x410767f0"/>
        <function-ref name="localGroup" scoped="" ref="0x410768d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d03680" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d03680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d03858"/>
        <function-ref name="getPayload" scoped="" ref="0x40d03938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d03a18"/>
        <function-ref name="cancel" scoped="" ref="0x40d03af8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d03bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40cfdca8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40cfdca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cfde90"/>
        <function-ref name="getPayload" scoped="" ref="0x40d33010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d330f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d331d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cfd538" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cfd538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cfd720"/>
        <function-ref name="getPayload" scoped="" ref="0x40cfd800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cfd8e0"/>
        <function-ref name="cancel" scoped="" ref="0x40cfd9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40cfdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40d32010" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d321e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d322c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d323a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d32488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d32568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40d326e8" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40d326e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d328c0"/>
        <function-ref name="runTask" scoped="" ref="0x40d329a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40d32b20" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40d32b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d32cf8"/>
        <function-ref name="runTask" scoped="" ref="0x40d32dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40d333f0" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d333f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d335c8"/>
        <function-ref name="source" scoped="" ref="0x40d336a8"/>
        <function-ref name="address" scoped="" ref="0x40d33788"/>
        <function-ref name="destination" scoped="" ref="0x40d33868"/>
        <function-ref name="setSource" scoped="" ref="0x40d33948"/>
        <function-ref name="setDestination" scoped="" ref="0x40d33a28"/>
        <function-ref name="type" scoped="" ref="0x40d33b08"/>
        <function-ref name="setType" scoped="" ref="0x40d33be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d33cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d33da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40d33e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d27d60" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d27d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d25010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d250f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40d251d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d252b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d25390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d27a48" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d27a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d27c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d254d0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d254d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d256a8"/>
        <function-ref name="source" scoped="" ref="0x40d25788"/>
        <function-ref name="address" scoped="" ref="0x40d25868"/>
        <function-ref name="destination" scoped="" ref="0x40d25948"/>
        <function-ref name="setSource" scoped="" ref="0x40d25a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40d25b08"/>
        <function-ref name="type" scoped="" ref="0x40d25be8"/>
        <function-ref name="setType" scoped="" ref="0x40d25cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40d25da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40d25e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40d22010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40379010" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x403b5ac0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x403b5560" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403b5778" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403b5958" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x403bb7a0" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403bb440" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403bb620" loc="124:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403bede8" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x403bd7b0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403bd658" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403be4e0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403be188" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x403be380" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40380738" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403805e0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4037e730" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4037e5d8" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40379e30" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40380c48" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x403c55d0" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403c55d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x403c5a80" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x403cb260" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403c55d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x403c5f00" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x403cb100" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403c55d0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x403c3378" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
              <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403bad88" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x403c3010" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403c31f0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403d2298" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403d26e0" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403d2b60" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403d1458" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403d0158" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403d0600" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403d1010" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403d0d40" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403d0be8" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403c9e50" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403d18d8" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403d1d00" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x403c0ad8" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x403c0ad8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x403c6250" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x403bf0c8" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x403c8220" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403bfec0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403c80c0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x403bfa18" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x403c6bc8" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x403c6698" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x403bf558" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403c2168" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403c2010" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403c8c08" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x403c88c0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x403c8aa8" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x403c2800" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403c26a8" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403c2cd0" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403ea2e8" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403ed010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403eedd8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403f05c0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403f0bf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403f0aa0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403ee2d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403ee180" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403ee830" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403ffee0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403fe2e8" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403ff750" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403feab8" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403ffb10" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403fe6c0" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403ff010" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403ff3a0" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402d4898" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402d61c8" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402d4cd8" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402dd138" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402dd650" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40358b88" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.7 2009/07/01 19:27:00 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40365b28" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4030cbc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x40366168" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40508ee8" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40508ee8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40505098" loc="24:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40505098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405042a0" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40505098"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40504148" loc="52:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40504d38" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40504be0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40505720" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405055c8" loc="38:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40502820" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40505098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405024b0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405026c0" loc="67:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40505098"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x404eb638" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x404eb2c0" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404eb4d8" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x404df988" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404df830" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404e8370" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e8218" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404e6370" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e6010" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e61f0" loc="115:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404e79a8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404e7010" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e8c90" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e8e70" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x404ffb60" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ff7c8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x404ffa00" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x404fd650" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fd4f8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x404ff2f0" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x404f3ba0" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x404f3a48" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x404f51e0" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f5088" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x404f5cd8" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f5b80" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40501770" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40501618" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x405076a8" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40507550" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x404f6ab0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f6718" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x404f6950" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x404fbd18" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fbbc0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x404fb6a0" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404fb308" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x404fb540" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40508010" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40507e70" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x404fa488" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404fa330" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x404f1da8" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f1c50" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x404eccf0" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x404f13a8" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f1250" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x404ee710" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ee3a8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404ee5b0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x404ef9e8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ef680" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404ef888" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404ede28" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404edcd0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404f9978" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404f9648" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x404f9818" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403a8c70"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x404ed2f0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404ed198" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x404f8170" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404fada8" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x404f8010" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x404f89e8" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40512ec0" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40512ec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x4051f1c0" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051f068" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40510b80" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40512ec0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40510a28" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40510560" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40510408" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4051f968" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40512ec0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4051f5f0" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4051f808" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40512ec0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4051cca0" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4051cca0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x405181a8" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40512010" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40515a68" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40515910" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40512510" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405341a8" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40536878" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40536278" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40536d28" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405348a0" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="24:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40532758" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40532600" loc="30:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4052cb78" loc="26:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40532188" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40532030" loc="28:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405306d8" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530338" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40530578" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40532f28" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40532b88" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40532dc8" loc="32:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x4053f220" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052e320"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053f0c8" loc="38:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x4053f990" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052e320"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4053f600" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4053f830" loc="40:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4052e320"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40530c48" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530af0" loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4053fdd0" loc="42:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4052e320"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="34:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x4052a490" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x4052eee0" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4052e640"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x4052a148" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4052a328" loc="56:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405287f0" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40528490" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40528670" loc="111:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40529ee0" loc="99:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4052ae20" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052acc8" loc="72:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405298e8" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40529590" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40529788" loc="86:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40551be8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x4055f898" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x405507f0" loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x4054f558" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x4054fc20" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054fac8" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x4055fe08" loc="73:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x40550e00" loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405502e0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40550188" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x4055f358" loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40565d70" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565c18" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40564ae0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40564988" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40565010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40567e80" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40567240" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405670e8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405657a8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40565440" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40565648" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40567a08" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405676a0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405678a8" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40564508" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405641a8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x405643a8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4055a490" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4055aa98" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40558168" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40558010" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40559200" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405590a8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405598f8" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405597a0" loc="49:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40571488" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40562bf0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40562a98" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40571070" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40562578" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40571930" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x4057db48" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d9f0" loc="59:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4057f168" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after th header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057f010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4057fe80" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4057f9c0" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057f660" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4057f860" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x405739b0" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40573858" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4057d530" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057d3d8" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4054e9e0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4054e4e0" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054e388" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4054c168" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054c010" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x4054c6b0" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4054cde0" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054cc88" loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405408e8" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40540790" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405561f0" loc="75:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40548d20" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405489a8" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40548bc0" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4054acd8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054ab80" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405493b8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40549260" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40549cf0" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40549978" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40549b90" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4054bd98" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4054a618" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4054a2f0" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4054a4b8" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40548460" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40548308" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40569440" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405692e8" loc="120:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40575720" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405755c8" loc="157:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405603b8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40560068" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40560258" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4056f800" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056f6a8" loc="64:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x4056a620" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056a4c8" loc="109:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4056f168" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056f010" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x4056ae18" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056aad8" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x4056acb8" loc="114:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4056e798" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4056e420" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4056e638" loc="77:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40576940" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="142:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405765e0" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405767e0" loc="145:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40576168" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576010" loc="140:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40560a20" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405608c8" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4056c170" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4056ed28" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4056c010" loc="83:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4056c820" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056c6c8" loc="88:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40575010" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="147:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576e10" loc="151:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4056feb0" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056fd58" loc="70:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x4056a010" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056bbf8" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x4056bde8" loc="104:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40577a80" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40577720" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40577920" loc="135:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40569c28" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405698d8" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40569ac8" loc="125:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4056b060" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056cd00" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4056cec8" loc="94:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4055eb80" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055ea28" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405772a0" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40577148" loc="130:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4056b710" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056b5b8" loc="99:/opt/tinyos-2.x/tos/chips/rf2xx/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405543c8" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40554068" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40554268" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40554860" loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40555540" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405553e8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40555b88" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40555a30" loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x4055d8e0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055d788" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4055d200" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055d0a8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x4055ddd8" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x4055b4e8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055b390" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405ac7f0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405ac7f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405ac958" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405b9c78" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405ba950" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405b9630" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405b92e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          </variable>
          <variable name="dt" ref="0x405b94d0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405badc0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405b8138" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405ba010" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405ace30" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ac958"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ba4f0" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x405c07f8" loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x405c0dc8" loc="61:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x405bf4f8" loc="68:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x405c03d0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x405de168" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de010" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405dd1e0" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dd088" loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405dead8" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405de780" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405de978" loc="43:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x405dc1a8" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
              <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc030" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x405e4bd0" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405e3470" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405e3070" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x405e46e0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405e4378" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403a8ec8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405e4580" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4062e9a8" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4063e010" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4063cb90" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4063c6d0" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4063d268" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4063d768" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2009/04/15 03:01:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x406494d0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4062de98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40649378" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4062de98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40637158" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40637818" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4062de98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406376c0" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4062de98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40637dc8" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4062de98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x406e8c08" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
              <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e8a90" loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x406e8418" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e82c0" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x406f3900" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f37a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x406f3d80" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406f9e10" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f9cb8" loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406f3398" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f3240" loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x406f7800" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f76a8" loc="46:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x406f5518" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406f53c0" loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x406f7ee8" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f7d90" loc="51:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x406f5be8" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x406f5a90" loc="69:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x406f7168" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x406f7010" loc="38:/opt/tinyos-2.x/tos/chips/rf2xx/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403a7140"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4076a688" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4076a688"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4076a7f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076a7f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4076acd8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4076a7f0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4077e710" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4077e210" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4077eb38" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40793c40" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40793210" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40797de0" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x407937d0" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40793678" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40794d70" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40794c18" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40791218" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x407910c0" loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40794280" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407947f8" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407946a0" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x407a28a0" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x407a3568" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x407a3990" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x407a3e70" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407a2d60" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x407a23c0" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x4078da68" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403359e0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40335c08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x407a3088" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403359e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40335c08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4078df08" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403359e0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x40335c08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40790220" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40790220"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4078e138" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4078f0f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40790718" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40790220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4078f500" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4078e598" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40790ca0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40790220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40790b48" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40790220"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4078f908" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4078fd00" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40787ee8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40787ee8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x407816b8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40782e00" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x407843f8" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40787ee8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40781c48" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40781af0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x407800f8" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407821d8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40784da0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40781290" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40784970" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40787ee8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40784818" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40787ee8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x407825e0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407829d8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408531a8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40853be0" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4086e248" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4086e0f0" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x4086e6b8" loc="58:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408536e8" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4086ebf8" loc="63:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40855cd0" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40855b78" loc="37:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x4086b978" loc="52:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4086b460" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4086b308" loc="45:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x4088eb30" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4088e9d8" loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4088e4f8" loc="33:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
        <documentation loc="28:/opt/tinyos-2.x/tos/chips/rf2xx/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x408af168" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x408b2ca8" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401a2400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x408b4e70" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408b4e70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x408d34e8" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408b4e70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x408d3390" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x408b4e70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="24:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x408dbef8" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dbda0" loc="44:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x408dfbc8" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408dfa70" loc="29:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x408db3a8" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408db068" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x408db248" loc="34:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408db968" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408db810" loc="39:/opt/tinyos-2.x/tos/chips/rf2xx/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40957670" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40957670"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409577d8" loc="48:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409577d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40957df0" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409577d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40957c98" loc="55:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409577d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x4095be00" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409557c8" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40955380" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x40955228" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x4095b8f8" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="39:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;call FastSpiByte.spiSplitWrite(data[0]); // start the first byte&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  call FastSpiByte.spiSplitReadWrite(data[i]);&#10;&#9;}&#10;&#9;call FastSpiByte.spiSlitRead(); // finish the last byte&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x4095a278" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4095a120" loc="46:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x4095ae60" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4095ad08" loc="58:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x4095a788" loc="52:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40959518" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409593c0" loc="65:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x409f6098" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x409f4bc0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x409f4a68" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409f41d8" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409f6590" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409f5168" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409f5010" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409f55a8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409f4638" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409f6b08" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x409f69b0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409f6098"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409f59b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409f5da8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a07ba8" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a07638" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a07850" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a07a40" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a06298" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a05ac0" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a05cd8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a05ec8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a06128" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409e6168" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x409e6010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x409f9c40" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a15308" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a174b0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a158f0" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a15798" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x409f97f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a16420" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a162c8" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x409f76d0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x409f7578" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x409f84f8" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a12a10" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a128b8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x409f7b28" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a132c0" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a13168" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a13b48" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a16eb0" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a16d58" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a12480" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a17a40" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a178e8" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x409f8a90" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f8938" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a17090" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x409f7f20" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a168d0" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a15d18" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a136d0" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a12010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a17e78" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x409f8090" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x409f7088" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409f8f00" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40a497c0" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a49ca8" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x40a7e6c8" loc="61:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40a7dbc8" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x40a81e38" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40a7b630" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40a7b1c0" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40a7b068" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x40a7d1e0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40a7d088" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40a7bbf8" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40a7baa0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x40a7e2a0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x40a7d758" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40a7d600" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x40a7ec40" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40a7eae8" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40b8bd40" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40b8b848" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40b88290" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40baa1a8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40baab90" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40b84c40" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40baa6b8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40ba91a8" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40be55b8" loc="52:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40be3ca8" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40be01a8" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40bed070" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bed070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40bed540" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40bedd10" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bed070"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40bed9e0" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40bedbb0" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40bed070"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c17070" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c18860" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c18a88" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c18cb0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c18ed0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c153f0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c17990" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c17b80" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40c17d88" loc="110:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40c15010" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40c15278" loc="111:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40c1de68" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40c1d688" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40c1d8b0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40c1dad8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40c1dcf8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c19010" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c1a9a8" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c1a658" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40c1a848" loc="72:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40c37158" loc="105:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40c3e878" loc="44:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403227b0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40322a38"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40c366b8" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40c36560" loc="131:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40c37618" loc="113:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40c3a300" loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40c3ee90" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403227b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40322a38"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40c3ed38" loc="49:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403227b0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40322a38"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40c3ab50" loc="82:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40c36010" loc="124:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c36b60" loc="141:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40c3a700" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40c38440" loc="90:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40c38010" loc="86:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40c38878" loc="97:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40c37a88" loc="118:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402d0b90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40c3b9d0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403289f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40328d98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40c3b878" loc="60:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403289f0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40328d98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40c38d40" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40c3b3a0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403289f0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40328d98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40c3be80" loc="66:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c342c8" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c34170" loc="147:/opt/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401a1d68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40cda038" loc="20:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ce3ab0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ce3770" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ce3950" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40cdd5c0" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cdd260" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cdd440" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40ce0ce0" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401a1708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40cdf710" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cdf5b8" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ce03c0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ce0068" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:51" alignment="I:1"><nx_struct-ref name="message_t" ref="0x403b72e8"/>
                <typename><typedef-ref name="message_t" ref="0x403b50c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ce0260" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402d9bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>

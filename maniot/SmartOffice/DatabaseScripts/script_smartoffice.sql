-- Description : Script containing tables and procedures creation for the SmartOffice system
-- Developer   : Guillermo Ponce
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------

-- Clean existing tables and procedures 
DROP TABLE IF EXISTS maniot.environment;
DROP TABLE IF EXISTS maniot.learning;
DROP PROCEDURE IF EXISTS maniot.addEnvironment;
DROP PROCEDURE IF EXISTS maniot.addLearning;
DROP PROCEDURE IF EXISTS maniot.selectEnvironment;
DROP PROCEDURE IF EXISTS maniot.selectLearning;

-- Ensure that exists resources for the iris nodes
INSERT INTO maniot.resources (idThing, name, idAdm)
SELECT * FROM (SELECT 1, 'Iris1', 0  LIMIT 1) AS tmp
WHERE NOT EXISTS (SELECT name FROM maniot.resources WHERE idThing=1 AND name = 'Iris1');

INSERT INTO maniot.resources (idThing, name, idAdm)
SELECT * FROM (SELECT 1, 'Iris2', 0  LIMIT 1) AS tmp
WHERE NOT EXISTS (SELECT name FROM maniot.resources WHERE idThing=1 AND name = 'Iris2');
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------

-- Tables creation

-- Table 1, 'environment': Stores all the sensors values kept from the room environment 
-- Deprecated line: idEnvironment INT(10) unsigned zerofill NOT NULL AUTO_INCREMENT,
-- Deprecated line: PRIMARY KEY(idEnvironment)

CREATE TABLE maniot.environment(
    envTemperature INT (2) NOT NULL DEFAULT -1,
    envPressure INT(4) NOT NULL DEFAULT -1,
    envHumidity INT (3) NOT NULL DEFAULT -1,
    envNoise INT (2) NOT NULL DEFAULT -1,
    envAirQuality INT (5) NOT NULL DEFAULT -1,
    envLuminosity1 INT (5) NOT NULL DEFAULT -1,
    envLuminosity2 INT (5) NOT NULL DEFAULT -1,
    envOpenWindow INT(1) NOT NULL DEFAULT -1,
    envOpenDoor INT(1) NOT NULL DEFAULT -1,
    envTrackTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP
)   ENGINE=InnoDB DEFAULT CHARSET=latin1;
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------



-- Table 2, 'learning': Stores all values considered for the machine learning algorithm.
--                      Names with prefix 'env' refers sensor data (environment).
--                      Names with prefix 'acu' refers to configuration of 'air conditioner unit'
--                      'isUserOrSystem' field is used to identify if data was generated by the user  
--                      or by the machine learning algorithm                     
-- Deprecated line: idLearning INT(6) unsigned zerofill NOT NULL AUTO_INCREMENT,
-- Deprecated line: PRIMARY KEY(idLearning)

CREATE TABLE maniot.learning(
    envTemperature INT (2) NOT NULL DEFAULT -1,
    envPressure INT(4) NOT NULL DEFAULT -1,
    envHumidity INT (3) NOT NULL DEFAULT -1,
    envNoise INT (2) NOT NULL DEFAULT -1,
    envAirQuality INT (5) NOT NULL DEFAULT -1,
    envLuminosity1 INT (5) NOT NULL DEFAULT -1,
    envLuminosity2 INT (5) NOT NULL DEFAULT -1,
    envOpenWindow INT(1) NOT NULL DEFAULT -1, -- false = 0, true = 1 
    envOpenDoor INT(1) NOT NULL DEFAULT -1, -- false = 0, true = 1 

    acuAirOn INT(1) NOT NULL DEFAULT -1, -- false = 0, true = 1
    acuTemperature INT(2) NOT NULL DEFAULT -1,
    acuSpeed INT(1) NOT NULL DEFAULT -1, -- low = 0, medium = 1, high = 2, auto = 3
    acuSwingOn INT(1) NOT NULL DEFAULT -1, -- false = 0, true = 1
    roomLightOn INT(1) NOT NULL DEFAULT -1, -- false = 0, true = 1
    roomOpenShade INT(3) NOT NULL DEFAULT -1, -- 0 to 100

    userWeatherRating INT(1) NOT NULL DEFAULT -1.0, -- from 1 to 10
    userLuminosityRating INT(1) NOT NULL DEFAULT -1.0, -- from 1 to 10
    userNoiseRating INT (1) NOT NULL DEFAULT -1.0, -- from 1 to 10

    isUserOrSystem INT(1) NOT NULL DEFAULT -1, -- user=1, system=2
    learningTrackTime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    appUser VARCHAR(50) NOT NULL DEFAULT 'none'
)   ENGINE=InnoDB DEFAULT CHARSET=latin1; 
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------



-- Store procedures creation

-- SP 1, addEnvironment(): Synchonize values of arduino's sensors (temperature, pressure, humidity, 
--                         noise, airquality, openWindow) with values of iris' sensors (luminosity). 
--                         Values from arduino are passed as parameters and values from iris are obtained 
--                         from the table maniot.data. This procedure verify if the last values for 
--                         luminosity are close to the current datatime. If the values are older than 
--                         an specific timeWindow (ex. 10 sec), the value is considered obsolete and 
--                         setted with 0. Finally, all the values are inserted in the table maniot.environment 
--                         as an unique record.
-- TO DO line: --TRUNCATE TABLE maniot.data; <--- it should be put before the END reserve word.

DELIMITER //
CREATE PROCEDURE maniot.addEnvironment (IN newTemperature INT, IN newPressure FLOAT, IN newHumidity INT, IN newNoise INT, IN newAirQuality INT, IN newOpenWindow INT, IN newOpenDoor INT, IN irisTimeWindow INT)
 BEGIN
  -- get the last value of luminosity sensors
  SET @iris1Value = 0;
  SET @iris1Time = irisTimeWindow;
  SELECT d.value, d.time FROM maniot.data d, maniot.resources r 
  WHERE d.idResource = r.idResource AND d.idResource = 1 
  ORDER BY d.time DESC LIMIT 1 INTO @iris1Value, @iris1Time; 

  SET @iris2Value = 0;
  SET @iris2Time = irisTimeWindow;
  SELECT d.value, d.time FROM maniot.data d, maniot.resources r 
  WHERE d.idResource = r.idResource AND d.idResource = 2 
  ORDER BY d.time DESC LIMIT 1 INTO @iris2Value, @iris2Time; 

  -- ensure that luminosity values are new, if not then assign 0
  SET @now=CURRENT_TIMESTAMP;
  SET @iris1Diff = UNIX_TIMESTAMP(@now) - UNIX_TIMESTAMP(@iris1Time);	
  IF (@iris1Diff > irisTimeWindow) THEN
     SET @iris1Value = 0;
  END IF;

  SET @iris2Diff = UNIX_TIMESTAMP(@now) - UNIX_TIMESTAMP(@iris2Time);	
  IF (@iris2Diff > irisTimeWindow) THEN
     SET @iris2Value = 0;
  END IF;

  INSERT INTO maniot.environment (envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, envOpenWindow, envOpenDoor) 
  VALUES (newTemperature, newPressure, newHumidity, newNoise, newAirQuality, @iris1Value, @iris2Value, newOpenWindow, newOpenDoor);
  TRUNCATE TABLE maniot.data; 
 END
//


DELIMITER ;

-- addEnvironment test
SET @newTemperature = 23; SET @newPressure = 20; SET @newHumidity = 10; SET @newNoise = 300; 
SET @newAirQuality = 400; SET @newOpenWindow = 0; SET @newOpenDoor = 0; SET @irisTimeWindow = 20;
CALL maniot.addEnvironment(@newTemperature, @newPressure, @newHumidity, @newNoise, @newAirQuality, @newOpenWindow, @newOpenDoor, @irisTimeWindow);
SELECT * FROM maniot.environment;
--------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------



-- SP 2, addLearning(): Add a new record for learning, it could come from the predictor or from the user.
--                      In this case the user send via an android application  
-- TO DO line: --TRUNCATE TABLE maniot.environment; <--- it should be put before the END reserve word.

DELIMITER //
CREATE PROCEDURE maniot.addLearning (IN newAirOn INT, IN newTemperature INT, IN newSpeed INT, IN newSwingOn INT, IN newLightOn INT, IN newOpenShade INT, IN newUserWeatherRating INT, IN newUserLuminosityRating INT, IN newUserNoiseRating INT, IN newIsUserOrSystem INT, IN timeInterval INT, IN newAppUser VARCHAR(50))
    BEGIN
	SET @envTemperature = 0, @envPressure = 0, @envHumidity = 0, @envNoise = 0, @envAirQuality = 0, @envLuminosity1 = 0, @envLuminosity2 = 0, @envOpenWindow = 0, @envOpenDoor = 0;
	SELECT e.envTemperature, e.envPressure, e.envHumidity, e.envNoise, e.envAirQuality, e.envLuminosity1, e.envLuminosity2, e.envOpenWindow, e.envOpenDoor
        FROM maniot.environment e
        WHERE e.envTrackTime >= DATE_SUB(now(), INTERVAL 1 SECOND)
        ORDER BY e.envTrackTime DESC LIMIT 1
        INTO @envTemperature, @envPressure, @envHumidity, @envNoise, @envAirQuality, @envLuminosity1, @envLuminosity2, @envOpenWindow, @envOpenDoor;

        INSERT INTO maniot.learning (envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, envOpenWindow, envOpenDoor, acuAirOn, acuTemperature, acuSpeed, acuSwingOn, roomLightOn, roomOpenShade, userWeatherRating, userLuminosityRating, userNoiseRating, isUserOrSystem, appUser) 
        VALUES (@envTemperature, @envPressure, @envHumidity, @envNoise, @envAirQuality, @envLuminosity1, @envLuminosity2, @envOpenWindow, @envOpenDoor, newAirOn, newTemperature, newSpeed, newSwingOn, newLightOn, newOpenShade, newUserWeatherRating, newUserLuminosityRating, newUserNoiseRating, newIsUserOrSystem, newAppUser);
        TRUNCATE TABLE maniot.environment; 
    END
//

DELIMITER ;

-- addLearning() test
SET @air=1; SET @temp=2; SET @speed=1; SET @swing=1; SET @light=1; SET @shade=1; SET @weatherRating=2; SET @luminosityRating=6; 
SET @noiseRating=10; SET @isUserOrSystem=0; SET @rowsQuantity=1; SET @timeInterval=20;	
CALL maniot.addLearning (@air, @temp, @speed, @swing, @light, @shade, @weatherRating, @luminosityRating, @noiseRating, @isUserOrSystem, @timeInterval);
CALL maniot.addLearning (1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 20000, 'daniel'); 
SELECT * from maniot.learning;




-------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE maniot.selectEnvironment (IN rowsQuantity INT, IN timeInterval INT)
    BEGIN
        IF (timeInterval=-1) THEN
	    SELECT envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, envOpenWindow, 
                   envOpenDoor, envTrackTime 
            FROM maniot.environment 
            ORDER BY envTrackTime DESC LIMIT rowsQuantity;
        ELSE
	    SELECT envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, envOpenWindow, 
                   envOpenDoor, envTrackTime
	    FROM maniot.environment
	    WHERE envTrackTime >= DATE_SUB(now(), INTERVAL timeInterval SECOND)
	    ORDER BY envTrackTime DESC LIMIT rowsQuantity;
        END IF;
    END
//

DELIMITER ;

-- selectEnvironment() test
SET @nrowsenv=1; SET @secondsenv=-1;
CALL maniot.selectEnvironment(@nrowsenv, @secondsenv);


----------------------------------------------------------


DELIMITER //
CREATE PROCEDURE maniot.selectLearning (IN rowsQuantity INT, IN timeInterval INT)
    BEGIN
        IF (timeInterval=-1) THEN
            SELECT envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, 
                   envOpenWindow, envOpenDoor, acuAirOn, acuTemperature, acuSpeed, acuSwingOn, roomLightOn, roomOpenShade, userWeatherRating, 
                   userLuminosityRating, userNoiseRating, isUserOrSystem, learningTrackTime 
            FROM maniot.learning 
            ORDER BY learningTrackTime DESC LIMIT rowsQuantity;
        ELSE
            SELECT envTemperature, envPressure, envHumidity, envNoise, envAirQuality, envLuminosity1, envLuminosity2, 
                   envOpenWindow, envOpenDoor, acuAirOn, acuTemperature, acuSpeed, acuSwingOn, roomLightOn, roomOpenShade, userWeatherRating, 
                   userLuminosityRating, userNoiseRating, isUserOrSystem, learningTrackTime
	    FROM maniot.learning 
            WHERE learningTrackTime >= DATE_SUB(now(), INTERVAL timeInterval SECOND)
            ORDER BY learningTrackTime DESC LIMIT rowsQuantity;
        END IF;
    END
//

DELIMITER ;

-- selectLearning() test
SET @nrows=1; SET @seconds=-1;
CALL maniot.selectLearning(@nrows, @seconds);


-- Insert new users from
INSERT INTO maniot.users VALUES (DEFAULT, 'admin', 'admin', 'admin');
INSERT INTO maniot.users VALUES (DEFAULT, 'guillermo', 'guillermo', 'guillermo');
INSERT INTO maniot.users VALUES (DEFAULT, 'daniel', 'daniel', 'daniel');

SELECT 'EXECUTION COMPLETED!'


